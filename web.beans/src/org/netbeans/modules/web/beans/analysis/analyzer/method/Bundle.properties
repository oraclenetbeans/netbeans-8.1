# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder

ERR_BadRestritedMethodType=Bean class of method return type specifies @Typed \
annotation, and the value member specifies a class which does not correspond \
to a type in the unrestricted set of bean types of a bean. 
ERR_BothAnnotationsMethod=The method has both {0} and {1} annotations.
ERR_ManyObservesParameter=An observer method should have only one parameter \
annotated by @Observes.
ERR_ManyDisposesParameter=A disposer method should have only one parameter \
annotated by @Disposes.
ERR_AbstractProducerMethod=A producer method must be a non-abstract method of a \
managed bean class or session bean class. 
ERR_AbstractDisposerMethod=A disposer method must be a non-abstract method of a \
managed bean class or session bean class.
ERR_WrongDelegateMethod=A delegate injection point must be initializer method \
parameter or bean constructor method parameter. 
ERR_DelegateIsNotInDecorator=Parameter is declared as @Delegate but its enclosing \
type element is not a decorator. 
ERR_FinalInterceptedMethod=The non-static, non-private method of a bean class of a \
managed bean is final and declares a method level interceptor binding.
ERR_FinalInterceptedClass=The non-static, non-private method of a final bean class of a \
managed bean declares a method level interceptor binding.

ERR_ProducerReturnIsTypeVar=A producer method return type should not be a type variable. 
ERR_ProducerReturnHasWildcard=A producer method return type should not contain a wildcard type parameter.

ERR_WrongScopeParameterizedProducerReturn=The producer method return type is a \
parameterized type with a type variable and has scope {0} (should be @Dependent).
ERR_StaticSpecializesProducer=A producer method annotated with @Specializes must be non-static.
ERR_NoDirectSpecializedProducer=A producer method annotated with @Specializes must \
directly override another producer method.

ERR_AbstractInitMethod=An initializer method should be a non-abstract.
ERR_StaticInitMethod=An initializer method should be a non-static.
ERR_GenericInitMethod=An initializer method should not be a generic.

ERR_ParameterNamedInjectionPoint=An injection point has a @Named annotation \
without value member specified.

ERR_WrongQualifierInjectionPointMeta=An injection point has type InjectionPoint \
and qualifier @Default but bean declares not @Dependent scope. 

ERR_BadSpecializesMethod=Method specializes another method but its bean type does \
not have all bean types of specialized method. 

ERR_FinalDecoratedBean=Delegate injection point matches a managed bean {0} which \
class is declared final.
ERR_FinalMethodDecoratedBean=Delegate injection point matches a managed bean {0} \
with final method {1} which is implemented by decorator.
ERR_DelegateTypeHasNoDecoratedType=The delegate type of a decorator must implement \
or extend every decorated type of decorator.

WARN_CallbackInterceptorBinding=Interceptor bindings for lifecycle callback methods \
includes only the interceptor bindings declared or inherited by the bean at the class \
level.
ERR_LifecycleInterceptorTarget=An interceptor for lifecycle callbacks may only \
declare interceptor binding types that are defined as @Target(TYPE). Interceptor {0} \
declares mismatch interceptor binding {1}.  

ERR_ProducerNotBusiness=A producer non-static method of a session bean class \
should be a business method of the session bean. 

ERR_DisposerNotBusiness=A disposer non-static method of a session bean class \
should be a business method of the session bean. 

ERR_ObserverNotBusiness=An observer non-static method of a session bean class \
should be a business method of the session bean. 

WARN_NamedInjectionPoint=The use of @Named as an injection point qualifier is not recommended.

ERR_NotPassivationProducerReturn=Producer method has a passivating scope {0} and should be \
passivation capable. But its return type is declared final and does not implement Serializable. 