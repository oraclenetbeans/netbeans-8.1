# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2010 Sun Microsystems, Inc.

LBL_CommitAction.popupName = Commit...
LBL_CommitProgress = Git Commit

Progress_Preparing_Commit=Preparing Commit...
LBL_Commit_Progress=Committing...

MSG_COMMIT_DONE = INFO: End of Commit
MSG_COMMIT_TITLE =     Git Commit
MSG_COMMIT_TITLE_SEP = ----------
MSG_COMMIT_INIT_SEP_ONE = Committing {0} file to repository:
MSG_COMMIT_INIT_SEP = Committing {0} files to repository:

MSG_COMMIT_AFTER_MERGE_QUERY = You are committing after a merge.\nMerged files excluded from commit will also be committed.\n\nContinue?
MSG_COMMIT_AFTER_MERGE_TITLE = Committing after a merge
MSG_COMMITED_FILES_AFTER_MERGE = Committing all merged files to repository.
MSG_LONG_COMMAND_QUERY = The command line for the commit command is probably too long.\nDo you wish to commit recursively all files under the following folders?{0}
MSG_LONG_COMMAND_TITLE = Command Line Too Long

MSG_WARNING_WRONG_USER=Author and Commiter must be in format 'A U Thor &lt;author@example.com&gt;'

NewJPanel.jLabel1.text=jLabel1
# translation hint - HEAD is a git specific term for last revisition in repository, do not translate this word
ParametersPanel.tgbHeadVsWorking.toolTipText=Changes between HEAD and Working Tree
ParametersPanel.tgbIndexVsWorking.toolTipText=Changes between Index and Working Tree
# translation hint - HEAD is a git specific term for last revisition in repository, do not translate this word
ParametersPanel.tgbHeadVsIndex.toolTipText=Changes between HEAD and Index
ParametersPanel.jLabel1.text=Commit Message:

CTL_CommitForm_Message=Commit &Message\:
ACSN_CommitForm_Message=Commit Message
ACSD_CommitForm_Message=Message describing your commit
CommitOptionsPanel.jLabel2.text=Commiter:
CommitOptionsPanel.jLabel1.text_1=Author:
CommitOptionsPanel.sighOffCheckBox.text=Add Signed-off-by line by the committer at the end of the commit log message
CommitPanel.jLabel2.text=&Author:
CommitPanel.jLabel3.text=Commi&ter:
CommitPanel.recentLabel.text=
CommitPanel.templatesLabel.text=
CommitPanel.messageLabel.text=Commit &Message:
MSG_CommitForm_ErrorConflicts=You cannot commit Files with Conflicts. Edit Files and resolve Conflicts first.
MSG_ERROR_NO_FILES=No files available for commit.
LBL_CommitAction_CannotCommit = Cannot commit
LBL_CommitAction_CommitNotAllowed_State = Commit is not allowed in the current repository state: {0}
LBL_CommitAction_CommitNotAllowed_Conflicts = There are local conflicts that need to be resolved before commit.\nDo you want to display the files?
MSG_CommitPanel.afterMerge = Committing after a merge, all modified files must be committed.
MSG_CommitAction.logCommit.title =     Commit Log
MSG_CommitAction.logCommit.revision =  revision   : 
MSG_CommitAction.logCommit.author =    author     : 
MSG_CommitAction.logCommit.committer = committer  :
MSG_CommitAction.logCommit.date      = date       : 
MSG_CommitAction.logCommit.summary   = summary    : 

LBL_DeleteLocalAction_Name=&Delete
CTL_PopupMenuItem_Delete=Delete
CTL_DeleteLocal_Title = Confirm Delete
CTL_DeleteLocal_Prompt = Do you want to delete selected files?
MSG_Cannot_lock=Can not lock {0}.
LBL_DeleteLocalAction.progress=Deleting Files

LBL_ExcludeFromCommitAction_PopupName = Exclude From Commit

LBL_IncludeInCommitAction_PopupName = Include In Commit
CommitPanel.amendCheckBox.text=Am&end Last Commit
CommitPanel.amendCheckBox.TTtext=Modifies the last commit and updates its commit message and modified files
