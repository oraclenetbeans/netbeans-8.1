<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.

Oracle and Java are registered trademarks of Oracle and/or its affiliates.
Other names may be trademarks of their respective owners.

The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
particular file as subject to the "Classpath" exception as provided
by Oracle in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2009 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->
<?xml-stylesheet type="text/xml" href="../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../nbbuild/javadoctools/apichanges.dtd">
<apichanges>
    <apidefs>
        <apidef name="keyring">Keyring API</apidef>
    </apidefs>
    <changes>
        <change id="edt">
            <api name="keyring"/>
            <summary>Keyring API usable from any thread</summary>
            <version major="1" minor="10"/>
            <date day="6" month="1" year="2012"/>
            <author login="phejl"/>
            <compatibility>
                <p>
                    Existing callers should use the Keyring directly from
                    any thread and should not try to avoid EDT anymore.
                </p>
                <p>
                    SPI implementors should not be changed and they may
                    continue to assume that they will not be called directly
                    from EDT.
                </p>
            </compatibility>
            <description>
                <p>
                    It hasn't been allowed to call the Keyring from EDT.
                    This change removes the limitation as the need to read
                    password from the UI is not so rare. To resolve this people
                    had to code custom threading solution to prevent possible
                    deadlock on fallback implementation of the keyring API.
                </p>
            </description>
            <class package="org.netbeans.api.keyring" name="Keyring"/>
            <issue number="206475"/>
        </change>
        <change id="initial">
            <api name="keyring"/>
            <summary>Keyring API created</summary>
            <version major="1" minor="0"/>
            <date day="11" month="12" year="2009"/>
            <author login="jglick"/>
            <compatibility>
                <p>
                    Modules formerly storing passwords in some other way should
                    not only begin using <code>Keyring</code>, but also delete any
                    passwords from the old storage as they are transferred.
                </p>
            </compatibility>
            <description>
                <p>
                    A new API was created for securely storing user passwords.
                    Where possible it uses a native keyring.
                </p>
            </description>
            <issue number="173413"/>
        </change>
    </changes>
    <htmlcontents>
<!-- Generated from apichanges.xml -->
    <head>
      <title>Change History for the Keyring API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>
<p class="overviewlink"><a href="@TOP@/overview-summary.html">Overview</a></p>
<h1>Introduction</h1>
<p>This document lists changes made to the <a href="@TOP@/overview-summary.html">CHANGEME API</a>.</p>
      <hr/>
      <standard-changelists module-code-name="org.netbeans.modules.keyring"/>
      <hr/><p>@FOOTER@</p>
    </body>
  </htmlcontents>
</apichanges>
