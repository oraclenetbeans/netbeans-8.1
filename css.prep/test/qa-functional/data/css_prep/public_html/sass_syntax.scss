@mixin foo{
    colors: red;
}
.btn {
    &:primary {
        @include foo   
    } 
}
$baseLineHeight: 1px;
@mixin test($a, $b, $c){}

@mixin leader($a, $b){
    font: $a/$b;
}

h6 {
    $h6-font-size: 12;
    @include leader(1, $h6-font-size );
}

@mixin test2 {
    div{
        color: red;
    }
}
@media screen{
    @include test2;
}


blockquote {
    p {
        margin-bottom: 0;
        @include test(300,16px,$baseLineHeight * 1.25);
    }
}
@mixin clearfix{
    content: "vubec nic"
}

.pills {
    @include clearfix;
    > li {
        float: left;
        > a {
            display: block;
        }
    }
}
$baseLineHeight: 1em;

.form-actions {
    padding: ($baseLineHeight - 1) 20px $baseLineHeight;
}
@mixin opacity($opacity: 100) {
    filter: alpha(opacity=#{$opacity});
    opacity: $opacity / 100;
}

div{
    @include opacity(2)
}

$direction: top;
$foo: if($direction == top or $direction == bottom, 0, 1);

.highlighted {
    color: $foo;
}

@mixin linear-gradient($colorStops, $direction: top, $legacyColorStop: 1, $ieColorStops: '')
{
    background-color: nth(nth($colorStops, $legacyColorStop), 1);
}

.highlighted {
    @include linear-gradient((#3875d7 20%, #2a62bc 90%));
    color: #fff;
}
@mixin pes{
    $nic: 'a';
    @if type-of($nic) != 'number'
    {
        $nic: 1;
    }
    font-size: $nic;
}

div{
    @include pes;
}

.kaleidoscope {
    $max_segments: 5;
    $segments: 0;
    @while $segments <= $max_segments {
        &.n#{$segments} {
            .tile {
                font-size: $segments px;
            }
        }
        $segments: $segments + 1;
    }
}

@function mysize() {
    $a: 2;
    @return $a;
}

.test{
    font: mysize()
}

@mixin font-face($name, $path, $weight: normal, $style: normal){
    @font-face {
        font-family: $name;
        src: url('#{$path}.eot');
        font-weight: $weight;
        font-style: $style;
    }
}
@include font-face("tahoma", "netbeans.org");

@mixin m ( $selector, $hiResIcon)
{

    @media only screen and (min-resolution: 1000) {

        #{$selector}:before {
            content: $hiResIcon;
        }
    }
}

@mixin color-button($text-color, $bg-color) {
    color: $text-color;
    border: 1px solid mix(black, $bg-color);
    @include background-image(
    linear-gradient(
    lighten($bg-color, 5%),
    darken($bg-color, 5%)
    )
    );
}

$width-name: max-device-width;
$target-width: 320px;

@media screen and ($width-name : $target-width) {
    background: red;
}

$break-small: 320px;
$break-large: 1024px;

@mixin respond-to($media) {
    @if $media == handhelds {
        @media only screen and (max-width: $break-small) { @content; }
    }
    @else if $media == medium-screens {
        @media only screen and (min-width: $break-small + 1) and (max-width: $break-large - 1) { @content; }
    }
    @else if $media == wide-screens {
        @media only screen and (min-width: $break-large) { @content; }
    }
}

$boolean: true !default;

@mixin test{
    @if $boolean {
        display: block;}
    @else{
        display: none;
    }
}
.some-selector{
    @include test;  
}
@mixin border-radius($radius: 5px, $moz: true, $webkit: true, $ms: true) {
    @if $moz    { -moz-border-radius:    $radius; }
    @if $webkit { -webkit-border-radius: $radius; }
    @if $ms     { -ms-border-radius:     $radius; }
}
div{
    @include border-radius($webkit:false);
}

@mixin border-radius($radius, $prefixes: -moz -webkit -o) {
	@each $prefix in $prefixes {
		#{$prefix}-border-radius:$radius;
	}
	border-radius:$radius;
}
 
#id {
	@include border-radius(5px, -moz -webkit);
}