// $ANTLR 3.5.2 /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2015-09-08 12:04:02

/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", "INCLUDES", "INVALID", 
		"J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", 
		"LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", 
		"LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", 
		"MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", 
		"NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", 
		"PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", 
		"RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", 
		"SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FUNCTION", 
		"SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", "SASS_OPTIONAL", 
		"SASS_RETURN", "SASS_VAR", "SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", 
		"STAR", "STRING", "T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", 
		"TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URI", 
		"URL", "V", "W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int I=49;
	public static final int IDENT=50;
	public static final int IMPORTANT_SYM=51;
	public static final int IMPORT_SYM=52;
	public static final int INCLUDES=53;
	public static final int INVALID=54;
	public static final int J=55;
	public static final int K=56;
	public static final int L=57;
	public static final int LBRACE=58;
	public static final int LBRACKET=59;
	public static final int LEFTBOTTOM_SYM=60;
	public static final int LEFTMIDDLE_SYM=61;
	public static final int LEFTTOP_SYM=62;
	public static final int LENGTH=63;
	public static final int LESS=64;
	public static final int LESS_AND=65;
	public static final int LESS_JS_STRING=66;
	public static final int LESS_OR_EQ=67;
	public static final int LESS_REST=68;
	public static final int LINE_COMMENT=69;
	public static final int LPAREN=70;
	public static final int M=71;
	public static final int MEDIA_SYM=72;
	public static final int MINUS=73;
	public static final int MOZ_DOCUMENT_SYM=74;
	public static final int MOZ_DOMAIN=75;
	public static final int MOZ_REGEXP=76;
	public static final int MOZ_URL_PREFIX=77;
	public static final int N=78;
	public static final int NAME=79;
	public static final int NAMESPACE_SYM=80;
	public static final int NL=81;
	public static final int NMCHAR=82;
	public static final int NMSTART=83;
	public static final int NONASCII=84;
	public static final int NOT=85;
	public static final int NUMBER=86;
	public static final int O=87;
	public static final int OPEQ=88;
	public static final int P=89;
	public static final int PAGE_SYM=90;
	public static final int PERCENTAGE=91;
	public static final int PERCENTAGE_SYMBOL=92;
	public static final int PIPE=93;
	public static final int PLUS=94;
	public static final int Q=95;
	public static final int R=96;
	public static final int RBRACE=97;
	public static final int RBRACKET=98;
	public static final int REM=99;
	public static final int RESOLUTION=100;
	public static final int RIGHTBOTTOM_SYM=101;
	public static final int RIGHTMIDDLE_SYM=102;
	public static final int RIGHTTOP_SYM=103;
	public static final int RPAREN=104;
	public static final int S=105;
	public static final int SASS_AT_ROOT=106;
	public static final int SASS_CONTENT=107;
	public static final int SASS_DEBUG=108;
	public static final int SASS_DEFAULT=109;
	public static final int SASS_EACH=110;
	public static final int SASS_ELSE=111;
	public static final int SASS_ELSEIF=112;
	public static final int SASS_ERROR=113;
	public static final int SASS_EXTEND=114;
	public static final int SASS_EXTEND_ONLY_SELECTOR=115;
	public static final int SASS_FOR=116;
	public static final int SASS_FUNCTION=117;
	public static final int SASS_GLOBAL=118;
	public static final int SASS_IF=119;
	public static final int SASS_INCLUDE=120;
	public static final int SASS_MIXIN=121;
	public static final int SASS_OPTIONAL=122;
	public static final int SASS_RETURN=123;
	public static final int SASS_VAR=124;
	public static final int SASS_WARN=125;
	public static final int SASS_WHILE=126;
	public static final int SEMI=127;
	public static final int SOLIDUS=128;
	public static final int STAR=129;
	public static final int STRING=130;
	public static final int T=131;
	public static final int TILDE=132;
	public static final int TIME=133;
	public static final int TOPCENTER_SYM=134;
	public static final int TOPLEFTCORNER_SYM=135;
	public static final int TOPLEFT_SYM=136;
	public static final int TOPRIGHTCORNER_SYM=137;
	public static final int TOPRIGHT_SYM=138;
	public static final int U=139;
	public static final int UNICODE=140;
	public static final int URI=141;
	public static final int URL=142;
	public static final int V=143;
	public static final int W=144;
	public static final int WEBKIT_KEYFRAMES_SYM=145;
	public static final int WS=146;
	public static final int X=147;
	public static final int Y=148;
	public static final int Z=149;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "slAttribute", "fnAttributeName", "synpred28_Css3", "counterStyle", 
		"mediaExpression", "namespacePrefixName", "unaryOperator", "synpred34_Css3", 
		"synpred42_Css3", "margin_sym", "moz_document_function", "cp_math_expression", 
		"key_only", "less_selector_interpolation", "elementSubsequent", "cp_mixin_call_arg", 
		"fnAttributes", "synpred11_Css3", "expression", "less_selector_interpolation_exp", 
		"synpred25_Css3", "synpred22_Css3", "synpred12_Css3", "synpred29_Css3", 
		"less_condition_operator", "mediaQuery", "at_rule", "synpred6_Css3", "synpred14_Css3", 
		"cp_arg", "imports", "namespaces", "synpred9_Css3", "sass_each", "key_and", 
		"page", "sass_else", "sass_function_declaration", "mediaBodyItem", "cp_expression_atom", 
		"property", "mediaQueryList", "synpred2_Css3", "synpred7_Css3", "sass_extend_only_selector", 
		"less_function_in_condition", "syncTo_RBRACE", "sass_map_name", "moz_document", 
		"synpred19_Css3", "synpred43_Css3", "bodyItem", "cp_math_expression_atom", 
		"synpred10_Css3", "synpred30_Css3", "synpred18_Css3", "synpred27_Css3", 
		"combinator", "cp_expression", "atRuleId", "syncToDeclarationsRule", "operator", 
		"expressionPredicate", "cp_variable", "sass_function_name", "less_mixin_guarded", 
		"synpred26_Css3", "synpred37_Css3", "synpred23_Css3", "sass_interpolation_expression_var", 
		"synpred44_Css3", "sass_function_return", "webkitKeyframesBlock", "importItem", 
		"charSet", "syncTo_SEMI", "synpred17_Css3", "sass_content", "synpred15_Css3", 
		"resourceIdentifier", "rule", "fnAttributeValue", "sass_if", "selector", 
		"media", "slAttributeName", "sass_debug", "sass_while", "mediaQueryOperator", 
		"cp_term_symbol", "cp_expression_operator", "esPred", "less_import_types", 
		"synpred16_Css3", "mediaFeatureValue", "declaration", "cssClass", "cp_mixin_block", 
		"cp_mixin_call_args", "less_when", "cp_mixin_declaration", "synpred1_Css3", 
		"sass_extend", "fontFace", "cssId", "pseudoPage", "synpred45_Css3", "synpred31_Css3", 
		"styleSheet", "synpred33_Css3", "sass_selector_interpolation_exp", "margin", 
		"functionName", "synpred41_Css3", "slAttributeValue", "sass_for", "body", 
		"webkitKeyframeSelectors", "charSetValue", "synpred8_Css3", "selectorsGroup", 
		"pseudo", "sass_control_block", "cp_math_expressions", "less_fn_name", 
		"synpred5_Css3", "cp_propertyValue", "generic_at_rule", "prio", "vendorAtRule", 
		"synpred13_Css3", "synpred38_Css3", "term", "synpred39_Css3", "synpred32_Css3", 
		"synpred3_Css3", "webkitKeyframes", "propertyValue", "fnAttribute", "sass_control_expression", 
		"sass_map", "synpred35_Css3", "syncToFollow", "ws", "key_or", "namespacePrefix", 
		"synpred24_Css3", "cp_mixin_name", "sass_error", "synpred20_Css3", "typeSelector", 
		"cp_mixin_call", "synpred21_Css3", "cp_variable_declaration", "sass_each_variables", 
		"hexColor", "mediaType", "sass_map_pair", "sass_nested_properties", "propertyDeclaration", 
		"sass_control", "mediaFeature", "sass_map_pairs", "cp_expression_list", 
		"synpred40_Css3", "elementName", "mediaBody", "declarations", "synpred4_Css3", 
		"namespace", "simpleSelectorSequence", "synpred36_Css3", "cp_args_list", 
		"function", "less_condition"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, false, false, 
		    true, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, true, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, true, 
		    false, false, false, false, false, false, true, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	/**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	    /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:344:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(344, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:345:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(346,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:6: ws
					{
					dbg.location(346,6);
					pushFollow(FOLLOW_ws_in_styleSheet129);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(347,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:8: charSet ( ws )?
					{
					dbg.location(347,8);
					pushFollow(FOLLOW_charSet_in_styleSheet139);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(347,16);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:16: ws
							{
							dbg.location(347,16);
							pushFollow(FOLLOW_ws_in_styleSheet141);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(348,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: imports
					{
					dbg.location(348,9);
					pushFollow(FOLLOW_imports_in_styleSheet155);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(349,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:9: namespaces
					{
					dbg.location(349,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet166);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(350,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COLON)||LA6_0==COUNTER_STYLE_SYM||LA6_0==DCOLON||LA6_0==DOT||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_ELSE)||(LA6_0 >= SASS_EXTEND && LA6_0 <= SASS_FUNCTION)||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||(LA6_0 >= SASS_RETURN && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:350:9: body
					{
					dbg.location(350,9);
					pushFollow(FOLLOW_body_in_styleSheet177);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(351,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet185); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(352, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(354, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:355:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:2: ( namespace ( ws )? )+
			{
			dbg.location(356,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:4: namespace ( ws )?
					{
					dbg.location(356,4);
					pushFollow(FOLLOW_namespace_in_namespaces202);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(356,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:14: ws
							{
							dbg.location(356,14);
							pushFollow(FOLLOW_ws_in_namespaces204);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(357, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:359:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(359, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(360,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace220); if (state.failed) return;dbg.location(360,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:19: ws
					{
					dbg.location(360,19);
					pushFollow(FOLLOW_ws_in_namespace222);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(360,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:24: namespacePrefixName ( ws )?
					{
					dbg.location(360,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace226);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(360,44);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:44: ws
							{
							dbg.location(360,44);
							pushFollow(FOLLOW_ws_in_namespace228);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(360,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace233);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(360,69);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:69: ws
					{
					dbg.location(360,69);
					pushFollow(FOLLOW_ws_in_namespace235);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(360,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace238); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(361, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(363, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:5: IDENT
			{
			dbg.location(364,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName251); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(365, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(367, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(368,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(369, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:371:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(371, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(372,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet285); if (state.failed) return;dbg.location(372,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:21: ws
					{
					dbg.location(372,21);
					pushFollow(FOLLOW_ws_in_charSet287);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(372,25);
			pushFollow(FOLLOW_charSetValue_in_charSet290);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(372,38);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:38: ws
					{
					dbg.location(372,38);
					pushFollow(FOLLOW_ws_in_charSet292);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(372,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet295); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(373, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(375, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:376:2: ( STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:376:4: STRING
			{
			dbg.location(376,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue309); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(377, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:1: imports : ( importItem ( ws )? SEMI ( ws )? )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(379, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:2: ( ( importItem ( ws )? SEMI ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:2: ( importItem ( ws )? SEMI ( ws )? )+
			{
			dbg.location(381,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:2: ( importItem ( ws )? SEMI ( ws )? )+
			int cnt17=0;
			try { dbg.enterSubRule(17);

			loop17:
			while (true) {
				int alt17=2;
				try { dbg.enterDecision(17, decisionCanBacktrack[17]);

				int LA17_0 = input.LA(1);
				if ( (LA17_0==IMPORT_SYM) ) {
					int LA17_27 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt17=1;
					}

				}

				} finally {dbg.exitDecision(17);}

				switch (alt17) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:4: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(381,4);
					pushFollow(FOLLOW_importItem_in_imports323);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(381,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:15: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:15: ws
							{
							dbg.location(381,15);
							pushFollow(FOLLOW_ws_in_imports325);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(381,19);
					match(input,SEMI,FOLLOW_SEMI_in_imports328); if (state.failed) return;dbg.location(381,24);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:24: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:381:24: ws
							{
							dbg.location(381,24);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(17, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt17++;
			}
			} finally {dbg.exitSubRule(17);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(382, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(384, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt32=3;
			try { dbg.enterDecision(32, decisionCanBacktrack[32]);

			try {
				isCyclicDecision = true;
				alt32 = dfa32.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(32);}

			switch (alt32) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(386,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem356); if (state.failed) return;dbg.location(386,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:20: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:20: ws
							{
							dbg.location(386,20);
							pushFollow(FOLLOW_ws_in_importItem358);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}
					dbg.location(386,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem361);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(386,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						int LA20_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IDENT) ) {
						int LA20_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==NOT) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==GEN) ) {
						int LA20_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==HASH_SYMBOL) ) {
						int LA20_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==LPAREN) && (synpred1_Css3())) {
						alt20=1;
					}
					else if ( (LA20_0==SASS_MIXIN) ) {
						int LA20_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_VAR) ) {
						int LA20_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==AT_IDENT) ) {
						int LA20_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_INCLUDE) ) {
						int LA20_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_DEBUG||LA20_0==SASS_WARN) ) {
						int LA20_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_IF) ) {
						int LA20_19 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FOR) ) {
						int LA20_20 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EACH) ) {
						int LA20_21 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_WHILE) ) {
						int LA20_22 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_CONTENT) ) {
						int LA20_23 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==IMPORT_SYM) ) {
						int LA20_24 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_AT_ROOT) ) {
						int LA20_25 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==PAGE_SYM) ) {
						int LA20_26 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==FONT_FACE_SYM) ) {
						int LA20_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MOZ_DOCUMENT_SYM) ) {
						int LA20_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA20_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==MEDIA_SYM) ) {
						int LA20_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_EXTEND) ) {
						int LA20_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==COUNTER_STYLE_SYM) ) {
						int LA20_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( (LA20_0==SASS_FUNCTION) ) {
						int LA20_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					else if ( ((LA20_0 >= BOTTOMCENTER_SYM && LA20_0 <= BOTTOMRIGHT_SYM)||LA20_0==CHARSET_SYM||(LA20_0 >= LEFTBOTTOM_SYM && LA20_0 <= LEFTTOP_SYM)||LA20_0==NAMESPACE_SYM||(LA20_0 >= RIGHTBOTTOM_SYM && LA20_0 <= RIGHTTOP_SYM)||LA20_0==SASS_ELSE||LA20_0==SASS_RETURN||(LA20_0 >= TOPCENTER_SYM && LA20_0 <= TOPRIGHT_SYM)) ) {
						int LA20_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt20=1;
						}
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(386,66);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:66: ( ws )?
							int alt19=2;
							try { dbg.enterSubRule(19);
							try { dbg.enterDecision(19, decisionCanBacktrack[19]);

							int LA19_0 = input.LA(1);
							if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
								alt19=1;
							}
							} finally {dbg.exitDecision(19);}

							switch (alt19) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:66: ws
									{
									dbg.location(386,66);
									pushFollow(FOLLOW_ws_in_importItem371);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(19);}
							dbg.location(386,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem374);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(389,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(389,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem407); if (state.failed) return;dbg.location(389,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:38: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:38: ws
							{
							dbg.location(389,38);
							pushFollow(FOLLOW_ws_in_importItem409);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(389,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem412);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(389,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(24);

					loop24:
					while (true) {
						int alt24=2;
						try { dbg.enterDecision(24, decisionCanBacktrack[24]);

						try {
							isCyclicDecision = true;
							alt24 = dfa24.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(24);}

						switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(389,62);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ( ws )?
							int alt22=2;
							try { dbg.enterSubRule(22);
							try { dbg.enterDecision(22, decisionCanBacktrack[22]);

							int LA22_0 = input.LA(1);
							if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
								alt22=1;
							}
							} finally {dbg.exitDecision(22);}

							switch (alt22) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:62: ws
									{
									dbg.location(389,62);
									pushFollow(FOLLOW_ws_in_importItem415);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(22);}
							dbg.location(389,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem418); if (state.failed) return;dbg.location(389,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:72: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:72: ws
									{
									dbg.location(389,72);
									pushFollow(FOLLOW_ws_in_importItem420);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(389,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem423);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop24;
						}
					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(389,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
						int LA26_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IDENT) ) {
						int LA26_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==NOT) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==GEN) ) {
						int LA26_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==HASH_SYMBOL) ) {
						int LA26_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==LPAREN) && (synpred2_Css3())) {
						alt26=1;
					}
					else if ( (LA26_0==SASS_MIXIN) ) {
						int LA26_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_VAR) ) {
						int LA26_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==AT_IDENT) ) {
						int LA26_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_INCLUDE) ) {
						int LA26_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_DEBUG||LA26_0==SASS_WARN) ) {
						int LA26_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_IF) ) {
						int LA26_19 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FOR) ) {
						int LA26_20 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EACH) ) {
						int LA26_21 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_WHILE) ) {
						int LA26_22 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_CONTENT) ) {
						int LA26_23 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==IMPORT_SYM) ) {
						int LA26_24 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_AT_ROOT) ) {
						int LA26_25 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==PAGE_SYM) ) {
						int LA26_26 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==FONT_FACE_SYM) ) {
						int LA26_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MOZ_DOCUMENT_SYM) ) {
						int LA26_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA26_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==MEDIA_SYM) ) {
						int LA26_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_EXTEND) ) {
						int LA26_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==COUNTER_STYLE_SYM) ) {
						int LA26_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( (LA26_0==SASS_FUNCTION) ) {
						int LA26_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					else if ( ((LA26_0 >= BOTTOMCENTER_SYM && LA26_0 <= BOTTOMRIGHT_SYM)||LA26_0==CHARSET_SYM||(LA26_0 >= LEFTBOTTOM_SYM && LA26_0 <= LEFTTOP_SYM)||LA26_0==NAMESPACE_SYM||(LA26_0 >= RIGHTBOTTOM_SYM && LA26_0 <= RIGHTTOP_SYM)||LA26_0==SASS_ELSE||LA26_0==SASS_RETURN||(LA26_0 >= TOPCENTER_SYM && LA26_0 <= TOPRIGHT_SYM)) ) {
						int LA26_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(389,120);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:120: ( ws )?
							int alt25=2;
							try { dbg.enterSubRule(25);
							try { dbg.enterDecision(25, decisionCanBacktrack[25]);

							int LA25_0 = input.LA(1);
							if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
								alt25=1;
							}
							} finally {dbg.exitDecision(25);}

							switch (alt25) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:120: ws
									{
									dbg.location(389,120);
									pushFollow(FOLLOW_ws_in_importItem435);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(25);}
							dbg.location(389,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem438);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(391,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(391,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem462); if (state.failed) return;dbg.location(391,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:38: ( ws )?
					int alt27=2;
					try { dbg.enterSubRule(27);
					try { dbg.enterDecision(27, decisionCanBacktrack[27]);

					int LA27_0 = input.LA(1);
					if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
						alt27=1;
					}
					} finally {dbg.exitDecision(27);}

					switch (alt27) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:38: ws
							{
							dbg.location(391,38);
							pushFollow(FOLLOW_ws_in_importItem464);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(27);}
					dbg.location(391,42);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==LPAREN) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(391,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem468); if (state.failed) return;dbg.location(391,50);
							pushFollow(FOLLOW_less_import_types_in_importItem470);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(391,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem472); if (state.failed) return;dbg.location(391,75);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:75: ( ws )?
							int alt28=2;
							try { dbg.enterSubRule(28);
							try { dbg.enterDecision(28, decisionCanBacktrack[28]);

							int LA28_0 = input.LA(1);
							if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
								alt28=1;
							}
							} finally {dbg.exitDecision(28);}

							switch (alt28) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:75: ws
									{
									dbg.location(391,75);
									pushFollow(FOLLOW_ws_in_importItem474);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(28);}

							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(391,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem479);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(391,100);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						int LA31_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IDENT) ) {
						int LA31_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==NOT) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==GEN) ) {
						int LA31_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==HASH_SYMBOL) ) {
						int LA31_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==LPAREN) && (synpred3_Css3())) {
						alt31=1;
					}
					else if ( (LA31_0==SASS_MIXIN) ) {
						int LA31_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_VAR) ) {
						int LA31_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==AT_IDENT) ) {
						int LA31_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_INCLUDE) ) {
						int LA31_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_DEBUG||LA31_0==SASS_WARN) ) {
						int LA31_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_IF) ) {
						int LA31_19 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FOR) ) {
						int LA31_20 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EACH) ) {
						int LA31_21 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_WHILE) ) {
						int LA31_22 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_CONTENT) ) {
						int LA31_23 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==IMPORT_SYM) ) {
						int LA31_24 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_AT_ROOT) ) {
						int LA31_25 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==PAGE_SYM) ) {
						int LA31_26 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==FONT_FACE_SYM) ) {
						int LA31_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MOZ_DOCUMENT_SYM) ) {
						int LA31_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA31_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==MEDIA_SYM) ) {
						int LA31_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_EXTEND) ) {
						int LA31_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==COUNTER_STYLE_SYM) ) {
						int LA31_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( (LA31_0==SASS_FUNCTION) ) {
						int LA31_40 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					else if ( ((LA31_0 >= BOTTOMCENTER_SYM && LA31_0 <= BOTTOMRIGHT_SYM)||LA31_0==CHARSET_SYM||(LA31_0 >= LEFTBOTTOM_SYM && LA31_0 <= LEFTTOP_SYM)||LA31_0==NAMESPACE_SYM||(LA31_0 >= RIGHTBOTTOM_SYM && LA31_0 <= RIGHTTOP_SYM)||LA31_0==SASS_ELSE||LA31_0==SASS_RETURN||(LA31_0 >= TOPCENTER_SYM && LA31_0 <= TOPRIGHT_SYM)) ) {
						int LA31_41 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt31=1;
						}
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(391,123);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:123: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:123: ws
									{
									dbg.location(391,123);
									pushFollow(FOLLOW_ws_in_importItem489);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(391,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem492);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(392, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "media"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(393, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(394,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media510); if (state.failed) return;dbg.location(394,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ( ws )?
			int alt33=2;
			try { dbg.enterSubRule(33);
			try { dbg.enterDecision(33, decisionCanBacktrack[33]);

			int LA33_0 = input.LA(1);
			if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
				alt33=1;
			}
			} finally {dbg.exitDecision(33);}

			switch (alt33) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:17: ws
					{
					dbg.location(394,17);
					pushFollow(FOLLOW_ws_in_media512);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(33);}
			dbg.location(395,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:395:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:396:10: mediaQueryList
			{
			dbg.location(396,10);
			pushFollow(FOLLOW_mediaQueryList_in_media530);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(397,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:7: ( ws )?
			int alt34=2;
			try { dbg.enterSubRule(34);
			try { dbg.enterDecision(34, decisionCanBacktrack[34]);

			int LA34_0 = input.LA(1);
			if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
				alt34=1;
			}
			} finally {dbg.exitDecision(34);}

			switch (alt34) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:7: ws
					{
					dbg.location(397,7);
					pushFollow(FOLLOW_ws_in_media538);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(34);}
			dbg.location(398,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media545); if (state.failed) return;dbg.location(398,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:12: ( ws )?
			int alt35=2;
			try { dbg.enterSubRule(35);
			try { dbg.enterDecision(35, decisionCanBacktrack[35]);

			int LA35_0 = input.LA(1);
			if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
				alt35=1;
			}
			} finally {dbg.exitDecision(35);}

			switch (alt35) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:12: ws
					{
					dbg.location(398,12);
					pushFollow(FOLLOW_ws_in_media547);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(35);}
			dbg.location(398,16);
			pushFollow(FOLLOW_syncToFollow_in_media550);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(399,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:9: ( mediaBody )?
			int alt36=2;
			try { dbg.enterSubRule(36);
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			int LA36_0 = input.LA(1);
			if ( ((LA36_0 >= AT_IDENT && LA36_0 <= AT_SIGN)||(LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||(LA36_0 >= CHARSET_SYM && LA36_0 <= COLON)||LA36_0==COUNTER_STYLE_SYM||LA36_0==DCOLON||LA36_0==DOT||LA36_0==FONT_FACE_SYM||(LA36_0 >= GEN && LA36_0 <= GREATER)||(LA36_0 >= HASH && LA36_0 <= HASH_SYMBOL)||LA36_0==IDENT||LA36_0==IMPORT_SYM||(LA36_0 >= LBRACKET && LA36_0 <= LEFTTOP_SYM)||LA36_0==LESS_AND||(LA36_0 >= MEDIA_SYM && LA36_0 <= MOZ_DOCUMENT_SYM)||LA36_0==NAMESPACE_SYM||LA36_0==PAGE_SYM||(LA36_0 >= PIPE && LA36_0 <= PLUS)||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||(LA36_0 >= SASS_AT_ROOT && LA36_0 <= SASS_DEBUG)||(LA36_0 >= SASS_EACH && LA36_0 <= SASS_ELSE)||(LA36_0 >= SASS_EXTEND && LA36_0 <= SASS_FUNCTION)||(LA36_0 >= SASS_IF && LA36_0 <= SASS_MIXIN)||(LA36_0 >= SASS_RETURN && LA36_0 <= SEMI)||LA36_0==STAR||LA36_0==TILDE||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)||LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt36=1;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:9: mediaBody
					{
					dbg.location(399,9);
					pushFollow(FOLLOW_mediaBody_in_media560);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(36);}
			dbg.location(400,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media567); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(401, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(403, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(405,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:405:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt42=0;
			try { dbg.enterSubRule(42);

			loop42:
			while (true) {
				int alt42=4;
				try { dbg.enterDecision(42, decisionCanBacktrack[42]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt42=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA42_33 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt42=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt42=3;
					}

					}
					break;
				case SEMI:
					{
					alt42=2;
					}
					break;
				}
				} finally {dbg.exitDecision(42);}

				switch (alt42) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(406,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(406,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody601);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(406,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt38=2;
					try { dbg.enterSubRule(38);
					try { dbg.enterDecision(38, decisionCanBacktrack[38]);

					try {
						isCyclicDecision = true;
						alt38 = dfa38.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(38);}

					switch (alt38) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(406,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:39: ( ws )?
							int alt37=2;
							try { dbg.enterSubRule(37);
							try { dbg.enterDecision(37, decisionCanBacktrack[37]);

							int LA37_0 = input.LA(1);
							if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
								alt37=1;
							}
							} finally {dbg.exitDecision(37);}

							switch (alt37) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:39: ws
									{
									dbg.location(406,39);
									pushFollow(FOLLOW_ws_in_mediaBody611);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(37);}
							dbg.location(406,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody614); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(38);}
					dbg.location(406,50);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:50: ( ws )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:50: ws
							{
							dbg.location(406,50);
							pushFollow(FOLLOW_ws_in_mediaBody618);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(39);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:10: ( SEMI ( ws )? )
					{
					dbg.location(408,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:12: SEMI ( ws )?
					{
					dbg.location(408,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody645); if (state.failed) return;dbg.location(408,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:17: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:17: ws
							{
							dbg.location(408,17);
							pushFollow(FOLLOW_ws_in_mediaBody647);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(409,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(409,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(409,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody666);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(409,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:43: ( ws | ( SEMI ) )
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==COMMENT||LA41_0==NL||LA41_0==WS) ) {
						alt41=1;
					}
					else if ( (LA41_0==SEMI) ) {
						alt41=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 41, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:44: ws
							{
							dbg.location(409,44);
							pushFollow(FOLLOW_ws_in_mediaBody669);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:49: ( SEMI )
							{
							dbg.location(409,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:50: SEMI
							{
							dbg.location(409,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody674); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(41);}

					}

					}
					break;

				default :
					if ( cnt42 >= 1 ) break loop42;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(42, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt42++;
			}
			} finally {dbg.exitSubRule(42);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(411, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(413, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media )
			int alt47=13;
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			int LA47_0 = input.LA(1);
			if ( (LA47_0==LESS_AND) ) {
				int LA47_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==DOT) ) {
				int LA47_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==HASH) ) {
				int LA47_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==SASS_MIXIN) ) {
				int LA47_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=1;
				}
				else if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==AT_IDENT) ) {
				int LA47_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt47=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==SASS_INCLUDE) ) {
				int LA47_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt47=3;
				}
				else if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==STAR) ) {
				int LA47_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==IDENT) ) {
				int LA47_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==HASH_SYMBOL) ) {
				int LA47_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==MINUS) ) {
				int LA47_10 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==GEN) ) {
				int LA47_11 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==SASS_DEBUG||LA47_0==SASS_WARN) ) {
				int LA47_12 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_VAR) && (synpred8_Css3())) {
				alt47=4;
			}
			else if ( (LA47_0==SASS_IF) ) {
				int LA47_14 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_FOR) ) {
				int LA47_15 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_EACH) ) {
				int LA47_16 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_WHILE) ) {
				int LA47_17 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_CONTENT) ) {
				int LA47_18 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt47=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==IMPORT_SYM) ) {
				int LA47_19 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt47=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 47, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA47_0==SASS_AT_ROOT) ) {
				int LA47_20 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=9;
				}

			}
			else if ( (LA47_0==PAGE_SYM) ) {
				int LA47_21 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=10;
				}

			}
			else if ( (LA47_0==AT_SIGN||LA47_0==COLON||LA47_0==DCOLON||LA47_0==GREATER||LA47_0==LBRACKET||(LA47_0 >= PIPE && LA47_0 <= PLUS)||LA47_0==SASS_EXTEND_ONLY_SELECTOR||LA47_0==TILDE) ) {
				alt47=9;
			}
			else if ( (LA47_0==FONT_FACE_SYM) ) {
				int LA47_28 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=11;
				}

			}
			else if ( (LA47_0==MOZ_DOCUMENT_SYM) ) {
				int LA47_29 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA47_30 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=12;
				}

			}
			else if ( (LA47_0==MEDIA_SYM) ) {
				int LA47_31 = input.LA(2);
				if ( (((synpred8_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt47=4;
				}
				else if ( (true) ) {
					alt47=13;
				}

			}
			else if ( ((LA47_0 >= BOTTOMCENTER_SYM && LA47_0 <= BOTTOMRIGHT_SYM)||LA47_0==CHARSET_SYM||LA47_0==COUNTER_STYLE_SYM||(LA47_0 >= LEFTBOTTOM_SYM && LA47_0 <= LEFTTOP_SYM)||LA47_0==NAMESPACE_SYM||(LA47_0 >= RIGHTBOTTOM_SYM && LA47_0 <= RIGHTTOP_SYM)||LA47_0==SASS_ELSE||LA47_0==SASS_EXTEND||LA47_0==SASS_FUNCTION||LA47_0==SASS_RETURN||(LA47_0 >= TOPCENTER_SYM && LA47_0 <= TOPRIGHT_SYM)) && (synpred8_Css3())) {
				alt47=4;
			}

			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(415,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem748);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(417,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(417,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem781);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(417,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:87: ( ( ws )? IMPORTANT_SYM )?
					int alt44=2;
					try { dbg.enterSubRule(44);
					try { dbg.enterDecision(44, decisionCanBacktrack[44]);

					try {
						isCyclicDecision = true;
						alt44 = dfa44.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(44);}

					switch (alt44) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(417,88);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ( ws )?
							int alt43=2;
							try { dbg.enterSubRule(43);
							try { dbg.enterDecision(43, decisionCanBacktrack[43]);

							int LA43_0 = input.LA(1);
							if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
								alt43=1;
							}
							} finally {dbg.exitDecision(43);}

							switch (alt43) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:88: ws
									{
									dbg.location(417,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem784);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(43);}
							dbg.location(417,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(44);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(418,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(418,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem804);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(418,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:57: ( ( ws )? IMPORTANT_SYM )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					try {
						isCyclicDecision = true;
						alt46 = dfa46.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(418,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ( ws )?
							int alt45=2;
							try { dbg.enterSubRule(45);
							try { dbg.enterDecision(45, decisionCanBacktrack[45]);

							int LA45_0 = input.LA(1);
							if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
								alt45=1;
							}
							} finally {dbg.exitDecision(45);}

							switch (alt45) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:58: ws
									{
									dbg.location(418,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem807);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(45);}
							dbg.location(418,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )=> propertyDeclaration
					{
					dbg.location(419,74);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem849);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:7: {...}? sass_debug
					{
					dbg.location(420,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(420,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem859);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: {...}? sass_control
					{
					dbg.location(421,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(421,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem869);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: {...}? sass_content
					{
					dbg.location(422,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(422,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem879);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: {...}? importItem
					{
					dbg.location(423,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(423,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem889);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: rule
					{
					dbg.location(424,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem897);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: page
					{
					dbg.location(425,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem905);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: fontFace
					{
					dbg.location(426,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem913);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: vendorAtRule
					{
					dbg.location(427,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem921);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:7: media
					{
					dbg.location(429,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem934);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(430, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:432:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(432, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(433,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList948);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(433,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(50);

			loop50:
			while (true) {
				int alt50=2;
				try { dbg.enterDecision(50, decisionCanBacktrack[50]);

				try {
					isCyclicDecision = true;
					alt50 = dfa50.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(50);}

				switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(433,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:31: ( ws )?
					int alt48=2;
					try { dbg.enterSubRule(48);
					try { dbg.enterDecision(48, decisionCanBacktrack[48]);

					int LA48_0 = input.LA(1);
					if ( (LA48_0==COMMENT||LA48_0==NL||LA48_0==WS) ) {
						alt48=1;
					}
					} finally {dbg.exitDecision(48);}

					switch (alt48) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:31: ws
							{
							dbg.location(433,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList960);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(48);}
					dbg.location(433,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList963); if (state.failed) return;dbg.location(433,41);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:41: ( ws )?
					int alt49=2;
					try { dbg.enterSubRule(49);
					try { dbg.enterDecision(49, decisionCanBacktrack[49]);

					int LA49_0 = input.LA(1);
					if ( (LA49_0==COMMENT||LA49_0==NL||LA49_0==WS) ) {
						alt49=1;
					}
					} finally {dbg.exitDecision(49);}

					switch (alt49) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:41: ws
							{
							dbg.location(433,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList965);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(49);}
					dbg.location(433,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList968);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop50;
				}
			}
			} finally {dbg.exitSubRule(50);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(434, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(436, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:437:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt59=3;
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			switch ( input.LA(1) ) {
			case GEN:
			case HASH_SYMBOL:
			case IDENT:
			case NOT:
				{
				alt59=1;
				}
				break;
			case LPAREN:
				{
				alt59=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt59=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(438,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:5: ( mediaQueryOperator ( ws )? )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==IDENT) ) {
						int LA52_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt52=1;
						}
					}
					else if ( (LA52_0==NOT) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:6: mediaQueryOperator ( ws )?
							{
							dbg.location(438,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery987);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(438,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:25: ( ws )?
							int alt51=2;
							try { dbg.enterSubRule(51);
							try { dbg.enterDecision(51, decisionCanBacktrack[51]);

							int LA51_0 = input.LA(1);
							if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
								alt51=1;
							}
							} finally {dbg.exitDecision(51);}

							switch (alt51) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:25: ws
									{
									dbg.location(438,25);
									pushFollow(FOLLOW_ws_in_mediaQuery989);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(51);}

							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(438,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery996);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(438,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:43: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(55);

					loop55:
					while (true) {
						int alt55=2;
						try { dbg.enterDecision(55, decisionCanBacktrack[55]);

						try {
							isCyclicDecision = true;
							alt55 = dfa55.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(55);}

						switch (alt55) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:45: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(438,45);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:45: ( ws )?
							int alt53=2;
							try { dbg.enterSubRule(53);
							try { dbg.enterDecision(53, decisionCanBacktrack[53]);

							int LA53_0 = input.LA(1);
							if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
								alt53=1;
							}
							} finally {dbg.exitDecision(53);}

							switch (alt53) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:45: ws
									{
									dbg.location(438,45);
									pushFollow(FOLLOW_ws_in_mediaQuery1000);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(53);}
							dbg.location(438,49);
							pushFollow(FOLLOW_key_and_in_mediaQuery1003);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(438,57);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:57: ( ws )?
							int alt54=2;
							try { dbg.enterSubRule(54);
							try { dbg.enterDecision(54, decisionCanBacktrack[54]);

							int LA54_0 = input.LA(1);
							if ( (LA54_0==COMMENT||LA54_0==NL||LA54_0==WS) ) {
								alt54=1;
							}
							} finally {dbg.exitDecision(54);}

							switch (alt54) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:57: ws
									{
									dbg.location(438,57);
									pushFollow(FOLLOW_ws_in_mediaQuery1005);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(54);}
							dbg.location(438,61);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1008);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop55;
						}
					}
					} finally {dbg.exitSubRule(55);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:7: mediaExpression ( ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(439,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1019);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(439,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:23: ( ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(58);

					loop58:
					while (true) {
						int alt58=2;
						try { dbg.enterDecision(58, decisionCanBacktrack[58]);

						try {
							isCyclicDecision = true;
							alt58 = dfa58.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(58);}

						switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:25: ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(439,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:25: ( ws )?
							int alt56=2;
							try { dbg.enterSubRule(56);
							try { dbg.enterDecision(56, decisionCanBacktrack[56]);

							int LA56_0 = input.LA(1);
							if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
								alt56=1;
							}
							} finally {dbg.exitDecision(56);}

							switch (alt56) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:25: ws
									{
									dbg.location(439,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1023);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(56);}
							dbg.location(439,29);
							pushFollow(FOLLOW_key_and_in_mediaQuery1026);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(439,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:37: ( ws )?
							int alt57=2;
							try { dbg.enterSubRule(57);
							try { dbg.enterDecision(57, decisionCanBacktrack[57]);

							int LA57_0 = input.LA(1);
							if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
								alt57=1;
							}
							} finally {dbg.exitDecision(57);}

							switch (alt57) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:37: ws
									{
									dbg.location(439,37);
									pushFollow(FOLLOW_ws_in_mediaQuery1028);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(57);}
							dbg.location(439,41);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1031);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop58;
						}
					}
					} finally {dbg.exitSubRule(58);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:7: {...}? cp_variable
					{
					dbg.location(440,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(440,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1044);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(441, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(443, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:3: ( key_only | NOT )
			int alt60=2;
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			int LA60_0 = input.LA(1);
			if ( (LA60_0==IDENT) ) {
				alt60=1;
			}
			else if ( (LA60_0==NOT) ) {
				alt60=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: key_only
					{
					dbg.location(444,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1056);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:16: NOT
					{
					dbg.location(444,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1060); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(445, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:447:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(447, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt61=3;
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt61=1;
				}
				break;
			case GEN:
				{
				alt61=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt61=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 61, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:4: IDENT
					{
					dbg.location(448,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1072); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:12: GEN
					{
					dbg.location(448,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1076); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(448,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(448,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1082);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(449, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:451:1: mediaExpression : LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ;
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(451, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:452:5: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:5: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
			{
			dbg.location(453,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1100); if (state.failed) return;dbg.location(453,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:12: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:12: ws
					{
					dbg.location(453,12);
					pushFollow(FOLLOW_ws_in_mediaExpression1102);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(453,16);
			pushFollow(FOLLOW_mediaFeature_in_mediaExpression1105);
			mediaFeature();
			state._fsp--;
			if (state.failed) return;dbg.location(453,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:29: ( mediaFeatureValue )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			try {
				isCyclicDecision = true;
				alt63 = dfa63.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:29: mediaFeatureValue
					{
					dbg.location(453,29);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1107);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(453,48);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:48: ( ws )?
			int alt64=2;
			try { dbg.enterSubRule(64);
			try { dbg.enterDecision(64, decisionCanBacktrack[64]);

			int LA64_0 = input.LA(1);
			if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
				alt64=1;
			}
			} finally {dbg.exitDecision(64);}

			switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:48: ws
					{
					dbg.location(453,48);
					pushFollow(FOLLOW_ws_in_mediaExpression1110);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(64);}
			dbg.location(453,52);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1113); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(454, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(456, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(458,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ws
					{
					dbg.location(458,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1134);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(458,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1137); if (state.failed) return;dbg.location(458,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:15: ( ws )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==COMMENT||LA66_0==NL||LA66_0==WS) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:15: ws
					{
					dbg.location(458,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1139);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(459,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ({...}? cp_expression | expression )
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt67=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA67_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case IDENT:
				{
				int LA67_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA67_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA67_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA67_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EMS:
				{
				int LA67_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case REM:
				{
				int LA67_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case EXS:
				{
				int LA67_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA67_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TIME:
				{
				int LA67_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case FREQ:
				{
				int LA67_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA67_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA67_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case STRING:
				{
				int LA67_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case TILDE:
				{
				int LA67_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA67_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case GEN:
				{
				int LA67_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case URI:
				{
				int LA67_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case HASH:
				{
				int LA67_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (true) ) {
					alt67=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA67_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA67_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA67_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA67_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA67_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA67_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt67=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 67, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:9: {...}? cp_expression
					{
					dbg.location(460,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(460,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1158);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:462:9: expression
					{
					dbg.location(462,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1178);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(464, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(466, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt69=3;
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt69=1;
				}
				break;
			case GEN:
				{
				alt69=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt69=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:4: IDENT
					{
					dbg.location(467,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1198); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:12: GEN
					{
					dbg.location(467,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1202); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(467,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(467,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:47: ( cp_variable | sass_interpolation_expression_var )
					int alt68=2;
					try { dbg.enterSubRule(68);
					try { dbg.enterDecision(68, decisionCanBacktrack[68]);

					int LA68_0 = input.LA(1);
					if ( (LA68_0==AT_IDENT||(LA68_0 >= BOTTOMCENTER_SYM && LA68_0 <= BOTTOMRIGHT_SYM)||LA68_0==CHARSET_SYM||LA68_0==COUNTER_STYLE_SYM||LA68_0==FONT_FACE_SYM||LA68_0==IMPORT_SYM||(LA68_0 >= LEFTBOTTOM_SYM && LA68_0 <= LEFTTOP_SYM)||LA68_0==MEDIA_SYM||LA68_0==MOZ_DOCUMENT_SYM||LA68_0==NAMESPACE_SYM||LA68_0==PAGE_SYM||(LA68_0 >= RIGHTBOTTOM_SYM && LA68_0 <= RIGHTTOP_SYM)||(LA68_0 >= SASS_AT_ROOT && LA68_0 <= SASS_DEBUG)||(LA68_0 >= SASS_EACH && LA68_0 <= SASS_ELSE)||LA68_0==SASS_EXTEND||(LA68_0 >= SASS_FOR && LA68_0 <= SASS_FUNCTION)||(LA68_0 >= SASS_IF && LA68_0 <= SASS_MIXIN)||(LA68_0 >= SASS_RETURN && LA68_0 <= SASS_WHILE)||(LA68_0 >= TOPCENTER_SYM && LA68_0 <= TOPRIGHT_SYM)||LA68_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt68=1;
					}
					else if ( (LA68_0==HASH_SYMBOL) ) {
						alt68=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 68, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(68);}

					switch (alt68) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:49: cp_variable
							{
							dbg.location(467,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1210);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:63: sass_interpolation_expression_var
							{
							dbg.location(467,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1214);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(68);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(468, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(470, 1);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(472,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:472:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt74=0;
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=3;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				int LA74_0 = input.LA(1);
				if ( ((LA74_0 >= AT_IDENT && LA74_0 <= AT_SIGN)||(LA74_0 >= BOTTOMCENTER_SYM && LA74_0 <= BOTTOMRIGHT_SYM)||(LA74_0 >= CHARSET_SYM && LA74_0 <= COLON)||LA74_0==COUNTER_STYLE_SYM||LA74_0==DCOLON||LA74_0==DOT||LA74_0==FONT_FACE_SYM||(LA74_0 >= GEN && LA74_0 <= GREATER)||(LA74_0 >= HASH && LA74_0 <= HASH_SYMBOL)||LA74_0==IDENT||LA74_0==IMPORT_SYM||(LA74_0 >= LBRACKET && LA74_0 <= LEFTTOP_SYM)||LA74_0==LESS_AND||(LA74_0 >= MEDIA_SYM && LA74_0 <= MOZ_DOCUMENT_SYM)||LA74_0==NAMESPACE_SYM||LA74_0==PAGE_SYM||(LA74_0 >= PIPE && LA74_0 <= PLUS)||(LA74_0 >= RIGHTBOTTOM_SYM && LA74_0 <= RIGHTTOP_SYM)||(LA74_0 >= SASS_AT_ROOT && LA74_0 <= SASS_DEBUG)||(LA74_0 >= SASS_EACH && LA74_0 <= SASS_ELSE)||(LA74_0 >= SASS_EXTEND && LA74_0 <= SASS_FUNCTION)||(LA74_0 >= SASS_IF && LA74_0 <= SASS_MIXIN)||(LA74_0 >= SASS_RETURN && LA74_0 <= SASS_WHILE)||LA74_0==STAR||LA74_0==TILDE||(LA74_0 >= TOPCENTER_SYM && LA74_0 <= TOPRIGHT_SYM)||LA74_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt74=1;
				}
				else if ( (LA74_0==SEMI) ) {
					alt74=2;
				}

				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(473,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(473,12);
					pushFollow(FOLLOW_bodyItem_in_body1248);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(473,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					try {
						isCyclicDecision = true;
						alt71 = dfa71.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(473,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:34: ( ws )?
							int alt70=2;
							try { dbg.enterSubRule(70);
							try { dbg.enterDecision(70, decisionCanBacktrack[70]);

							int LA70_0 = input.LA(1);
							if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
								alt70=1;
							}
							} finally {dbg.exitDecision(70);}

							switch (alt70) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:34: ws
									{
									dbg.location(473,34);
									pushFollow(FOLLOW_ws_in_body1258);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(70);}
							dbg.location(473,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1261); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(473,45);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:45: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:45: ws
							{
							dbg.location(473,45);
							pushFollow(FOLLOW_ws_in_body1265);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:10: ( SEMI ( ws )? )
					{
					dbg.location(475,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:12: SEMI ( ws )?
					{
					dbg.location(475,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1292); if (state.failed) return;dbg.location(475,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:17: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:475:17: ws
							{
							dbg.location(475,17);
							pushFollow(FOLLOW_ws_in_body1294);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}

					}

					}
					break;

				default :
					if ( cnt74 >= 1 ) break loop74;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(74, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt74++;
			}
			} finally {dbg.exitSubRule(74);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(477, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(479, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt75=11;
			try { dbg.enterDecision(75, decisionCanBacktrack[75]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA75_1 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case DOT:
				{
				int LA75_2 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case HASH:
				{
				int LA75_3 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( (true) ) {
					alt75=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA75_4 = input.LA(2);
				if ( ((synpred11_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=1;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA75_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( (((synpred13_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA75_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred12_Css3())) ) {
					alt75=2;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=3;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA75_7 = input.LA(2);
				if ( (true) ) {
					alt75=4;
				}
				else if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case IDENT:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt75=4;
				}
				break;
			case MEDIA_SYM:
				{
				int LA75_19 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA75_20 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=5;
				}
				else if ( ((synpred15_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA75_21 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA75_22 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA75_23 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA75_24 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA75_25 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (true) ) {
					alt75=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA75_26 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt75=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA75_27 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA75_28 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA75_29 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA75_30 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA75_31 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA75_32 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt75=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA75_33 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt75=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt75=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 75, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(75);}

			switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(481,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1374);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(483,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(483,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1407);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(484,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(484,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1426);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:8: rule
					{
					dbg.location(485,8);
					pushFollow(FOLLOW_rule_in_bodyItem1435);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(486,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem1457);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:11: ( sass_map )=> sass_map
					{
					dbg.location(487,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem1474);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:11: at_rule
					{
					dbg.location(488,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem1486);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: {...}? importItem
					{
					dbg.location(490,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(490,40);
					pushFollow(FOLLOW_importItem_in_bodyItem1509);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: {...}? sass_debug
					{
					dbg.location(491,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(491,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem1523);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:11: {...}? sass_control
					{
					dbg.location(492,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(492,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem1537);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: {...}? sass_function_declaration
					{
					dbg.location(493,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(493,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem1551);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(494, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:1: at_rule : ( media | page | counterStyle | fontFace | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(499, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:500:5: ( media | page | counterStyle | fontFace | vendorAtRule )
			int alt76=5;
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt76=1;
				}
				break;
			case PAGE_SYM:
				{
				alt76=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt76=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt76=4;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt76=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 76, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:501:5: media
					{
					dbg.location(501,5);
					pushFollow(FOLLOW_media_in_at_rule1577);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:502:7: page
					{
					dbg.location(502,7);
					pushFollow(FOLLOW_page_in_at_rule1585);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:7: counterStyle
					{
					dbg.location(503,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule1593);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:7: fontFace
					{
					dbg.location(504,7);
					pushFollow(FOLLOW_fontFace_in_at_rule1601);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:505:7: vendorAtRule
					{
					dbg.location(505,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule1609);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(506, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(508, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt77=3;
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt77=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt77=2;
				}
				break;
			case AT_IDENT:
				{
				alt77=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:3: moz_document
					{
					dbg.location(509,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule1622);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:18: webkitKeyframes
					{
					dbg.location(509,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule1626);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:36: generic_at_rule
					{
					dbg.location(509,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule1630);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(509, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(511, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt79=3;
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt79=1;
				}
				break;
			case STRING:
				{
				alt79=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt79=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 79, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:2: IDENT
					{
					dbg.location(513,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId1640); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:10: STRING
					{
					dbg.location(513,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId1644); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(513,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(513,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:48: ( cp_variable | sass_interpolation_expression_var )
					int alt78=2;
					try { dbg.enterSubRule(78);
					try { dbg.enterDecision(78, decisionCanBacktrack[78]);

					int LA78_0 = input.LA(1);
					if ( (LA78_0==AT_IDENT||(LA78_0 >= BOTTOMCENTER_SYM && LA78_0 <= BOTTOMRIGHT_SYM)||LA78_0==CHARSET_SYM||LA78_0==COUNTER_STYLE_SYM||LA78_0==FONT_FACE_SYM||LA78_0==IMPORT_SYM||(LA78_0 >= LEFTBOTTOM_SYM && LA78_0 <= LEFTTOP_SYM)||LA78_0==MEDIA_SYM||LA78_0==MOZ_DOCUMENT_SYM||LA78_0==NAMESPACE_SYM||LA78_0==PAGE_SYM||(LA78_0 >= RIGHTBOTTOM_SYM && LA78_0 <= RIGHTTOP_SYM)||(LA78_0 >= SASS_AT_ROOT && LA78_0 <= SASS_DEBUG)||(LA78_0 >= SASS_EACH && LA78_0 <= SASS_ELSE)||LA78_0==SASS_EXTEND||(LA78_0 >= SASS_FOR && LA78_0 <= SASS_FUNCTION)||(LA78_0 >= SASS_IF && LA78_0 <= SASS_MIXIN)||(LA78_0 >= SASS_RETURN && LA78_0 <= SASS_WHILE)||(LA78_0 >= TOPCENTER_SYM && LA78_0 <= TOPRIGHT_SYM)||LA78_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt78=1;
					}
					else if ( (LA78_0==HASH_SYMBOL) ) {
						alt78=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 78, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(78);}

					switch (alt78) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:50: cp_variable
							{
							dbg.location(513,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId1652);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:64: sass_interpolation_expression_var
							{
							dbg.location(513,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId1656);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(78);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(514, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(516, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(517,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule1672); if (state.failed) return;dbg.location(517,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:16: ( ws )?
			int alt80=2;
			try { dbg.enterSubRule(80);
			try { dbg.enterDecision(80, decisionCanBacktrack[80]);

			int LA80_0 = input.LA(1);
			if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
				alt80=1;
			}
			} finally {dbg.exitDecision(80);}

			switch (alt80) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:16: ws
					{
					dbg.location(517,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule1674);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(80);}
			dbg.location(517,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:20: ( atRuleId ( ws )? )?
			int alt82=2;
			try { dbg.enterSubRule(82);
			try { dbg.enterDecision(82, decisionCanBacktrack[82]);

			int LA82_0 = input.LA(1);
			if ( (LA82_0==AT_IDENT||(LA82_0 >= BOTTOMCENTER_SYM && LA82_0 <= BOTTOMRIGHT_SYM)||LA82_0==CHARSET_SYM||LA82_0==COUNTER_STYLE_SYM||LA82_0==FONT_FACE_SYM||LA82_0==HASH_SYMBOL||LA82_0==IDENT||LA82_0==IMPORT_SYM||(LA82_0 >= LEFTBOTTOM_SYM && LA82_0 <= LEFTTOP_SYM)||LA82_0==MEDIA_SYM||LA82_0==MOZ_DOCUMENT_SYM||LA82_0==NAMESPACE_SYM||LA82_0==PAGE_SYM||(LA82_0 >= RIGHTBOTTOM_SYM && LA82_0 <= RIGHTTOP_SYM)||(LA82_0 >= SASS_AT_ROOT && LA82_0 <= SASS_DEBUG)||(LA82_0 >= SASS_EACH && LA82_0 <= SASS_ELSE)||LA82_0==SASS_EXTEND||(LA82_0 >= SASS_FOR && LA82_0 <= SASS_FUNCTION)||(LA82_0 >= SASS_IF && LA82_0 <= SASS_MIXIN)||(LA82_0 >= SASS_RETURN && LA82_0 <= SASS_WHILE)||LA82_0==STRING||(LA82_0 >= TOPCENTER_SYM && LA82_0 <= TOPRIGHT_SYM)||LA82_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt82=1;
			}
			} finally {dbg.exitDecision(82);}

			switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:22: atRuleId ( ws )?
					{
					dbg.location(517,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule1679);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(517,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:31: ( ws )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					int LA81_0 = input.LA(1);
					if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
						alt81=1;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:517:31: ws
							{
							dbg.location(517,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule1681);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}

					}
					break;

			}
			} finally {dbg.exitSubRule(82);}
			dbg.location(518,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule1695); if (state.failed) return;dbg.location(519,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule1706);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(520,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule1716); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(521, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:522:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(522, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(524,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1727); if (state.failed) return;dbg.location(524,19);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:19: ( ws )?
			int alt83=2;
			try { dbg.enterSubRule(83);
			try { dbg.enterDecision(83, decisionCanBacktrack[83]);

			int LA83_0 = input.LA(1);
			if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
				alt83=1;
			}
			} finally {dbg.exitDecision(83);}

			switch (alt83) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:19: ws
					{
					dbg.location(524,19);
					pushFollow(FOLLOW_ws_in_moz_document1729);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(83);}
			dbg.location(524,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:25: moz_document_function ( ws )?
			{
			dbg.location(524,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document1734);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(524,47);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:47: ( ws )?
			int alt84=2;
			try { dbg.enterSubRule(84);
			try { dbg.enterDecision(84, decisionCanBacktrack[84]);

			int LA84_0 = input.LA(1);
			if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
				alt84=1;
			}
			} finally {dbg.exitDecision(84);}

			switch (alt84) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:47: ws
					{
					dbg.location(524,47);
					pushFollow(FOLLOW_ws_in_moz_document1736);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(84);}

			}
			dbg.location(524,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(87);

			loop87:
			while (true) {
				int alt87=2;
				try { dbg.enterDecision(87, decisionCanBacktrack[87]);

				int LA87_0 = input.LA(1);
				if ( (LA87_0==COMMA) ) {
					alt87=1;
				}

				} finally {dbg.exitDecision(87);}

				switch (alt87) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(524,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document1742); if (state.failed) return;dbg.location(524,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:60: ( ws )?
					int alt85=2;
					try { dbg.enterSubRule(85);
					try { dbg.enterDecision(85, decisionCanBacktrack[85]);

					int LA85_0 = input.LA(1);
					if ( (LA85_0==COMMENT||LA85_0==NL||LA85_0==WS) ) {
						alt85=1;
					}
					} finally {dbg.exitDecision(85);}

					switch (alt85) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:60: ws
							{
							dbg.location(524,60);
							pushFollow(FOLLOW_ws_in_moz_document1744);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(85);}
					dbg.location(524,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document1747);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(524,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:86: ( ws )?
					int alt86=2;
					try { dbg.enterSubRule(86);
					try { dbg.enterDecision(86, decisionCanBacktrack[86]);

					int LA86_0 = input.LA(1);
					if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
						alt86=1;
					}
					} finally {dbg.exitDecision(86);}

					switch (alt86) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:86: ws
							{
							dbg.location(524,86);
							pushFollow(FOLLOW_ws_in_moz_document1749);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(86);}

					}
					break;

				default :
					break loop87;
				}
			}
			} finally {dbg.exitSubRule(87);}
			dbg.location(525,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document1756); if (state.failed) return;dbg.location(525,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ( ws )?
			int alt88=2;
			try { dbg.enterSubRule(88);
			try { dbg.enterDecision(88, decisionCanBacktrack[88]);

			int LA88_0 = input.LA(1);
			if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
				alt88=1;
			}
			} finally {dbg.exitDecision(88);}

			switch (alt88) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ws
					{
					dbg.location(525,9);
					pushFollow(FOLLOW_ws_in_moz_document1758);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(88);}
			dbg.location(526,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:3: ( body )?
			int alt89=2;
			try { dbg.enterSubRule(89);
			try { dbg.enterDecision(89, decisionCanBacktrack[89]);

			int LA89_0 = input.LA(1);
			if ( ((LA89_0 >= AT_IDENT && LA89_0 <= AT_SIGN)||(LA89_0 >= BOTTOMCENTER_SYM && LA89_0 <= BOTTOMRIGHT_SYM)||(LA89_0 >= CHARSET_SYM && LA89_0 <= COLON)||LA89_0==COUNTER_STYLE_SYM||LA89_0==DCOLON||LA89_0==DOT||LA89_0==FONT_FACE_SYM||(LA89_0 >= GEN && LA89_0 <= GREATER)||(LA89_0 >= HASH && LA89_0 <= HASH_SYMBOL)||LA89_0==IDENT||LA89_0==IMPORT_SYM||(LA89_0 >= LBRACKET && LA89_0 <= LEFTTOP_SYM)||LA89_0==LESS_AND||(LA89_0 >= MEDIA_SYM && LA89_0 <= MOZ_DOCUMENT_SYM)||LA89_0==NAMESPACE_SYM||LA89_0==PAGE_SYM||(LA89_0 >= PIPE && LA89_0 <= PLUS)||(LA89_0 >= RIGHTBOTTOM_SYM && LA89_0 <= RIGHTTOP_SYM)||(LA89_0 >= SASS_AT_ROOT && LA89_0 <= SASS_DEBUG)||(LA89_0 >= SASS_EACH && LA89_0 <= SASS_ELSE)||(LA89_0 >= SASS_EXTEND && LA89_0 <= SASS_FUNCTION)||(LA89_0 >= SASS_IF && LA89_0 <= SASS_MIXIN)||(LA89_0 >= SASS_RETURN && LA89_0 <= SEMI)||LA89_0==STAR||LA89_0==TILDE||(LA89_0 >= TOPCENTER_SYM && LA89_0 <= TOPRIGHT_SYM)||LA89_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt89=1;
			}
			} finally {dbg.exitDecision(89);}

			switch (alt89) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:526:3: body
					{
					dbg.location(526,3);
					pushFollow(FOLLOW_body_in_moz_document1763);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(89);}
			dbg.location(527,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document1768); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(528, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(530, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:531:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(531,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(533, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:536:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(536, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:537:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(538,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1805); if (state.failed) return;dbg.location(538,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:23: ( ws )?
			int alt90=2;
			try { dbg.enterSubRule(90);
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
				alt90=1;
			}
			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:23: ws
					{
					dbg.location(538,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1807);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(90);}
			dbg.location(538,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes1810);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(538,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:36: ( ws )?
			int alt91=2;
			try { dbg.enterSubRule(91);
			try { dbg.enterDecision(91, decisionCanBacktrack[91]);

			int LA91_0 = input.LA(1);
			if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
				alt91=1;
			}
			} finally {dbg.exitDecision(91);}

			switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:36: ws
					{
					dbg.location(538,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1812);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(91);}
			dbg.location(539,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes1816); if (state.failed) return;dbg.location(539,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:9: ( ws )?
			int alt92=2;
			try { dbg.enterSubRule(92);
			try { dbg.enterDecision(92, decisionCanBacktrack[92]);

			int LA92_0 = input.LA(1);
			if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
				alt92=1;
			}
			} finally {dbg.exitDecision(92);}

			switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:9: ws
					{
					dbg.location(539,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes1818);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(92);}
			dbg.location(540,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(94);

			loop94:
			while (true) {
				int alt94=2;
				try { dbg.enterDecision(94, decisionCanBacktrack[94]);

				int LA94_0 = input.LA(1);
				if ( (LA94_0==IDENT||LA94_0==PERCENTAGE||LA94_0==SASS_CONTENT) ) {
					alt94=1;
				}

				} finally {dbg.exitDecision(94);}

				switch (alt94) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(540,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1825);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(540,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:26: ( ws )?
					int alt93=2;
					try { dbg.enterSubRule(93);
					try { dbg.enterDecision(93, decisionCanBacktrack[93]);

					int LA93_0 = input.LA(1);
					if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {
						alt93=1;
					}
					} finally {dbg.exitDecision(93);}

					switch (alt93) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:26: ws
							{
							dbg.location(540,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes1827);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(93);}

					}
					break;

				default :
					break loop94;
				}
			}
			} finally {dbg.exitSubRule(94);}
			dbg.location(541,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes1834); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(542, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(544, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt99=2;
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			int LA99_0 = input.LA(1);
			if ( (LA99_0==IDENT||LA99_0==PERCENTAGE) ) {
				alt99=1;
			}
			else if ( (LA99_0==SASS_CONTENT) ) {
				alt99=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(546,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1846);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(546,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:26: ( ws )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==COMMENT||LA95_0==NL||LA95_0==WS) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:26: ws
							{
							dbg.location(546,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1848);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(547,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock1852); if (state.failed) return;dbg.location(547,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:10: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:10: ws
							{
							dbg.location(547,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock1855);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(547,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock1858);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(548,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:3: ( declarations )?
					int alt97=2;
					try { dbg.enterSubRule(97);
					try { dbg.enterDecision(97, decisionCanBacktrack[97]);

					int LA97_0 = input.LA(1);
					if ( ((LA97_0 >= AT_IDENT && LA97_0 <= AT_SIGN)||(LA97_0 >= BOTTOMCENTER_SYM && LA97_0 <= BOTTOMRIGHT_SYM)||(LA97_0 >= CHARSET_SYM && LA97_0 <= COLON)||LA97_0==COUNTER_STYLE_SYM||LA97_0==DCOLON||LA97_0==DOT||LA97_0==FONT_FACE_SYM||(LA97_0 >= GEN && LA97_0 <= GREATER)||(LA97_0 >= HASH && LA97_0 <= HASH_SYMBOL)||LA97_0==IDENT||LA97_0==IMPORT_SYM||(LA97_0 >= LBRACKET && LA97_0 <= LEFTTOP_SYM)||LA97_0==LESS_AND||(LA97_0 >= MEDIA_SYM && LA97_0 <= MOZ_DOCUMENT_SYM)||LA97_0==NAMESPACE_SYM||LA97_0==PAGE_SYM||(LA97_0 >= PIPE && LA97_0 <= PLUS)||(LA97_0 >= RIGHTBOTTOM_SYM && LA97_0 <= RIGHTTOP_SYM)||(LA97_0 >= SASS_AT_ROOT && LA97_0 <= SASS_DEBUG)||(LA97_0 >= SASS_EACH && LA97_0 <= SASS_ELSE)||(LA97_0 >= SASS_ERROR && LA97_0 <= SASS_FUNCTION)||(LA97_0 >= SASS_IF && LA97_0 <= SASS_MIXIN)||(LA97_0 >= SASS_RETURN && LA97_0 <= SEMI)||LA97_0==STAR||LA97_0==TILDE||(LA97_0 >= TOPCENTER_SYM && LA97_0 <= TOPRIGHT_SYM)||LA97_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt97=1;
					}
					} finally {dbg.exitDecision(97);}

					switch (alt97) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:3: declarations
							{
							dbg.location(548,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock1862);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(97);}
					dbg.location(549,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock1866); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:550:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(550,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(550,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(550,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock1883);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(550,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:550:61: ( SEMI )?
					int alt98=2;
					try { dbg.enterSubRule(98);
					try { dbg.enterDecision(98, decisionCanBacktrack[98]);

					int LA98_0 = input.LA(1);
					if ( (LA98_0==SEMI) ) {
						alt98=1;
					}
					} finally {dbg.exitDecision(98);}

					switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:550:61: SEMI
							{
							dbg.location(550,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock1885); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(98);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(551, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(553, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(555,2);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt100=3;
			try { dbg.enterSubRule(100);
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			int LA100_0 = input.LA(1);
			if ( (LA100_0==IDENT) ) {
				int LA100_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt100=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA100_0==PERCENTAGE) ) {
				alt100=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 100, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:4: {...}? IDENT
					{
					dbg.location(555,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(555,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1902); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:39: {...}? IDENT
					{
					dbg.location(555,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(555,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1908); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:72: PERCENTAGE
					{
					dbg.location(555,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1912); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(100);}
			dbg.location(555,85);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(104);

			loop104:
			while (true) {
				int alt104=2;
				try { dbg.enterDecision(104, decisionCanBacktrack[104]);

				try {
					isCyclicDecision = true;
					alt104 = dfa104.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(104);}

				switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(555,87);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:87: ( ws )?
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
						alt101=1;
					}
					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:87: ws
							{
							dbg.location(555,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1918);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}
					dbg.location(555,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors1921); if (state.failed) return;dbg.location(555,97);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:97: ( ws )?
					int alt102=2;
					try { dbg.enterSubRule(102);
					try { dbg.enterDecision(102, decisionCanBacktrack[102]);

					int LA102_0 = input.LA(1);
					if ( (LA102_0==COMMENT||LA102_0==NL||LA102_0==WS) ) {
						alt102=1;
					}
					} finally {dbg.exitDecision(102);}

					switch (alt102) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:97: ws
							{
							dbg.location(555,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors1923);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(102);}
					dbg.location(555,101);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt103=3;
					try { dbg.enterSubRule(103);
					try { dbg.enterDecision(103, decisionCanBacktrack[103]);

					int LA103_0 = input.LA(1);
					if ( (LA103_0==IDENT) ) {
						int LA103_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt103=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt103=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 103, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA103_0==PERCENTAGE) ) {
						alt103=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 103, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(103);}

					switch (alt103) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:103: {...}? IDENT
							{
							dbg.location(555,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(555,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1930); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:138: {...}? IDENT
							{
							dbg.location(555,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(555,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors1936); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:555:171: PERCENTAGE
							{
							dbg.location(555,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1940); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(103);}

					}
					break;

				default :
					break loop104;
				}
			}
			} finally {dbg.exitSubRule(104);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(556, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:558:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE ;
	public final void page() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(558, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )* RBRACE
			{
			dbg.location(559,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page1959); if (state.failed) return;dbg.location(559,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:16: ( ws )?
			int alt105=2;
			try { dbg.enterSubRule(105);
			try { dbg.enterDecision(105, decisionCanBacktrack[105]);

			int LA105_0 = input.LA(1);
			if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
				alt105=1;
			}
			} finally {dbg.exitDecision(105);}

			switch (alt105) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:16: ws
					{
					dbg.location(559,16);
					pushFollow(FOLLOW_ws_in_page1961);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(105);}
			dbg.location(559,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:20: ( IDENT ( ws )? )?
			int alt107=2;
			try { dbg.enterSubRule(107);
			try { dbg.enterDecision(107, decisionCanBacktrack[107]);

			int LA107_0 = input.LA(1);
			if ( (LA107_0==IDENT) ) {
				alt107=1;
			}
			} finally {dbg.exitDecision(107);}

			switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:22: IDENT ( ws )?
					{
					dbg.location(559,22);
					match(input,IDENT,FOLLOW_IDENT_in_page1966); if (state.failed) return;dbg.location(559,28);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:28: ( ws )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					int LA106_0 = input.LA(1);
					if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
						alt106=1;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:28: ws
							{
							dbg.location(559,28);
							pushFollow(FOLLOW_ws_in_page1968);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}

					}
					break;

			}
			} finally {dbg.exitSubRule(107);}
			dbg.location(559,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:35: ( pseudoPage ( ws )? )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COLON) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:36: pseudoPage ( ws )?
					{
					dbg.location(559,36);
					pushFollow(FOLLOW_pseudoPage_in_page1975);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(559,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:47: ( ws )?
					int alt108=2;
					try { dbg.enterSubRule(108);
					try { dbg.enterDecision(108, decisionCanBacktrack[108]);

					int LA108_0 = input.LA(1);
					if ( (LA108_0==COMMENT||LA108_0==NL||LA108_0==WS) ) {
						alt108=1;
					}
					} finally {dbg.exitDecision(108);}

					switch (alt108) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:47: ws
							{
							dbg.location(559,47);
							pushFollow(FOLLOW_ws_in_page1977);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(108);}

					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(560,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page1990); if (state.failed) return;dbg.location(560,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:16: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:16: ws
					{
					dbg.location(560,16);
					pushFollow(FOLLOW_ws_in_page1992);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(563,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:13: ( ( propertyDeclaration | margin ) ( ws )? )?
			int alt113=2;
			try { dbg.enterSubRule(113);
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			int LA113_0 = input.LA(1);
			if ( (LA113_0==AT_IDENT||(LA113_0 >= BOTTOMCENTER_SYM && LA113_0 <= BOTTOMRIGHT_SYM)||LA113_0==CHARSET_SYM||LA113_0==COUNTER_STYLE_SYM||LA113_0==FONT_FACE_SYM||LA113_0==GEN||LA113_0==HASH_SYMBOL||LA113_0==IDENT||LA113_0==IMPORT_SYM||(LA113_0 >= LEFTBOTTOM_SYM && LA113_0 <= LEFTTOP_SYM)||(LA113_0 >= MEDIA_SYM && LA113_0 <= MOZ_DOCUMENT_SYM)||LA113_0==NAMESPACE_SYM||LA113_0==PAGE_SYM||(LA113_0 >= RIGHTBOTTOM_SYM && LA113_0 <= RIGHTTOP_SYM)||(LA113_0 >= SASS_AT_ROOT && LA113_0 <= SASS_DEBUG)||(LA113_0 >= SASS_EACH && LA113_0 <= SASS_ELSE)||LA113_0==SASS_EXTEND||(LA113_0 >= SASS_FOR && LA113_0 <= SASS_FUNCTION)||(LA113_0 >= SASS_IF && LA113_0 <= SASS_MIXIN)||(LA113_0 >= SASS_RETURN && LA113_0 <= SASS_WHILE)||LA113_0==STAR||(LA113_0 >= TOPCENTER_SYM && LA113_0 <= TOPRIGHT_SYM)||LA113_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt113=1;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:14: ( propertyDeclaration | margin ) ( ws )?
					{
					dbg.location(563,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:14: ( propertyDeclaration | margin )
					int alt111=2;
					try { dbg.enterSubRule(111);
					try { dbg.enterDecision(111, decisionCanBacktrack[111]);

					try {
						isCyclicDecision = true;
						alt111 = dfa111.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(111);}

					switch (alt111) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:15: propertyDeclaration
							{
							dbg.location(563,15);
							pushFollow(FOLLOW_propertyDeclaration_in_page2035);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:35: margin
							{
							dbg.location(563,35);
							pushFollow(FOLLOW_margin_in_page2037);
							margin();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(111);}
					dbg.location(563,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:43: ( ws )?
					int alt112=2;
					try { dbg.enterSubRule(112);
					try { dbg.enterDecision(112, decisionCanBacktrack[112]);

					int LA112_0 = input.LA(1);
					if ( (LA112_0==COMMENT||LA112_0==NL||LA112_0==WS) ) {
						alt112=1;
					}
					} finally {dbg.exitDecision(112);}

					switch (alt112) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:43: ws
							{
							dbg.location(563,43);
							pushFollow(FOLLOW_ws_in_page2040);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(112);}

					}
					break;

			}
			} finally {dbg.exitSubRule(113);}
			dbg.location(563,49);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:49: ( SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )? )*
			try { dbg.enterSubRule(118);

			loop118:
			while (true) {
				int alt118=2;
				try { dbg.enterDecision(118, decisionCanBacktrack[118]);

				int LA118_0 = input.LA(1);
				if ( (LA118_0==SEMI) ) {
					alt118=1;
				}

				} finally {dbg.exitDecision(118);}

				switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:50: SEMI ( ws )? ( ( propertyDeclaration | margin ) ( ws )? )?
					{
					dbg.location(563,50);
					match(input,SEMI,FOLLOW_SEMI_in_page2046); if (state.failed) return;dbg.location(563,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:55: ( ws )?
					int alt114=2;
					try { dbg.enterSubRule(114);
					try { dbg.enterDecision(114, decisionCanBacktrack[114]);

					int LA114_0 = input.LA(1);
					if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
						alt114=1;
					}
					} finally {dbg.exitDecision(114);}

					switch (alt114) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:55: ws
							{
							dbg.location(563,55);
							pushFollow(FOLLOW_ws_in_page2048);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(114);}
					dbg.location(563,59);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:59: ( ( propertyDeclaration | margin ) ( ws )? )?
					int alt117=2;
					try { dbg.enterSubRule(117);
					try { dbg.enterDecision(117, decisionCanBacktrack[117]);

					int LA117_0 = input.LA(1);
					if ( (LA117_0==AT_IDENT||(LA117_0 >= BOTTOMCENTER_SYM && LA117_0 <= BOTTOMRIGHT_SYM)||LA117_0==CHARSET_SYM||LA117_0==COUNTER_STYLE_SYM||LA117_0==FONT_FACE_SYM||LA117_0==GEN||LA117_0==HASH_SYMBOL||LA117_0==IDENT||LA117_0==IMPORT_SYM||(LA117_0 >= LEFTBOTTOM_SYM && LA117_0 <= LEFTTOP_SYM)||(LA117_0 >= MEDIA_SYM && LA117_0 <= MOZ_DOCUMENT_SYM)||LA117_0==NAMESPACE_SYM||LA117_0==PAGE_SYM||(LA117_0 >= RIGHTBOTTOM_SYM && LA117_0 <= RIGHTTOP_SYM)||(LA117_0 >= SASS_AT_ROOT && LA117_0 <= SASS_DEBUG)||(LA117_0 >= SASS_EACH && LA117_0 <= SASS_ELSE)||LA117_0==SASS_EXTEND||(LA117_0 >= SASS_FOR && LA117_0 <= SASS_FUNCTION)||(LA117_0 >= SASS_IF && LA117_0 <= SASS_MIXIN)||(LA117_0 >= SASS_RETURN && LA117_0 <= SASS_WHILE)||LA117_0==STAR||(LA117_0 >= TOPCENTER_SYM && LA117_0 <= TOPRIGHT_SYM)||LA117_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt117=1;
					}
					} finally {dbg.exitDecision(117);}

					switch (alt117) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:60: ( propertyDeclaration | margin ) ( ws )?
							{
							dbg.location(563,60);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:60: ( propertyDeclaration | margin )
							int alt115=2;
							try { dbg.enterSubRule(115);
							try { dbg.enterDecision(115, decisionCanBacktrack[115]);

							try {
								isCyclicDecision = true;
								alt115 = dfa115.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(115);}

							switch (alt115) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:61: propertyDeclaration
									{
									dbg.location(563,61);
									pushFollow(FOLLOW_propertyDeclaration_in_page2053);
									propertyDeclaration();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:81: margin
									{
									dbg.location(563,81);
									pushFollow(FOLLOW_margin_in_page2055);
									margin();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(115);}
							dbg.location(563,89);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:89: ( ws )?
							int alt116=2;
							try { dbg.enterSubRule(116);
							try { dbg.enterDecision(116, decisionCanBacktrack[116]);

							int LA116_0 = input.LA(1);
							if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
								alt116=1;
							}
							} finally {dbg.exitDecision(116);}

							switch (alt116) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:89: ws
									{
									dbg.location(563,89);
									pushFollow(FOLLOW_ws_in_page2058);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(116);}

							}
							break;

					}
					} finally {dbg.exitSubRule(117);}

					}
					break;

				default :
					break loop118;
				}
			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(564,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page2073); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(565, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:567:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(567, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(568,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2090); if (state.failed) return;dbg.location(568,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:25: ( ws )?
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( (LA119_0==COMMENT||LA119_0==NL||LA119_0==WS) ) {
				alt119=1;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:25: ws
					{
					dbg.location(568,25);
					pushFollow(FOLLOW_ws_in_counterStyle2092);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(568,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2095); if (state.failed) return;dbg.location(568,35);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:35: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:568:35: ws
					{
					dbg.location(568,35);
					pushFollow(FOLLOW_ws_in_counterStyle2097);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(569,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2108); if (state.failed) return;dbg.location(569,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:16: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:16: ws
					{
					dbg.location(569,16);
					pushFollow(FOLLOW_ws_in_counterStyle2110);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(569,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2113);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(570,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:3: ( declarations )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( ((LA122_0 >= AT_IDENT && LA122_0 <= AT_SIGN)||(LA122_0 >= BOTTOMCENTER_SYM && LA122_0 <= BOTTOMRIGHT_SYM)||(LA122_0 >= CHARSET_SYM && LA122_0 <= COLON)||LA122_0==COUNTER_STYLE_SYM||LA122_0==DCOLON||LA122_0==DOT||LA122_0==FONT_FACE_SYM||(LA122_0 >= GEN && LA122_0 <= GREATER)||(LA122_0 >= HASH && LA122_0 <= HASH_SYMBOL)||LA122_0==IDENT||LA122_0==IMPORT_SYM||(LA122_0 >= LBRACKET && LA122_0 <= LEFTTOP_SYM)||LA122_0==LESS_AND||(LA122_0 >= MEDIA_SYM && LA122_0 <= MOZ_DOCUMENT_SYM)||LA122_0==NAMESPACE_SYM||LA122_0==PAGE_SYM||(LA122_0 >= PIPE && LA122_0 <= PLUS)||(LA122_0 >= RIGHTBOTTOM_SYM && LA122_0 <= RIGHTTOP_SYM)||(LA122_0 >= SASS_AT_ROOT && LA122_0 <= SASS_DEBUG)||(LA122_0 >= SASS_EACH && LA122_0 <= SASS_ELSE)||(LA122_0 >= SASS_ERROR && LA122_0 <= SASS_FUNCTION)||(LA122_0 >= SASS_IF && LA122_0 <= SASS_MIXIN)||(LA122_0 >= SASS_RETURN && LA122_0 <= SEMI)||LA122_0==STAR||LA122_0==TILDE||(LA122_0 >= TOPCENTER_SYM && LA122_0 <= TOPRIGHT_SYM)||LA122_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:3: declarations
					{
					dbg.location(570,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2117);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(571,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2128); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(572, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(574, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(575,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2145); if (state.failed) return;dbg.location(575,21);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:21: ( ws )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( (LA123_0==COMMENT||LA123_0==NL||LA123_0==WS) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:575:21: ws
					{
					dbg.location(575,21);
					pushFollow(FOLLOW_ws_in_fontFace2147);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(576,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace2158); if (state.failed) return;dbg.location(576,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:16: ( ws )?
			int alt124=2;
			try { dbg.enterSubRule(124);
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			int LA124_0 = input.LA(1);
			if ( (LA124_0==COMMENT||LA124_0==NL||LA124_0==WS) ) {
				alt124=1;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:16: ws
					{
					dbg.location(576,16);
					pushFollow(FOLLOW_ws_in_fontFace2160);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(124);}
			dbg.location(576,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace2163);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(577,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:3: ( declarations )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( ((LA125_0 >= AT_IDENT && LA125_0 <= AT_SIGN)||(LA125_0 >= BOTTOMCENTER_SYM && LA125_0 <= BOTTOMRIGHT_SYM)||(LA125_0 >= CHARSET_SYM && LA125_0 <= COLON)||LA125_0==COUNTER_STYLE_SYM||LA125_0==DCOLON||LA125_0==DOT||LA125_0==FONT_FACE_SYM||(LA125_0 >= GEN && LA125_0 <= GREATER)||(LA125_0 >= HASH && LA125_0 <= HASH_SYMBOL)||LA125_0==IDENT||LA125_0==IMPORT_SYM||(LA125_0 >= LBRACKET && LA125_0 <= LEFTTOP_SYM)||LA125_0==LESS_AND||(LA125_0 >= MEDIA_SYM && LA125_0 <= MOZ_DOCUMENT_SYM)||LA125_0==NAMESPACE_SYM||LA125_0==PAGE_SYM||(LA125_0 >= PIPE && LA125_0 <= PLUS)||(LA125_0 >= RIGHTBOTTOM_SYM && LA125_0 <= RIGHTTOP_SYM)||(LA125_0 >= SASS_AT_ROOT && LA125_0 <= SASS_DEBUG)||(LA125_0 >= SASS_EACH && LA125_0 <= SASS_ELSE)||(LA125_0 >= SASS_ERROR && LA125_0 <= SASS_FUNCTION)||(LA125_0 >= SASS_IF && LA125_0 <= SASS_MIXIN)||(LA125_0 >= SASS_RETURN && LA125_0 <= SEMI)||LA125_0==STAR||LA125_0==TILDE||(LA125_0 >= TOPCENTER_SYM && LA125_0 <= TOPRIGHT_SYM)||LA125_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:3: declarations
					{
					dbg.location(577,3);
					pushFollow(FOLLOW_declarations_in_fontFace2167);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(578,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace2178); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(579, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(581, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(582,4);
			pushFollow(FOLLOW_margin_sym_in_margin2192);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(582,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:15: ( ws )?
			int alt126=2;
			try { dbg.enterSubRule(126);
			try { dbg.enterDecision(126, decisionCanBacktrack[126]);

			int LA126_0 = input.LA(1);
			if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
				alt126=1;
			}
			} finally {dbg.exitDecision(126);}

			switch (alt126) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:15: ws
					{
					dbg.location(582,15);
					pushFollow(FOLLOW_ws_in_margin2194);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(126);}
			dbg.location(582,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin2197); if (state.failed) return;dbg.location(582,26);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:26: ( ws )?
			int alt127=2;
			try { dbg.enterSubRule(127);
			try { dbg.enterDecision(127, decisionCanBacktrack[127]);

			int LA127_0 = input.LA(1);
			if ( (LA127_0==COMMENT||LA127_0==NL||LA127_0==WS) ) {
				alt127=1;
			}
			} finally {dbg.exitDecision(127);}

			switch (alt127) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:26: ws
					{
					dbg.location(582,26);
					pushFollow(FOLLOW_ws_in_margin2199);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(127);}
			dbg.location(582,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin2202);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(582,53);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:53: ( declarations )?
			int alt128=2;
			try { dbg.enterSubRule(128);
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( ((LA128_0 >= AT_IDENT && LA128_0 <= AT_SIGN)||(LA128_0 >= BOTTOMCENTER_SYM && LA128_0 <= BOTTOMRIGHT_SYM)||(LA128_0 >= CHARSET_SYM && LA128_0 <= COLON)||LA128_0==COUNTER_STYLE_SYM||LA128_0==DCOLON||LA128_0==DOT||LA128_0==FONT_FACE_SYM||(LA128_0 >= GEN && LA128_0 <= GREATER)||(LA128_0 >= HASH && LA128_0 <= HASH_SYMBOL)||LA128_0==IDENT||LA128_0==IMPORT_SYM||(LA128_0 >= LBRACKET && LA128_0 <= LEFTTOP_SYM)||LA128_0==LESS_AND||(LA128_0 >= MEDIA_SYM && LA128_0 <= MOZ_DOCUMENT_SYM)||LA128_0==NAMESPACE_SYM||LA128_0==PAGE_SYM||(LA128_0 >= PIPE && LA128_0 <= PLUS)||(LA128_0 >= RIGHTBOTTOM_SYM && LA128_0 <= RIGHTTOP_SYM)||(LA128_0 >= SASS_AT_ROOT && LA128_0 <= SASS_DEBUG)||(LA128_0 >= SASS_EACH && LA128_0 <= SASS_ELSE)||(LA128_0 >= SASS_ERROR && LA128_0 <= SASS_FUNCTION)||(LA128_0 >= SASS_IF && LA128_0 <= SASS_MIXIN)||(LA128_0 >= SASS_RETURN && LA128_0 <= SEMI)||LA128_0==STAR||LA128_0==TILDE||(LA128_0 >= TOPCENTER_SYM && LA128_0 <= TOPRIGHT_SYM)||LA128_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt128=1;
			}
			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:53: declarations
					{
					dbg.location(582,53);
					pushFollow(FOLLOW_declarations_in_margin2204);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(128);}
			dbg.location(582,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin2207); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(583, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:585:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(585, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:586:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(586,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(603, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:605:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(605, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:7: COLON IDENT
			{
			dbg.location(606,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage2416); if (state.failed) return;dbg.location(606,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage2418); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(607, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:609:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(609, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:610:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(610,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(612, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:614:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(614, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(615,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(617, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:619:1: property : ({...}? sass_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(619, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:5: ({...}? sass_selector_interpolation_exp | IDENT | GEN |{...}? cp_variable )
			int alt129=4;
			try { dbg.enterDecision(129, decisionCanBacktrack[129]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA129_1 = input.LA(2);
				if ( (LA129_1==HASH_SYMBOL) ) {
					alt129=1;
				}
				else if ( (LA129_1==COLON||LA129_1==COMMENT||LA129_1==NL||LA129_1==WS) ) {
					alt129=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 129, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
			case MINUS:
				{
				alt129=1;
				}
				break;
			case GEN:
				{
				alt129=3;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt129=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 129, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(129);}

			switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(624,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(624,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property2502);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:625:7: IDENT
					{
					dbg.location(625,7);
					match(input,IDENT,FOLLOW_IDENT_in_property2510); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:7: GEN
					{
					dbg.location(626,7);
					match(input,GEN,FOLLOW_GEN_in_property2518); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:7: {...}? cp_variable
					{
					dbg.location(627,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(627,36);
					pushFollow(FOLLOW_cp_variable_in_property2528);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(629, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(634, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:635:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(636,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map2555);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(636,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map2557); if (state.failed) return;dbg.location(636,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:25: ( ws )?
			int alt130=2;
			try { dbg.enterSubRule(130);
			try { dbg.enterDecision(130, decisionCanBacktrack[130]);

			int LA130_0 = input.LA(1);
			if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
				alt130=1;
			}
			} finally {dbg.exitDecision(130);}

			switch (alt130) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:25: ws
					{
					dbg.location(636,25);
					pushFollow(FOLLOW_ws_in_sass_map2559);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(130);}
			dbg.location(636,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map2562); if (state.failed) return;dbg.location(636,36);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:36: ( ws )?
			int alt131=2;
			try { dbg.enterSubRule(131);
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
				alt131=1;
			}
			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:636:36: ws
					{
					dbg.location(636,36);
					pushFollow(FOLLOW_ws_in_sass_map2564);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(131);}
			dbg.location(636,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map2567);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(638,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:9: ( sass_map_pairs )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( (LA132_0==AT_IDENT||(LA132_0 >= BOTTOMCENTER_SYM && LA132_0 <= BOTTOMRIGHT_SYM)||LA132_0==CHARSET_SYM||LA132_0==COMMA||LA132_0==COUNTER_STYLE_SYM||LA132_0==FONT_FACE_SYM||LA132_0==GEN||LA132_0==HASH_SYMBOL||LA132_0==IDENT||LA132_0==IMPORT_SYM||(LA132_0 >= LEFTBOTTOM_SYM && LA132_0 <= LEFTTOP_SYM)||(LA132_0 >= MEDIA_SYM && LA132_0 <= MOZ_DOCUMENT_SYM)||LA132_0==NAMESPACE_SYM||LA132_0==PAGE_SYM||(LA132_0 >= RIGHTBOTTOM_SYM && LA132_0 <= RIGHTTOP_SYM)||(LA132_0 >= SASS_AT_ROOT && LA132_0 <= SASS_DEBUG)||(LA132_0 >= SASS_EACH && LA132_0 <= SASS_ELSE)||LA132_0==SASS_EXTEND||(LA132_0 >= SASS_FOR && LA132_0 <= SASS_FUNCTION)||(LA132_0 >= SASS_IF && LA132_0 <= SASS_MIXIN)||(LA132_0 >= SASS_RETURN && LA132_0 <= SASS_WHILE)||LA132_0==STRING||(LA132_0 >= TOPCENTER_SYM && LA132_0 <= TOPRIGHT_SYM)||LA132_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:9: sass_map_pairs
					{
					dbg.location(638,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map2586);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(639,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map2593); if (state.failed) return;dbg.location(639,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(135);

			loop135:
			while (true) {
				int alt135=3;
				try { dbg.enterDecision(135, decisionCanBacktrack[135]);

				try {
					isCyclicDecision = true;
					alt135 = dfa135.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(135);}

				switch (alt135) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(639,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(639,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:14: ( ws )?
					int alt133=2;
					try { dbg.enterSubRule(133);
					try { dbg.enterDecision(133, decisionCanBacktrack[133]);

					int LA133_0 = input.LA(1);
					if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
						alt133=1;
					}
					} finally {dbg.exitDecision(133);}

					switch (alt133) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:14: ws
							{
							dbg.location(639,14);
							pushFollow(FOLLOW_ws_in_sass_map2597);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(133);}
					dbg.location(639,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map2600); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(639,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(639,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:35: ( ws )?
					int alt134=2;
					try { dbg.enterSubRule(134);
					try { dbg.enterDecision(134, decisionCanBacktrack[134]);

					int LA134_0 = input.LA(1);
					if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
						alt134=1;
					}
					} finally {dbg.exitDecision(134);}

					switch (alt134) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:35: ws
							{
							dbg.location(639,35);
							pushFollow(FOLLOW_ws_in_sass_map2606);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(134);}
					dbg.location(639,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map2609); if (state.failed) return;
					}

					}
					break;

				default :
					break loop135;
				}
			}
			} finally {dbg.exitSubRule(135);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(640, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(642, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:5: cp_variable
			{
			dbg.location(644,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name2633);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(645, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:647:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(647, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(649,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt140=0;
			try { dbg.enterSubRule(140);

			loop140:
			while (true) {
				int alt140=3;
				try { dbg.enterDecision(140, decisionCanBacktrack[140]);

				int LA140_0 = input.LA(1);
				if ( (LA140_0==AT_IDENT||(LA140_0 >= BOTTOMCENTER_SYM && LA140_0 <= BOTTOMRIGHT_SYM)||LA140_0==CHARSET_SYM||LA140_0==COUNTER_STYLE_SYM||LA140_0==FONT_FACE_SYM||LA140_0==GEN||LA140_0==HASH_SYMBOL||LA140_0==IDENT||LA140_0==IMPORT_SYM||(LA140_0 >= LEFTBOTTOM_SYM && LA140_0 <= LEFTTOP_SYM)||(LA140_0 >= MEDIA_SYM && LA140_0 <= MOZ_DOCUMENT_SYM)||LA140_0==NAMESPACE_SYM||LA140_0==PAGE_SYM||(LA140_0 >= RIGHTBOTTOM_SYM && LA140_0 <= RIGHTTOP_SYM)||(LA140_0 >= SASS_AT_ROOT && LA140_0 <= SASS_DEBUG)||(LA140_0 >= SASS_EACH && LA140_0 <= SASS_ELSE)||LA140_0==SASS_EXTEND||(LA140_0 >= SASS_FOR && LA140_0 <= SASS_FUNCTION)||(LA140_0 >= SASS_IF && LA140_0 <= SASS_MIXIN)||(LA140_0 >= SASS_RETURN && LA140_0 <= SASS_WHILE)||LA140_0==STRING||(LA140_0 >= TOPCENTER_SYM && LA140_0 <= TOPRIGHT_SYM)||LA140_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt140=1;
				}
				else if ( (LA140_0==COMMA) ) {
					alt140=2;
				}

				} finally {dbg.exitDecision(140);}

				switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(650,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(650,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs2667);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(650,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					try {
						isCyclicDecision = true;
						alt137 = dfa137.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(650,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:40: ( ws )?
							int alt136=2;
							try { dbg.enterSubRule(136);
							try { dbg.enterDecision(136, decisionCanBacktrack[136]);

							int LA136_0 = input.LA(1);
							if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
								alt136=1;
							}
							} finally {dbg.exitDecision(136);}

							switch (alt136) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:40: ws
									{
									dbg.location(650,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs2677);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(136);}
							dbg.location(650,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2680); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(650,52);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:52: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:52: ws
							{
							dbg.location(650,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2684);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:10: ( COMMA ( ws )? )
					{
					dbg.location(652,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:12: COMMA ( ws )?
					{
					dbg.location(652,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs2711); if (state.failed) return;dbg.location(652,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:18: ( ws )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( (LA139_0==COMMENT||LA139_0==NL||LA139_0==WS) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:18: ws
							{
							dbg.location(652,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs2713);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}

					}

					}
					break;

				default :
					if ( cnt140 >= 1 ) break loop140;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(140, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt140++;
			}
			} finally {dbg.exitSubRule(140);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(654, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:656:1: sass_map_pair : ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(656, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:657:5: ( ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:9: ( property | STRING ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(658,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:9: ( property | STRING )
			int alt141=2;
			try { dbg.enterSubRule(141);
			try { dbg.enterDecision(141, decisionCanBacktrack[141]);

			int LA141_0 = input.LA(1);
			if ( (LA141_0==AT_IDENT||(LA141_0 >= BOTTOMCENTER_SYM && LA141_0 <= BOTTOMRIGHT_SYM)||LA141_0==CHARSET_SYM||LA141_0==COUNTER_STYLE_SYM||LA141_0==FONT_FACE_SYM||LA141_0==GEN||LA141_0==HASH_SYMBOL||LA141_0==IDENT||LA141_0==IMPORT_SYM||(LA141_0 >= LEFTBOTTOM_SYM && LA141_0 <= LEFTTOP_SYM)||(LA141_0 >= MEDIA_SYM && LA141_0 <= MOZ_DOCUMENT_SYM)||LA141_0==NAMESPACE_SYM||LA141_0==PAGE_SYM||(LA141_0 >= RIGHTBOTTOM_SYM && LA141_0 <= RIGHTTOP_SYM)||(LA141_0 >= SASS_AT_ROOT && LA141_0 <= SASS_DEBUG)||(LA141_0 >= SASS_EACH && LA141_0 <= SASS_ELSE)||LA141_0==SASS_EXTEND||(LA141_0 >= SASS_FOR && LA141_0 <= SASS_FUNCTION)||(LA141_0 >= SASS_IF && LA141_0 <= SASS_MIXIN)||(LA141_0 >= SASS_RETURN && LA141_0 <= SASS_WHILE)||(LA141_0 >= TOPCENTER_SYM && LA141_0 <= TOPRIGHT_SYM)||LA141_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt141=1;
			}
			else if ( (LA141_0==STRING) ) {
				alt141=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 141, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(141);}

			switch (alt141) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:10: property
					{
					dbg.location(658,10);
					pushFollow(FOLLOW_property_in_sass_map_pair2749);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:19: STRING
					{
					dbg.location(658,19);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair2751); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(141);}
			dbg.location(658,27);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:27: ( ws )?
			int alt142=2;
			try { dbg.enterSubRule(142);
			try { dbg.enterDecision(142, decisionCanBacktrack[142]);

			int LA142_0 = input.LA(1);
			if ( (LA142_0==COMMENT||LA142_0==NL||LA142_0==WS) ) {
				alt142=1;
			}
			} finally {dbg.exitDecision(142);}

			switch (alt142) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:27: ws
					{
					dbg.location(658,27);
					pushFollow(FOLLOW_ws_in_sass_map_pair2754);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(142);}
			dbg.location(658,31);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair2757); if (state.failed) return;dbg.location(658,37);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:37: ( ws )?
			int alt143=2;
			try { dbg.enterSubRule(143);
			try { dbg.enterDecision(143, decisionCanBacktrack[143]);

			int LA143_0 = input.LA(1);
			if ( (LA143_0==COMMENT||LA143_0==NL||LA143_0==WS) ) {
				alt143=1;
			}
			} finally {dbg.exitDecision(143);}

			switch (alt143) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:37: ws
					{
					dbg.location(658,37);
					pushFollow(FOLLOW_ws_in_sass_map_pair2759);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(143);}
			dbg.location(658,41);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair2762);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(658,55);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:55: ( ( ws )? prio )?
			int alt145=2;
			try { dbg.enterSubRule(145);
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			try {
				isCyclicDecision = true;
				alt145 = dfa145.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:56: ( ws )? prio
					{
					dbg.location(658,56);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:56: ( ws )?
					int alt144=2;
					try { dbg.enterSubRule(144);
					try { dbg.enterDecision(144, decisionCanBacktrack[144]);

					int LA144_0 = input.LA(1);
					if ( (LA144_0==COMMENT||LA144_0==NL||LA144_0==WS) ) {
						alt144=1;
					}
					} finally {dbg.exitDecision(144);}

					switch (alt144) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:56: ws
							{
							dbg.location(658,56);
							pushFollow(FOLLOW_ws_in_sass_map_pair2765);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(144);}
					dbg.location(658,60);
					pushFollow(FOLLOW_prio_in_sass_map_pair2768);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(145);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(659, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:661:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(661, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:662:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(663,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt151=3;
			try { dbg.enterSubRule(151);
			try { dbg.enterDecision(151, decisionCanBacktrack[151]);

			try {
				isCyclicDecision = true;
				alt151 = dfa151.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(151);}

			switch (alt151) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(664,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(664,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2810); if (state.failed) return;dbg.location(664,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:27: ( ws selectorsGroup )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					try {
						isCyclicDecision = true;
						alt146 = dfa146.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:28: ws selectorsGroup
							{
							dbg.location(664,28);
							pushFollow(FOLLOW_ws_in_rule2813);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(664,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule2815);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(665,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(665,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule2836); if (state.failed) return;dbg.location(665,29);
					pushFollow(FOLLOW_ws_in_rule2838);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(665,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule2840); if (state.failed) return;dbg.location(665,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:39: ( ws )?
					int alt147=2;
					try { dbg.enterSubRule(147);
					try { dbg.enterDecision(147, decisionCanBacktrack[147]);

					int LA147_0 = input.LA(1);
					if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
						alt147=1;
					}
					} finally {dbg.exitDecision(147);}

					switch (alt147) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:39: ws
							{
							dbg.location(665,39);
							pushFollow(FOLLOW_ws_in_rule2842);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(147);}
					dbg.location(665,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(665,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule2847); if (state.failed) return;dbg.location(665,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:128: ( ws )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					int LA148_0 = input.LA(1);
					if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
						alt148=1;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:128: ws
							{
							dbg.location(665,128);
							pushFollow(FOLLOW_ws_in_rule2851);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}
					dbg.location(665,132);
					match(input,COLON,FOLLOW_COLON_in_rule2854); if (state.failed) return;dbg.location(665,138);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:138: ( ws )?
					int alt149=2;
					try { dbg.enterSubRule(149);
					try { dbg.enterDecision(149, decisionCanBacktrack[149]);

					int LA149_0 = input.LA(1);
					if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
						alt149=1;
					}
					} finally {dbg.exitDecision(149);}

					switch (alt149) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:138: ws
							{
							dbg.location(665,138);
							pushFollow(FOLLOW_ws_in_rule2856);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(149);}
					dbg.location(665,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule2859); if (state.failed) return;dbg.location(665,148);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:148: ( ws )?
					int alt150=2;
					try { dbg.enterSubRule(150);
					try { dbg.enterDecision(150, decisionCanBacktrack[150]);

					int LA150_0 = input.LA(1);
					if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
						alt150=1;
					}
					} finally {dbg.exitDecision(150);}

					switch (alt150) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:148: ws
							{
							dbg.location(665,148);
							pushFollow(FOLLOW_ws_in_rule2861);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(150);}
					dbg.location(665,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule2864); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:666:15: selectorsGroup
					{
					dbg.location(666,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule2882);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(151);}
			dbg.location(667,11);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:11: ( ws )?
			int alt152=2;
			try { dbg.enterSubRule(152);
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			int LA152_0 = input.LA(1);
			if ( (LA152_0==COMMENT||LA152_0==NL||LA152_0==WS) ) {
				alt152=1;
			}
			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:667:11: ws
					{
					dbg.location(667,11);
					pushFollow(FOLLOW_ws_in_rule2894);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(152);}
			dbg.location(668,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule2901); if (state.failed) return;dbg.location(668,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:12: ( ws )?
			int alt153=2;
			try { dbg.enterSubRule(153);
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			int LA153_0 = input.LA(1);
			if ( (LA153_0==COMMENT||LA153_0==NL||LA153_0==WS) ) {
				alt153=1;
			}
			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:12: ws
					{
					dbg.location(668,12);
					pushFollow(FOLLOW_ws_in_rule2903);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(153);}
			dbg.location(668,16);
			pushFollow(FOLLOW_syncToFollow_in_rule2906);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(669,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:9: ( declarations )?
			int alt154=2;
			try { dbg.enterSubRule(154);
			try { dbg.enterDecision(154, decisionCanBacktrack[154]);

			int LA154_0 = input.LA(1);
			if ( ((LA154_0 >= AT_IDENT && LA154_0 <= AT_SIGN)||(LA154_0 >= BOTTOMCENTER_SYM && LA154_0 <= BOTTOMRIGHT_SYM)||(LA154_0 >= CHARSET_SYM && LA154_0 <= COLON)||LA154_0==COUNTER_STYLE_SYM||LA154_0==DCOLON||LA154_0==DOT||LA154_0==FONT_FACE_SYM||(LA154_0 >= GEN && LA154_0 <= GREATER)||(LA154_0 >= HASH && LA154_0 <= HASH_SYMBOL)||LA154_0==IDENT||LA154_0==IMPORT_SYM||(LA154_0 >= LBRACKET && LA154_0 <= LEFTTOP_SYM)||LA154_0==LESS_AND||(LA154_0 >= MEDIA_SYM && LA154_0 <= MOZ_DOCUMENT_SYM)||LA154_0==NAMESPACE_SYM||LA154_0==PAGE_SYM||(LA154_0 >= PIPE && LA154_0 <= PLUS)||(LA154_0 >= RIGHTBOTTOM_SYM && LA154_0 <= RIGHTTOP_SYM)||(LA154_0 >= SASS_AT_ROOT && LA154_0 <= SASS_DEBUG)||(LA154_0 >= SASS_EACH && LA154_0 <= SASS_ELSE)||(LA154_0 >= SASS_ERROR && LA154_0 <= SASS_FUNCTION)||(LA154_0 >= SASS_IF && LA154_0 <= SASS_MIXIN)||(LA154_0 >= SASS_RETURN && LA154_0 <= SEMI)||LA154_0==STAR||LA154_0==TILDE||(LA154_0 >= TOPCENTER_SYM && LA154_0 <= TOPRIGHT_SYM)||LA154_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt154=1;
			}
			} finally {dbg.exitDecision(154);}

			switch (alt154) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:9: declarations
					{
					dbg.location(669,9);
					pushFollow(FOLLOW_declarations_in_rule2916);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(154);}
			dbg.location(670,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule2923); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(671, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:678:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(678, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:679:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt168=2;
			try { dbg.enterDecision(168, decisionCanBacktrack[168]);

			try {
				isCyclicDecision = true;
				alt168 = dfa168.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(168);}

			switch (alt168) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(680,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(156);

					loop156:
					while (true) {
						int alt156=2;
						try { dbg.enterDecision(156, decisionCanBacktrack[156]);

						int LA156_0 = input.LA(1);
						if ( (LA156_0==SEMI) ) {
							alt156=1;
						}

						} finally {dbg.exitDecision(156);}

						switch (alt156) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:9: SEMI ( ws )?
							{
							dbg.location(680,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations2957); if (state.failed) return;dbg.location(680,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:14: ( ws )?
							int alt155=2;
							try { dbg.enterSubRule(155);
							try { dbg.enterDecision(155, decisionCanBacktrack[155]);

							int LA155_0 = input.LA(1);
							if ( (LA155_0==COMMENT||LA155_0==NL||LA155_0==WS) ) {
								alt155=1;
							}
							} finally {dbg.exitDecision(155);}

							switch (alt155) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:14: ws
									{
									dbg.location(680,14);
									pushFollow(FOLLOW_ws_in_declarations2959);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(155);}

							}
							break;

						default :
							break loop156;
						}
					}
					} finally {dbg.exitSubRule(156);}
					dbg.location(680,21);
					pushFollow(FOLLOW_declaration_in_declarations2965);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(680,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(161);

					loop161:
					while (true) {
						int alt161=2;
						try { dbg.enterDecision(161, decisionCanBacktrack[161]);

						try {
							isCyclicDecision = true;
							alt161 = dfa161.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(161);}

						switch (alt161) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(680,34);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt160=2;
							try { dbg.enterSubRule(160);
							try { dbg.enterDecision(160, decisionCanBacktrack[160]);

							try {
								isCyclicDecision = true;
								alt160 = dfa160.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(160);}

							switch (alt160) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(680,35);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(680,36);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:36: ( ws )?
									int alt157=2;
									try { dbg.enterSubRule(157);
									try { dbg.enterDecision(157, decisionCanBacktrack[157]);

									int LA157_0 = input.LA(1);
									if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
										alt157=1;
									}
									} finally {dbg.exitDecision(157);}

									switch (alt157) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:36: ws
											{
											dbg.location(680,36);
											pushFollow(FOLLOW_ws_in_declarations2970);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(157);}
									dbg.location(680,40);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:40: ( SEMI ( ws )? )+
									int cnt159=0;
									try { dbg.enterSubRule(159);

									loop159:
									while (true) {
										int alt159=2;
										try { dbg.enterDecision(159, decisionCanBacktrack[159]);

										int LA159_0 = input.LA(1);
										if ( (LA159_0==SEMI) ) {
											alt159=1;
										}

										} finally {dbg.exitDecision(159);}

										switch (alt159) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:41: SEMI ( ws )?
											{
											dbg.location(680,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations2974); if (state.failed) return;dbg.location(680,46);
											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:46: ( ws )?
											int alt158=2;
											try { dbg.enterSubRule(158);
											try { dbg.enterDecision(158, decisionCanBacktrack[158]);

											int LA158_0 = input.LA(1);
											if ( (LA158_0==COMMENT||LA158_0==NL||LA158_0==WS) ) {
												alt158=1;
											}
											} finally {dbg.exitDecision(158);}

											switch (alt158) {
												case 1 :
													dbg.enterAlt(1);

													// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:46: ws
													{
													dbg.location(680,46);
													pushFollow(FOLLOW_ws_in_declarations2976);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(158);}

											}
											break;

										default :
											if ( cnt159 >= 1 ) break loop159;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(159, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt159++;
									}
									} finally {dbg.exitSubRule(159);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:53: ws
									{
									dbg.location(680,53);
									pushFollow(FOLLOW_ws_in_declarations2982);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(160);}
							dbg.location(680,57);
							pushFollow(FOLLOW_declaration_in_declarations2985);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop161;
						}
					}
					} finally {dbg.exitSubRule(161);}
					dbg.location(680,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt165=3;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					try {
						isCyclicDecision = true;
						alt165 = dfa165.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(680,72);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(680,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:73: ( ws )?
							int alt162=2;
							try { dbg.enterSubRule(162);
							try { dbg.enterDecision(162, decisionCanBacktrack[162]);

							int LA162_0 = input.LA(1);
							if ( (LA162_0==COMMENT||LA162_0==NL||LA162_0==WS) ) {
								alt162=1;
							}
							} finally {dbg.exitDecision(162);}

							switch (alt162) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:73: ws
									{
									dbg.location(680,73);
									pushFollow(FOLLOW_ws_in_declarations2991);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(162);}
							dbg.location(680,77);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:77: ( SEMI ( ws )? )+
							int cnt164=0;
							try { dbg.enterSubRule(164);

							loop164:
							while (true) {
								int alt164=2;
								try { dbg.enterDecision(164, decisionCanBacktrack[164]);

								int LA164_0 = input.LA(1);
								if ( (LA164_0==SEMI) ) {
									alt164=1;
								}

								} finally {dbg.exitDecision(164);}

								switch (alt164) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:78: SEMI ( ws )?
									{
									dbg.location(680,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations2995); if (state.failed) return;dbg.location(680,83);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:83: ( ws )?
									int alt163=2;
									try { dbg.enterSubRule(163);
									try { dbg.enterDecision(163, decisionCanBacktrack[163]);

									int LA163_0 = input.LA(1);
									if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
										alt163=1;
									}
									} finally {dbg.exitDecision(163);}

									switch (alt163) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:83: ws
											{
											dbg.location(680,83);
											pushFollow(FOLLOW_ws_in_declarations2997);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(163);}

									}
									break;

								default :
									if ( cnt164 >= 1 ) break loop164;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(164, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt164++;
							}
							} finally {dbg.exitSubRule(164);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:90: ws
							{
							dbg.location(680,90);
							pushFollow(FOLLOW_ws_in_declarations3003);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:8: ( SEMI ( ws )? )+
					{
					dbg.location(681,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:8: ( SEMI ( ws )? )+
					int cnt167=0;
					try { dbg.enterSubRule(167);

					loop167:
					while (true) {
						int alt167=2;
						try { dbg.enterDecision(167, decisionCanBacktrack[167]);

						int LA167_0 = input.LA(1);
						if ( (LA167_0==SEMI) ) {
							alt167=1;
						}

						} finally {dbg.exitDecision(167);}

						switch (alt167) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:9: SEMI ( ws )?
							{
							dbg.location(681,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3015); if (state.failed) return;dbg.location(681,14);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:14: ( ws )?
							int alt166=2;
							try { dbg.enterSubRule(166);
							try { dbg.enterDecision(166, decisionCanBacktrack[166]);

							int LA166_0 = input.LA(1);
							if ( (LA166_0==COMMENT||LA166_0==NL||LA166_0==WS) ) {
								alt166=1;
							}
							} finally {dbg.exitDecision(166);}

							switch (alt166) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:14: ws
									{
									dbg.location(681,14);
									pushFollow(FOLLOW_ws_in_declarations3017);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(166);}

							}
							break;

						default :
							if ( cnt167 >= 1 ) break loop167;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(167, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt167++;
					}
					} finally {dbg.exitSubRule(167);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(682, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:684:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(684, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt173=18;
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			int LA173_0 = input.LA(1);
			if ( (LA173_0==SASS_AT_ROOT) ) {
				int LA173_1 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_VAR) ) {
				int LA173_2 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred21_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==IDENT) ) {
				int LA173_3 = input.LA(2);
				if ( (synpred19_Css3()) ) {
					alt173=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==HASH_SYMBOL) ) {
				int LA173_4 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=5;
				}
				else if ( ((synpred22_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MINUS) ) {
				int LA173_5 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=3;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt173=4;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=5;
				}
				else if ( ((synpred22_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==GEN) ) {
				int LA173_6 = input.LA(2);
				if ( (synpred19_Css3()) ) {
					alt173=3;
				}
				else if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=6;
				}
				else if ( (true) ) {
					alt173=18;
				}

			}
			else if ( (LA173_0==SASS_MIXIN) ) {
				int LA173_7 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==GREATER||LA173_0==PLUS||LA173_0==TILDE) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==AT_SIGN) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==LESS_AND) ) {
				int LA173_11 = input.LA(2);
				if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=7;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==HASH) ) {
				int LA173_12 = input.LA(2);
				if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=7;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==DOT) ) {
				int LA173_13 = input.LA(2);
				if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=7;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==LBRACKET) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==COLON||LA173_0==DCOLON) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==STAR) ) {
				int LA173_16 = input.LA(2);
				if ( (synpred20_Css3()) ) {
					alt173=4;
				}
				else if ( (synpred21_Css3()) ) {
					alt173=5;
				}
				else if ( (synpred22_Css3()) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==PIPE) && (synpred20_Css3())) {
				alt173=4;
			}
			else if ( (LA173_0==AT_IDENT) ) {
				int LA173_18 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt173=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_INCLUDE) ) {
				int LA173_19 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt173=8;
				}
				else if ( ((synpred25_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt173=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MEDIA_SYM) ) {
				int LA173_20 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==PAGE_SYM) ) {
				int LA173_21 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==COUNTER_STYLE_SYM) ) {
				int LA173_22 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==FONT_FACE_SYM) ) {
				int LA173_23 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==MOZ_DOCUMENT_SYM) ) {
				int LA173_24 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA173_25 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt173=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_IF) ) {
				int LA173_26 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_FOR) ) {
				int LA173_27 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_EACH) ) {
				int LA173_28 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_WHILE) ) {
				int LA173_29 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_EXTEND) ) {
				int LA173_30 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_DEBUG||LA173_0==SASS_WARN) ) {
				int LA173_31 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_CONTENT) ) {
				int LA173_32 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_RETURN) ) {
				int LA173_33 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==IMPORT_SYM) ) {
				int LA173_34 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt173=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA173_0==SASS_ERROR) ) {
				alt173=16;
			}
			else if ( ((LA173_0 >= BOTTOMCENTER_SYM && LA173_0 <= BOTTOMRIGHT_SYM)||LA173_0==CHARSET_SYM||(LA173_0 >= LEFTBOTTOM_SYM && LA173_0 <= LEFTTOP_SYM)||LA173_0==NAMESPACE_SYM||(LA173_0 >= RIGHTBOTTOM_SYM && LA173_0 <= RIGHTTOP_SYM)||LA173_0==SASS_ELSE||LA173_0==SASS_FUNCTION||(LA173_0 >= TOPCENTER_SYM && LA173_0 <= TOPRIGHT_SYM)) ) {
				int LA173_36 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred21_Css3())) ) {
					alt173=5;
				}
				else if ( (((synpred22_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt173=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 173, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 173, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(686,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration3046);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:7: ( sass_map )=> sass_map
					{
					dbg.location(687,20);
					pushFollow(FOLLOW_sass_map_in_declaration3059);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(688,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration3071);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(689,145);
					pushFollow(FOLLOW_rule_in_declaration3134);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(690,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3146);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(692,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration3185);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(693,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration3197);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(694,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3210);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(694,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:39: ( ( ws )? IMPORTANT_SYM )?
					int alt170=2;
					try { dbg.enterSubRule(170);
					try { dbg.enterDecision(170, decisionCanBacktrack[170]);

					try {
						isCyclicDecision = true;
						alt170 = dfa170.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(170);}

					switch (alt170) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(694,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:40: ( ws )?
							int alt169=2;
							try { dbg.enterSubRule(169);
							try { dbg.enterDecision(169, decisionCanBacktrack[169]);

							int LA169_0 = input.LA(1);
							if ( (LA169_0==COMMENT||LA169_0==NL||LA169_0==WS) ) {
								alt169=1;
							}
							} finally {dbg.exitDecision(169);}

							switch (alt169) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:40: ws
									{
									dbg.location(694,40);
									pushFollow(FOLLOW_ws_in_declaration3213);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(169);}
							dbg.location(694,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3216); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(170);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(695,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(695,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration3233);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(695,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:57: ( ( ws )? IMPORTANT_SYM )?
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					try {
						isCyclicDecision = true;
						alt172 = dfa172.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(695,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:58: ( ws )?
							int alt171=2;
							try { dbg.enterSubRule(171);
							try { dbg.enterDecision(171, decisionCanBacktrack[171]);

							int LA171_0 = input.LA(1);
							if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
								alt171=1;
							}
							} finally {dbg.exitDecision(171);}

							switch (alt171) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:58: ws
									{
									dbg.location(695,58);
									pushFollow(FOLLOW_ws_in_declaration3236);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(171);}
							dbg.location(695,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration3239); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:7: {...}? at_rule
					{
					dbg.location(696,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(696,36);
					pushFollow(FOLLOW_at_rule_in_declaration3255);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:7: {...}? sass_control
					{
					dbg.location(697,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(697,25);
					pushFollow(FOLLOW_sass_control_in_declaration3265);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:7: {...}? sass_extend
					{
					dbg.location(698,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(698,25);
					pushFollow(FOLLOW_sass_extend_in_declaration3275);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: {...}? sass_debug
					{
					dbg.location(699,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(699,25);
					pushFollow(FOLLOW_sass_debug_in_declaration3285);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: {...}? sass_content
					{
					dbg.location(700,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(700,25);
					pushFollow(FOLLOW_sass_content_in_declaration3295);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: {...}? sass_function_return
					{
					dbg.location(701,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(701,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration3305);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: {...}? sass_error
					{
					dbg.location(702,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(702,25);
					pushFollow(FOLLOW_sass_error_in_declaration3315);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:7: {...}? importItem
					{
					dbg.location(703,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(703,25);
					pushFollow(FOLLOW_importItem_in_declaration3325);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:7: GEN
					{
					dbg.location(704,7);
					match(input,GEN,FOLLOW_GEN_in_declaration3333); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(705, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(711, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(713,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup3367);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(713,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(176);

			loop176:
			while (true) {
				int alt176=2;
				try { dbg.enterDecision(176, decisionCanBacktrack[176]);

				try {
					isCyclicDecision = true;
					alt176 = dfa176.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(176);}

				switch (alt176) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(713,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:19: ( ws )?
					int alt174=2;
					try { dbg.enterSubRule(174);
					try { dbg.enterDecision(174, decisionCanBacktrack[174]);

					int LA174_0 = input.LA(1);
					if ( (LA174_0==COMMENT||LA174_0==NL||LA174_0==WS) ) {
						alt174=1;
					}
					} finally {dbg.exitDecision(174);}

					switch (alt174) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:19: ws
							{
							dbg.location(713,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup3370);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(174);}
					dbg.location(713,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3373); if (state.failed) return;dbg.location(713,29);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:29: ( ws )?
					int alt175=2;
					try { dbg.enterSubRule(175);
					try { dbg.enterDecision(175, decisionCanBacktrack[175]);

					int LA175_0 = input.LA(1);
					if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
						alt175=1;
					}
					} finally {dbg.exitDecision(175);}

					switch (alt175) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:29: ws
							{
							dbg.location(713,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup3375);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(175);}
					dbg.location(713,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup3378);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop176;
				}
			}
			} finally {dbg.exitSubRule(176);}
			dbg.location(713,44);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:44: ({...}? COMMA )?
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			int LA177_0 = input.LA(1);
			if ( (LA177_0==COMMA) ) {
				alt177=1;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:45: {...}? COMMA
					{
					dbg.location(713,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(713,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup3385); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(177);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(714, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(716, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt184=2;
			try { dbg.enterDecision(184, decisionCanBacktrack[184]);

			try {
				isCyclicDecision = true;
				alt184 = dfa184.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(184);}

			switch (alt184) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(717,8);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:8: ( combinator ( ws )? )?
					int alt179=2;
					try { dbg.enterSubRule(179);
					try { dbg.enterDecision(179, decisionCanBacktrack[179]);

					int LA179_0 = input.LA(1);
					if ( (LA179_0==GREATER||LA179_0==PLUS||LA179_0==TILDE) ) {
						alt179=1;
					}
					} finally {dbg.exitDecision(179);}

					switch (alt179) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:9: combinator ( ws )?
							{
							dbg.location(717,9);
							pushFollow(FOLLOW_combinator_in_selector3406);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(717,20);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:20: ( ws )?
							int alt178=2;
							try { dbg.enterSubRule(178);
							try { dbg.enterDecision(178, decisionCanBacktrack[178]);

							int LA178_0 = input.LA(1);
							if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
								alt178=1;
							}
							} finally {dbg.exitDecision(178);}

							switch (alt178) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:20: ws
									{
									dbg.location(717,20);
									pushFollow(FOLLOW_ws_in_selector3408);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(178);}

							}
							break;

					}
					} finally {dbg.exitSubRule(179);}
					dbg.location(717,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector3413);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(717,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(183);

					loop183:
					while (true) {
						int alt183=2;
						try { dbg.enterDecision(183, decisionCanBacktrack[183]);

						try {
							isCyclicDecision = true;
							alt183 = dfa183.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(183);}

						switch (alt183) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(717,51);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt182=2;
							try { dbg.enterSubRule(182);
							try { dbg.enterDecision(182, decisionCanBacktrack[182]);

							try {
								isCyclicDecision = true;
								alt182 = dfa182.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(182);}

							switch (alt182) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(717,52);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:53: ( ws )? combinator ( ws )?
									{
									dbg.location(717,53);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:53: ( ws )?
									int alt180=2;
									try { dbg.enterSubRule(180);
									try { dbg.enterDecision(180, decisionCanBacktrack[180]);

									int LA180_0 = input.LA(1);
									if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
										alt180=1;
									}
									} finally {dbg.exitDecision(180);}

									switch (alt180) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:53: ws
											{
											dbg.location(717,53);
											pushFollow(FOLLOW_ws_in_selector3419);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(180);}
									dbg.location(717,57);
									pushFollow(FOLLOW_combinator_in_selector3422);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(717,68);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:68: ( ws )?
									int alt181=2;
									try { dbg.enterSubRule(181);
									try { dbg.enterDecision(181, decisionCanBacktrack[181]);

									int LA181_0 = input.LA(1);
									if ( (LA181_0==COMMENT||LA181_0==NL||LA181_0==WS) ) {
										alt181=1;
									}
									} finally {dbg.exitDecision(181);}

									switch (alt181) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:68: ws
											{
											dbg.location(717,68);
											pushFollow(FOLLOW_ws_in_selector3424);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(181);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:717:73: ws
									{
									dbg.location(717,73);
									pushFollow(FOLLOW_ws_in_selector3428);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(182);}
							dbg.location(717,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector3431);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop183;
						}
					}
					} finally {dbg.exitSubRule(183);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:718:10: {...}? combinator
					{
					dbg.location(718,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(718,28);
					pushFollow(FOLLOW_combinator_in_selector3446);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(719, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:721:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(721, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:722:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(722,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(724, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:726:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(726, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt193=2;
			try { dbg.enterDecision(193, decisionCanBacktrack[193]);

			int LA193_0 = input.LA(1);
			if ( (LA193_0==AT_SIGN||LA193_0==COLON||LA193_0==DCOLON||LA193_0==DOT||(LA193_0 >= HASH && LA193_0 <= HASH_SYMBOL)||LA193_0==LBRACKET||LA193_0==MINUS||LA193_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt193=1;
			}
			else if ( (LA193_0==LESS_AND) ) {
				int LA193_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt193=1;
				}
				else if ( (synpred27_Css3()) ) {
					alt193=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 193, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA193_0==IDENT) ) {
				int LA193_3 = input.LA(2);
				if ( (LA193_3==HASH_SYMBOL) ) {
					int LA193_7 = input.LA(3);
					if ( (LA193_7==LBRACE) ) {
						alt193=1;
					}
					else if ( (LA193_7==NAME) && (synpred27_Css3())) {
						alt193=2;
					}
					else if ( (LA193_7==AT_SIGN) && (synpred27_Css3())) {
						alt193=2;
					}

				}
				else if ( (LA193_3==PIPE) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COMMENT||LA193_3==NL||LA193_3==WS) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==AT_SIGN) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LESS_AND) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==HASH) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==DOT) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LBRACKET) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COLON||LA193_3==DCOLON) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==GREATER||LA193_3==PLUS||LA193_3==TILDE) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==COMMA) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==LBRACE) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==RPAREN) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==SEMI) && (synpred27_Css3())) {
					alt193=2;
				}
				else if ( (LA193_3==RBRACE) && (synpred27_Css3())) {
					alt193=2;
				}

			}
			else if ( (LA193_0==STAR) && (synpred27_Css3())) {
				alt193=2;
			}
			else if ( (LA193_0==PIPE) && (synpred27_Css3())) {
				alt193=2;
			}
			else if ( (LA193_0==GEN) && (synpred27_Css3())) {
				alt193=2;
			}

			} finally {dbg.exitDecision(193);}

			switch (alt193) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )*
					{
					dbg.location(728,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp )
					int alt185=2;
					try { dbg.enterSubRule(185);
					try { dbg.enterDecision(185, decisionCanBacktrack[185]);

					switch ( input.LA(1) ) {
					case AT_SIGN:
					case COLON:
					case DCOLON:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt185=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA185_2 = input.LA(2);
						if ( (LA185_2==LBRACE) ) {
							alt185=2;
						}
						else if ( (LA185_2==AT_SIGN||LA185_2==NAME) ) {
							alt185=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 185, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						alt185=2;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 185, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(185);}

					switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:10: elementSubsequent
							{
							dbg.location(728,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3498);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(728,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(728,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3504);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(185);}
					dbg.location(728,82);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:82: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )*
					try { dbg.enterSubRule(189);

					loop189:
					while (true) {
						int alt189=2;
						try { dbg.enterDecision(189, decisionCanBacktrack[189]);

						int LA189_0 = input.LA(1);
						if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
							int LA189_1 = input.LA(2);
							if ( (synpred26_Css3()) ) {
								alt189=1;
							}

						}
						else if ( (LA189_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==AT_SIGN) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==LESS_AND) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==HASH) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==HASH_SYMBOL) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==DOT) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==LBRACKET) && (synpred26_Css3())) {
							alt189=1;
						}
						else if ( (LA189_0==COLON||LA189_0==DCOLON) && (synpred26_Css3())) {
							alt189=1;
						}

						} finally {dbg.exitDecision(189);}

						switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:83: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
							{
							dbg.location(728,97);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:97: ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
							int alt188=2;
							try { dbg.enterSubRule(188);
							try { dbg.enterDecision(188, decisionCanBacktrack[188]);

							try {
								isCyclicDecision = true;
								alt188 = dfa188.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(188);}

							switch (alt188) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:98: ( ( ws )? elementSubsequent )
									{
									dbg.location(728,98);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:98: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:99: ( ws )? elementSubsequent
									{
									dbg.location(728,99);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:99: ( ws )?
									int alt186=2;
									try { dbg.enterSubRule(186);
									try { dbg.enterDecision(186, decisionCanBacktrack[186]);

									int LA186_0 = input.LA(1);
									if ( (LA186_0==COMMENT||LA186_0==NL||LA186_0==WS) ) {
										alt186=1;
									}
									} finally {dbg.exitDecision(186);}

									switch (alt186) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:99: ws
											{
											dbg.location(728,99);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3518);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(186);}
									dbg.location(728,103);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3521);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:123: ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(728,123);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:123: ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt187=2;
									try { dbg.enterSubRule(187);
									try { dbg.enterDecision(187, decisionCanBacktrack[187]);

									int LA187_0 = input.LA(1);
									if ( (LA187_0==COMMENT||LA187_0==NL||LA187_0==WS) ) {
										alt187=1;
									}
									else if ( (LA187_0==AT_SIGN) ) {
										alt187=2;
									}

									else {
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 187, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}

									} finally {dbg.exitDecision(187);}

									switch (alt187) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:124: ws {...}? sass_selector_interpolation_exp
											{
											dbg.location(728,124);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3526);
											ws();
											state._fsp--;
											if (state.failed) return;dbg.location(728,127);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(728,145);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3530);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:179: {...}? less_selector_interpolation_exp
											{
											dbg.location(728,179);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(728,197);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3536);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(187);}

									}
									break;

							}
							} finally {dbg.exitSubRule(188);}

							}
							break;

						default :
							break loop189;
						}
					}
					} finally {dbg.exitSubRule(189);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(729,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence3549);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(729,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(192);

					loop192:
					while (true) {
						int alt192=2;
						try { dbg.enterDecision(192, decisionCanBacktrack[192]);

						int LA192_0 = input.LA(1);
						if ( (LA192_0==COMMENT||LA192_0==NL||LA192_0==WS) ) {
							int LA192_1 = input.LA(2);
							if ( (synpred28_Css3()) ) {
								alt192=1;
							}

						}
						else if ( (LA192_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==AT_SIGN) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==LESS_AND) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==HASH) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==HASH_SYMBOL) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==DOT) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==LBRACKET) && (synpred28_Css3())) {
							alt192=1;
						}
						else if ( (LA192_0==COLON||LA192_0==DCOLON) && (synpred28_Css3())) {
							alt192=1;
						}

						} finally {dbg.exitDecision(192);}

						switch (alt192) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(729,48);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt191=2;
							try { dbg.enterSubRule(191);
							try { dbg.enterDecision(191, decisionCanBacktrack[191]);

							try {
								isCyclicDecision = true;
								alt191 = dfa191.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(191);}

							switch (alt191) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(729,49);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:50: ( ws )? elementSubsequent
									{
									dbg.location(729,50);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:50: ( ws )?
									int alt190=2;
									try { dbg.enterSubRule(190);
									try { dbg.enterDecision(190, decisionCanBacktrack[190]);

									int LA190_0 = input.LA(1);
									if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
										alt190=1;
									}
									} finally {dbg.exitDecision(190);}

									switch (alt190) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:50: ws
											{
											dbg.location(729,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence3561);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(190);}
									dbg.location(729,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence3564);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(729,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(729,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence3571);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(729,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3573);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(191);}

							}
							break;

						default :
							break loop192;
						}
					}
					} finally {dbg.exitSubRule(192);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(730, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(737, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt194=8;
			try { dbg.enterDecision(194, decisionCanBacktrack[194]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt194=1;
				}
				break;
			case HASH:
				{
				alt194=2;
				}
				break;
			case DOT:
				{
				alt194=3;
				}
				break;
			case LBRACKET:
				{
				alt194=4;
				}
				break;
			case COLON:
				{
				alt194=5;
				}
				break;
			case DCOLON:
				{
				alt194=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt194=7;
				}
				break;
			case LESS_AND:
				{
				alt194=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 194, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(194);}

			switch (alt194) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:7: HASH_SYMBOL
					{
					dbg.location(738,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred3598); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:21: HASH
					{
					dbg.location(738,21);
					match(input,HASH,FOLLOW_HASH_in_esPred3602); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:28: DOT
					{
					dbg.location(738,28);
					match(input,DOT,FOLLOW_DOT_in_esPred3606); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:34: LBRACKET
					{
					dbg.location(738,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred3610); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:45: COLON
					{
					dbg.location(738,45);
					match(input,COLON,FOLLOW_COLON_in_esPred3614); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:53: DCOLON
					{
					dbg.location(738,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred3618); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(738,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3622); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:738:90: {...}? LESS_AND
					{
					dbg.location(738,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(738,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred3628); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(739, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(741, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(743,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt195=2;
			try { dbg.enterSubRule(195);
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			int LA195_0 = input.LA(1);
			if ( (LA195_0==IDENT) ) {
				int LA195_1 = input.LA(2);
				if ( (LA195_1==PIPE) && (synpred29_Css3())) {
					alt195=1;
				}
			}
			else if ( (LA195_0==STAR) ) {
				int LA195_2 = input.LA(2);
				if ( (LA195_2==PIPE) && (synpred29_Css3())) {
					alt195=1;
				}
			}
			else if ( (LA195_0==PIPE) && (synpred29_Css3())) {
				alt195=1;
			}
			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(743,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector3670);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(195);}
			dbg.location(743,49);
			pushFollow(FOLLOW_elementName_in_typeSelector3674);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(744, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(746, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(747,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:5: ( namespacePrefixName | STAR )?
			int alt196=3;
			try { dbg.enterSubRule(196);
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			int LA196_0 = input.LA(1);
			if ( (LA196_0==IDENT) ) {
				alt196=1;
			}
			else if ( (LA196_0==STAR) ) {
				alt196=2;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:7: namespacePrefixName
					{
					dbg.location(747,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix3689);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:29: STAR
					{
					dbg.location(747,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix3693); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(196);}
			dbg.location(747,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix3697); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(748, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? less_selector_interpolation_exp |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(751, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:752:5: ( ({...}? sass_extend_only_selector |{...}? less_selector_interpolation_exp |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:753:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation_exp |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(753,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:753:5: ({...}? sass_extend_only_selector |{...}? less_selector_interpolation_exp |{...}? LESS_AND ( IDENT | NUMBER )* | cssId | cssClass | slAttribute | pseudo )
			int alt198=7;
			try { dbg.enterSubRule(198);
			try { dbg.enterDecision(198, decisionCanBacktrack[198]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt198=1;
				}
				break;
			case AT_SIGN:
				{
				alt198=2;
				}
				break;
			case LESS_AND:
				{
				alt198=3;
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt198=4;
				}
				break;
			case DOT:
				{
				alt198=5;
				}
				break;
			case LBRACKET:
				{
				alt198=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt198=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 198, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(198);}

			switch (alt198) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:9: {...}? sass_extend_only_selector
					{
					dbg.location(754,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(754,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent3729);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:755:11: {...}? less_selector_interpolation_exp
					{
					dbg.location(755,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(755,29);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent3743);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:11: {...}? LESS_AND ( IDENT | NUMBER )*
					{
					dbg.location(756,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(756,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent3757); if (state.failed) return;dbg.location(756,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:756:49: ( IDENT | NUMBER )*
					try { dbg.enterSubRule(197);

					loop197:
					while (true) {
						int alt197=2;
						try { dbg.enterDecision(197, decisionCanBacktrack[197]);

						int LA197_0 = input.LA(1);
						if ( (LA197_0==IDENT||LA197_0==NUMBER) ) {
							alt197=1;
						}

						} finally {dbg.exitDecision(197);}

						switch (alt197) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(756,49);
							if ( input.LA(1)==IDENT||input.LA(1)==NUMBER ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							break loop197;
						}
					}
					} finally {dbg.exitSubRule(197);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:757:8: cssId
					{
					dbg.location(757,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent3775);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:8: cssClass
					{
					dbg.location(758,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent3784);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:11: slAttribute
					{
					dbg.location(759,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent3796);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:11: pseudo
					{
					dbg.location(760,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent3808);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(198);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(762, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(765, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt201=2;
			try { dbg.enterDecision(201, decisionCanBacktrack[201]);

			int LA201_0 = input.LA(1);
			if ( (LA201_0==HASH) ) {
				alt201=1;
			}
			else if ( (LA201_0==HASH_SYMBOL) ) {
				alt201=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 201, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(201);}

			switch (alt201) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(766,7);
					match(input,HASH,FOLLOW_HASH_in_cssId3832); if (state.failed) return;dbg.location(766,12);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:12: ({...}? sass_selector_interpolation_exp )?
					int alt199=2;
					try { dbg.enterSubRule(199);
					try { dbg.enterDecision(199, decisionCanBacktrack[199]);

					int LA199_0 = input.LA(1);
					if ( (LA199_0==IDENT||LA199_0==MINUS) ) {
						alt199=1;
					}
					else if ( (LA199_0==HASH_SYMBOL) ) {
						int LA199_2 = input.LA(2);
						if ( (LA199_2==LBRACE) ) {
							alt199=1;
						}
					}
					} finally {dbg.exitDecision(199);}

					switch (alt199) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:766:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(766,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(766,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId3837);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(199);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(768,9);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(768,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId3859); if (state.failed) return;dbg.location(769,13);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt200=2;
					try { dbg.enterSubRule(200);
					try { dbg.enterDecision(200, decisionCanBacktrack[200]);

					int LA200_0 = input.LA(1);
					if ( (LA200_0==NAME) ) {
						alt200=1;
					}
					else if ( (LA200_0==AT_SIGN) ) {
						alt200=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 200, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(200);}

					switch (alt200) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:15: NAME
							{
							dbg.location(769,15);
							match(input,NAME,FOLLOW_NAME_in_cssId3875); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(770,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(770,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId3895);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(200);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(773, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:779:1: cssClass : DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation_exp ) ;
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(779, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:5: ( DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation_exp ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:780:7: DOT ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation_exp )
			{
			dbg.location(780,7);
			match(input,DOT,FOLLOW_DOT_in_cssClass3946); if (state.failed) return;dbg.location(781,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:781:9: ({...}? sass_selector_interpolation_exp | IDENT | NOT | GEN |{...}? less_selector_interpolation_exp )
			int alt202=5;
			try { dbg.enterSubRule(202);
			try { dbg.enterDecision(202, decisionCanBacktrack[202]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA202_1 = input.LA(2);
				if ( (LA202_1==HASH_SYMBOL) ) {
					int LA202_6 = input.LA(3);
					if ( (LA202_6==LBRACE) ) {
						alt202=1;
					}
					else if ( (LA202_6==AT_SIGN||LA202_6==NAME) ) {
						alt202=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 202, 6, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA202_1==AT_SIGN||(LA202_1 >= COLON && LA202_1 <= COMMENT)||LA202_1==DCOLON||LA202_1==DOT||LA202_1==GREATER||LA202_1==HASH||(LA202_1 >= LBRACE && LA202_1 <= LBRACKET)||LA202_1==LESS_AND||LA202_1==NL||LA202_1==PLUS||LA202_1==RBRACE||LA202_1==RPAREN||LA202_1==SASS_EXTEND_ONLY_SELECTOR||LA202_1==SEMI||LA202_1==TILDE||LA202_1==WS) ) {
					alt202=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 202, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
			case MINUS:
				{
				alt202=1;
				}
				break;
			case NOT:
				{
				alt202=3;
				}
				break;
			case GEN:
				{
				alt202=4;
				}
				break;
			case AT_SIGN:
				{
				alt202=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 202, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(202);}

			switch (alt202) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:782:14: {...}? sass_selector_interpolation_exp
					{
					dbg.location(782,14);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isScssSource()");
					}dbg.location(782,33);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass3974);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:15: IDENT
					{
					dbg.location(783,15);
					match(input,IDENT,FOLLOW_IDENT_in_cssClass3990); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:784:15: NOT
					{
					dbg.location(784,15);
					match(input,NOT,FOLLOW_NOT_in_cssClass4006); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:785:15: GEN
					{
					dbg.location(785,15);
					match(input,GEN,FOLLOW_GEN_in_cssClass4022); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:15: {...}? less_selector_interpolation_exp
					{
					dbg.location(786,15);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "isLessSource()");
					}dbg.location(786,33);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass4040);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(202);}

			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(788, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(795, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:796:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(796,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(797, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:799:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(799, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:800:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:800:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(800,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute4106); if (state.failed) return;dbg.location(801,6);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:6: ( namespacePrefix )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==IDENT) ) {
				int LA203_1 = input.LA(2);
				if ( (LA203_1==PIPE) ) {
					alt203=1;
				}
			}
			else if ( (LA203_0==PIPE||LA203_0==STAR) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:6: namespacePrefix
					{
					dbg.location(801,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute4113);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(801,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:23: ( ws )?
			int alt204=2;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			int LA204_0 = input.LA(1);
			if ( (LA204_0==COMMENT||LA204_0==NL||LA204_0==WS) ) {
				alt204=1;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:23: ws
					{
					dbg.location(801,23);
					pushFollow(FOLLOW_ws_in_slAttribute4116);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}
			dbg.location(802,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute4127);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(802,25);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:802:25: ( ws )?
			int alt205=2;
			try { dbg.enterSubRule(205);
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
				alt205=1;
			}
			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:802:25: ws
					{
					dbg.location(802,25);
					pushFollow(FOLLOW_ws_in_slAttribute4129);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(205);}
			dbg.location(804,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:804:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==BEGINS||LA208_0==CONTAINS||LA208_0==DASHMATCH||LA208_0==ENDS||LA208_0==INCLUDES||LA208_0==OPEQ) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:805:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(805,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(813,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:17: ( ws )?
					int alt206=2;
					try { dbg.enterSubRule(206);
					try { dbg.enterDecision(206, decisionCanBacktrack[206]);

					int LA206_0 = input.LA(1);
					if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
						alt206=1;
					}
					} finally {dbg.exitDecision(206);}

					switch (alt206) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:17: ws
							{
							dbg.location(813,17);
							pushFollow(FOLLOW_ws_in_slAttribute4343);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(206);}
					dbg.location(814,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute4362);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(815,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:815:17: ( ws )?
					int alt207=2;
					try { dbg.enterSubRule(207);
					try { dbg.enterDecision(207, decisionCanBacktrack[207]);

					int LA207_0 = input.LA(1);
					if ( (LA207_0==COMMENT||LA207_0==NL||LA207_0==WS) ) {
						alt207=1;
					}
					} finally {dbg.exitDecision(207);}

					switch (alt207) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:815:17: ws
							{
							dbg.location(815,17);
							pushFollow(FOLLOW_ws_in_slAttribute4380);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(207);}

					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(818,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute4405); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(819, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:826:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(826, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:4: IDENT
			{
			dbg.location(827,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName4421); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(828, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(830, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:831:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(831,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(836, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:838:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(838, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(839,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(840,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:840:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt220=4;
			try { dbg.enterSubRule(220);
			try { dbg.enterDecision(220, decisionCanBacktrack[220]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA220_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()")),""))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt220=2;
				}
				break;
			case NOT:
				{
				alt220=3;
				}
				break;
			case GEN:
				{
				alt220=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 220, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(220);}

			switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(841,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(842,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(843,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:843:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt213=2;
					try { dbg.enterSubRule(213);
					try { dbg.enterDecision(213, decisionCanBacktrack[213]);

					try {
						isCyclicDecision = true;
						alt213 = dfa213.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(213);}

					switch (alt213) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(844,25);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:25: ( ws )?
							int alt209=2;
							try { dbg.enterSubRule(209);
							try { dbg.enterDecision(209, decisionCanBacktrack[209]);

							int LA209_0 = input.LA(1);
							if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
								alt209=1;
							}
							} finally {dbg.exitDecision(209);}

							switch (alt209) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:25: ws
									{
									dbg.location(844,25);
									pushFollow(FOLLOW_ws_in_pseudo4613);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(209);}
							dbg.location(844,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4616); if (state.failed) return;dbg.location(844,36);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:36: ( ws )?
							int alt210=2;
							try { dbg.enterSubRule(210);
							try { dbg.enterDecision(210, decisionCanBacktrack[210]);

							int LA210_0 = input.LA(1);
							if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
								alt210=1;
							}
							} finally {dbg.exitDecision(210);}

							switch (alt210) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:36: ws
									{
									dbg.location(844,36);
									pushFollow(FOLLOW_ws_in_pseudo4618);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(210);}
							dbg.location(844,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:40: ( ( expression ( ws )? ) | STAR )?
							int alt212=3;
							try { dbg.enterSubRule(212);
							try { dbg.enterDecision(212, decisionCanBacktrack[212]);

							int LA212_0 = input.LA(1);
							if ( ((LA212_0 >= ANGLE && LA212_0 <= AT_SIGN)||(LA212_0 >= BOTTOMCENTER_SYM && LA212_0 <= BOTTOMRIGHT_SYM)||LA212_0==CHARSET_SYM||LA212_0==COUNTER_STYLE_SYM||LA212_0==DIMENSION||LA212_0==EMS||LA212_0==EXS||(LA212_0 >= FONT_FACE_SYM && LA212_0 <= FREQ)||LA212_0==GEN||(LA212_0 >= HASH && LA212_0 <= HASH_SYMBOL)||LA212_0==IDENT||LA212_0==IMPORT_SYM||(LA212_0 >= LEFTBOTTOM_SYM && LA212_0 <= LENGTH)||(LA212_0 >= LESS_AND && LA212_0 <= LESS_JS_STRING)||(LA212_0 >= MEDIA_SYM && LA212_0 <= MOZ_DOCUMENT_SYM)||LA212_0==NAMESPACE_SYM||LA212_0==NUMBER||(LA212_0 >= PAGE_SYM && LA212_0 <= PERCENTAGE_SYMBOL)||LA212_0==PLUS||(LA212_0 >= REM && LA212_0 <= RIGHTTOP_SYM)||(LA212_0 >= SASS_AT_ROOT && LA212_0 <= SASS_DEBUG)||(LA212_0 >= SASS_EACH && LA212_0 <= SASS_ELSE)||LA212_0==SASS_EXTEND||(LA212_0 >= SASS_FOR && LA212_0 <= SASS_FUNCTION)||(LA212_0 >= SASS_IF && LA212_0 <= SASS_MIXIN)||(LA212_0 >= SASS_RETURN && LA212_0 <= SASS_WHILE)||LA212_0==STRING||(LA212_0 >= TILDE && LA212_0 <= TOPRIGHT_SYM)||LA212_0==URI||LA212_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt212=1;
							}
							else if ( (LA212_0==STAR) ) {
								alt212=2;
							}
							} finally {dbg.exitDecision(212);}

							switch (alt212) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:42: ( expression ( ws )? )
									{
									dbg.location(844,42);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:43: expression ( ws )?
									{
									dbg.location(844,43);
									pushFollow(FOLLOW_expression_in_pseudo4624);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(844,54);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:54: ( ws )?
									int alt211=2;
									try { dbg.enterSubRule(211);
									try { dbg.enterDecision(211, decisionCanBacktrack[211]);

									int LA211_0 = input.LA(1);
									if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
										alt211=1;
									}
									} finally {dbg.exitDecision(211);}

									switch (alt211) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:54: ws
											{
											dbg.location(844,54);
											pushFollow(FOLLOW_ws_in_pseudo4626);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(211);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:61: STAR
									{
									dbg.location(844,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo4632); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(212);}
							dbg.location(844,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4637); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(213);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:847:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(847,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(847,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo4700);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					{
					dbg.location(849,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:17: ( NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:19: NOT ( ws )? LPAREN ( ws )? ( simpleSelectorSequence )? RPAREN
					{
					dbg.location(849,19);
					match(input,NOT,FOLLOW_NOT_in_pseudo4738); if (state.failed) return;dbg.location(849,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:23: ( ws )?
					int alt214=2;
					try { dbg.enterSubRule(214);
					try { dbg.enterDecision(214, decisionCanBacktrack[214]);

					int LA214_0 = input.LA(1);
					if ( (LA214_0==COMMENT||LA214_0==NL||LA214_0==WS) ) {
						alt214=1;
					}
					} finally {dbg.exitDecision(214);}

					switch (alt214) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:23: ws
							{
							dbg.location(849,23);
							pushFollow(FOLLOW_ws_in_pseudo4740);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(214);}
					dbg.location(849,27);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4743); if (state.failed) return;dbg.location(849,34);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:34: ( ws )?
					int alt215=2;
					try { dbg.enterSubRule(215);
					try { dbg.enterDecision(215, decisionCanBacktrack[215]);

					int LA215_0 = input.LA(1);
					if ( (LA215_0==COMMENT||LA215_0==NL||LA215_0==WS) ) {
						alt215=1;
					}
					} finally {dbg.exitDecision(215);}

					switch (alt215) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:34: ws
							{
							dbg.location(849,34);
							pushFollow(FOLLOW_ws_in_pseudo4745);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(215);}
					dbg.location(849,38);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:38: ( simpleSelectorSequence )?
					int alt216=2;
					try { dbg.enterSubRule(216);
					try { dbg.enterDecision(216, decisionCanBacktrack[216]);

					int LA216_0 = input.LA(1);
					if ( (LA216_0==AT_SIGN||LA216_0==COLON||LA216_0==DCOLON||LA216_0==DOT||LA216_0==GEN||(LA216_0 >= HASH && LA216_0 <= HASH_SYMBOL)||LA216_0==IDENT||LA216_0==LBRACKET||LA216_0==LESS_AND||LA216_0==MINUS||LA216_0==PIPE||LA216_0==SASS_EXTEND_ONLY_SELECTOR||LA216_0==STAR) ) {
						alt216=1;
					}
					} finally {dbg.exitDecision(216);}

					switch (alt216) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:38: simpleSelectorSequence
							{
							dbg.location(849,38);
							pushFollow(FOLLOW_simpleSelectorSequence_in_pseudo4748);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(216);}
					dbg.location(849,62);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4751); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(851,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:17: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:18: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(851,18);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(851,36);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(851,65);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo4795); if (state.failed) return;dbg.location(851,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:71: ( ws )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( (LA217_0==COMMENT||LA217_0==NL||LA217_0==WS) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:71: ws
							{
							dbg.location(851,71);
							pushFollow(FOLLOW_ws_in_pseudo4797);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(851,75);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo4800); if (state.failed) return;dbg.location(851,82);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:82: ( ws )?
					int alt218=2;
					try { dbg.enterSubRule(218);
					try { dbg.enterDecision(218, decisionCanBacktrack[218]);

					int LA218_0 = input.LA(1);
					if ( (LA218_0==COMMENT||LA218_0==NL||LA218_0==WS) ) {
						alt218=1;
					}
					} finally {dbg.exitDecision(218);}

					switch (alt218) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:82: ws
							{
							dbg.location(851,82);
							pushFollow(FOLLOW_ws_in_pseudo4802);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(218);}
					dbg.location(851,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:86: ( selectorsGroup )?
					int alt219=2;
					try { dbg.enterSubRule(219);
					try { dbg.enterDecision(219, decisionCanBacktrack[219]);

					int LA219_0 = input.LA(1);
					if ( (LA219_0==AT_SIGN||LA219_0==COLON||LA219_0==DCOLON||LA219_0==DOT||(LA219_0 >= GEN && LA219_0 <= GREATER)||(LA219_0 >= HASH && LA219_0 <= HASH_SYMBOL)||LA219_0==IDENT||LA219_0==LBRACKET||LA219_0==LESS_AND||LA219_0==MINUS||(LA219_0 >= PIPE && LA219_0 <= PLUS)||LA219_0==SASS_EXTEND_ONLY_SELECTOR||LA219_0==STAR||LA219_0==TILDE) ) {
						alt219=1;
					}
					} finally {dbg.exitDecision(219);}

					switch (alt219) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:86: selectorsGroup
							{
							dbg.location(851,86);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo4805);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(219);}
					dbg.location(851,102);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo4808); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(220);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(853, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:1: propertyDeclaration : ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(855, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:856:5: ( ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? |{...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue )
			int alt229=2;
			try { dbg.enterDecision(229, decisionCanBacktrack[229]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA229_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt229=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA229_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt229=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA229_3 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt229=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUS:
				{
				int LA229_4 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt229=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA229_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt229=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA229_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt229=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA229_7 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt229=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt229=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 229, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 229, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(229);}

			switch (alt229) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:5: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(857,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:5: ( STAR )?
					int alt221=2;
					try { dbg.enterSubRule(221);
					try { dbg.enterDecision(221, decisionCanBacktrack[221]);

					int LA221_0 = input.LA(1);
					if ( (LA221_0==STAR) ) {
						alt221=1;
					}
					} finally {dbg.exitDecision(221);}

					switch (alt221) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:5: STAR
							{
							dbg.location(857,5);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4846); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(221);}
					dbg.location(857,11);
					pushFollow(FOLLOW_property_in_propertyDeclaration4849);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(857,20);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:20: ( ws )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:20: ws
							{
							dbg.location(857,20);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4851);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(857,24);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4854); if (state.failed) return;dbg.location(857,30);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:30: ( ws )?
					int alt223=2;
					try { dbg.enterSubRule(223);
					try { dbg.enterDecision(223, decisionCanBacktrack[223]);

					int LA223_0 = input.LA(1);
					if ( (LA223_0==COMMENT||LA223_0==NL||LA223_0==WS) ) {
						alt223=1;
					}
					} finally {dbg.exitDecision(223);}

					switch (alt223) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:30: ws
							{
							dbg.location(857,30);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4856);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(223);}
					dbg.location(857,34);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration4859);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(857,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:48: ( ( ws )? prio )?
					int alt225=2;
					try { dbg.enterSubRule(225);
					try { dbg.enterDecision(225, decisionCanBacktrack[225]);

					try {
						isCyclicDecision = true;
						alt225 = dfa225.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(225);}

					switch (alt225) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:49: ( ws )? prio
							{
							dbg.location(857,49);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:49: ( ws )?
							int alt224=2;
							try { dbg.enterSubRule(224);
							try { dbg.enterDecision(224, decisionCanBacktrack[224]);

							int LA224_0 = input.LA(1);
							if ( (LA224_0==COMMENT||LA224_0==NL||LA224_0==WS) ) {
								alt224=1;
							}
							} finally {dbg.exitDecision(224);}

							switch (alt224) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:857:49: ws
									{
									dbg.location(857,49);
									pushFollow(FOLLOW_ws_in_propertyDeclaration4862);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(224);}
							dbg.location(857,53);
							pushFollow(FOLLOW_prio_in_propertyDeclaration4865);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(225);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(858,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(858,36);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:36: ( STAR )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==STAR) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:36: STAR
							{
							dbg.location(858,36);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration4877); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(226);}
					dbg.location(858,42);
					pushFollow(FOLLOW_property_in_propertyDeclaration4880);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(858,51);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:51: ( ws )?
					int alt227=2;
					try { dbg.enterSubRule(227);
					try { dbg.enterDecision(227, decisionCanBacktrack[227]);

					int LA227_0 = input.LA(1);
					if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
						alt227=1;
					}
					} finally {dbg.exitDecision(227);}

					switch (alt227) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:51: ws
							{
							dbg.location(858,51);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4882);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(227);}
					dbg.location(858,55);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration4885); if (state.failed) return;dbg.location(858,61);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:61: ( ws )?
					int alt228=2;
					try { dbg.enterSubRule(228);
					try { dbg.enterDecision(228, decisionCanBacktrack[228]);

					int LA228_0 = input.LA(1);
					if ( (LA228_0==COMMENT||LA228_0==NL||LA228_0==WS) ) {
						alt228=1;
					}
					} finally {dbg.exitDecision(228);}

					switch (alt228) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:858:61: ws
							{
							dbg.location(858,61);
							pushFollow(FOLLOW_ws_in_propertyDeclaration4887);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(228);}
					dbg.location(858,65);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration4890);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(859, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(868, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:869:5: ({...}? cp_expression_list | propertyValue )
			int alt230=2;
			try { dbg.enterDecision(230, decisionCanBacktrack[230]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt230=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA230_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case IDENT:
				{
				int LA230_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA230_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA230_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA230_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case EMS:
				{
				int LA230_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case REM:
				{
				int LA230_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case EXS:
				{
				int LA230_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA230_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case TIME:
				{
				int LA230_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case FREQ:
				{
				int LA230_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA230_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA230_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case STRING:
				{
				int LA230_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case TILDE:
				{
				int LA230_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA230_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case GEN:
				{
				int LA230_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case URI:
				{
				int LA230_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case HASH:
				{
				int LA230_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (true) ) {
					alt230=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA230_22 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA230_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA230_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA230_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA230_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA230_27 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt230=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 230, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(230);}

			switch (alt230) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:5: {...}? cp_expression_list
					{
					dbg.location(870,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(870,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue4924);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:7: propertyValue
					{
					dbg.location(871,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue4932);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(872, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:874:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(874, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:875:2: ( expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:876:9: expression
			{
			dbg.location(876,9);
			pushFollow(FOLLOW_expression_in_propertyValue4954);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(877, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:880:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(880, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:882:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(883,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt231=0;
			try { dbg.enterSubRule(231);

			loop231:
			while (true) {
				int alt231=2;
				try { dbg.enterDecision(231, decisionCanBacktrack[231]);

				int LA231_0 = input.LA(1);
				if ( ((LA231_0 >= A && LA231_0 <= ANGLE)||(LA231_0 >= AT_SIGN && LA231_0 <= L)||(LA231_0 >= LBRACKET && LA231_0 <= R)||(LA231_0 >= RBRACKET && LA231_0 <= SASS_RETURN)||(LA231_0 >= SASS_WARN && LA231_0 <= SASS_WHILE)||(LA231_0 >= STRING && LA231_0 <= Z)) ) {
					alt231=1;
				}

				} finally {dbg.exitDecision(231);}

				switch (alt231) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(883,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_RETURN)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt231 >= 1 ) break loop231;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(231, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt231++;
			}
			} finally {dbg.exitSubRule(231);}
			dbg.location(883,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(884, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:888:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(888, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:894:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(894, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(896, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(901, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(903, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:908:13: SEMI
			{
			dbg.location(908,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI5124); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(909, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:912:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(912, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:6: ()
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(917, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(919, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:7: IMPORTANT_SYM
			{
			dbg.location(920,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio5169); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(921, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(923, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(924,7);
			pushFollow(FOLLOW_term_in_expression5186);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(924,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(235);

			loop235:
			while (true) {
				int alt235=2;
				try { dbg.enterDecision(235, decisionCanBacktrack[235]);

				try {
					isCyclicDecision = true;
					alt235 = dfa235.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(235);}

				switch (alt235) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(924,66);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt234=3;
					try { dbg.enterSubRule(234);
					try { dbg.enterDecision(234, decisionCanBacktrack[234]);

					try {
						isCyclicDecision = true;
						alt234 = dfa234.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(234);}

					switch (alt234) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:68: ws
							{
							dbg.location(924,68);
							pushFollow(FOLLOW_ws_in_expression5218);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(924,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:74: ( ws )? operator ( ws )?
							{
							dbg.location(924,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:74: ( ws )?
							int alt232=2;
							try { dbg.enterSubRule(232);
							try { dbg.enterDecision(232, decisionCanBacktrack[232]);

							int LA232_0 = input.LA(1);
							if ( (LA232_0==COMMENT||LA232_0==NL||LA232_0==WS) ) {
								alt232=1;
							}
							} finally {dbg.exitDecision(232);}

							switch (alt232) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:74: ws
									{
									dbg.location(924,74);
									pushFollow(FOLLOW_ws_in_expression5223);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(232);}
							dbg.location(924,78);
							pushFollow(FOLLOW_operator_in_expression5226);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(924,87);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:87: ( ws )?
							int alt233=2;
							try { dbg.enterSubRule(233);
							try { dbg.enterDecision(233, decisionCanBacktrack[233]);

							int LA233_0 = input.LA(1);
							if ( (LA233_0==COMMENT||LA233_0==NL||LA233_0==WS) ) {
								alt233=1;
							}
							} finally {dbg.exitDecision(233);}

							switch (alt233) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:87: ws
									{
									dbg.location(924,87);
									pushFollow(FOLLOW_ws_in_expression5228);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(233);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(234);}
					dbg.location(924,109);
					pushFollow(FOLLOW_term_in_expression5237);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop235;
				}
			}
			} finally {dbg.exitSubRule(235);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(925, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:927:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(927, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:928:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(929,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:5: ( unaryOperator ( ws )? )?
			int alt237=2;
			try { dbg.enterSubRule(237);
			try { dbg.enterDecision(237, decisionCanBacktrack[237]);

			int LA237_0 = input.LA(1);
			if ( (LA237_0==MINUS||LA237_0==PLUS) ) {
				alt237=1;
			}
			} finally {dbg.exitDecision(237);}

			switch (alt237) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:7: unaryOperator ( ws )?
					{
					dbg.location(929,7);
					pushFollow(FOLLOW_unaryOperator_in_term5262);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(929,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:21: ( ws )?
					int alt236=2;
					try { dbg.enterSubRule(236);
					try { dbg.enterDecision(236, decisionCanBacktrack[236]);

					int LA236_0 = input.LA(1);
					if ( (LA236_0==COMMENT||LA236_0==NL||LA236_0==WS) ) {
						alt236=1;
					}
					} finally {dbg.exitDecision(236);}

					switch (alt236) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:21: ws
							{
							dbg.location(929,21);
							pushFollow(FOLLOW_ws_in_term5264);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(236);}

					}
					break;

			}
			} finally {dbg.exitSubRule(237);}
			dbg.location(930,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:5: ( ( functionName ( ws )? LPAREN )=> function | IDENT | NUMBER | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt238=24;
			try { dbg.enterSubRule(238);
			try { dbg.enterDecision(238, decisionCanBacktrack[238]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA238_1 = input.LA(2);
				if ( (synpred31_Css3()) ) {
					alt238=1;
				}
				else if ( (true) ) {
					alt238=2;
				}

				}
				break;
			case NUMBER:
				{
				alt238=3;
				}
				break;
			case PERCENTAGE:
				{
				alt238=4;
				}
				break;
			case LENGTH:
				{
				alt238=5;
				}
				break;
			case EMS:
				{
				alt238=6;
				}
				break;
			case REM:
				{
				alt238=7;
				}
				break;
			case EXS:
				{
				alt238=8;
				}
				break;
			case ANGLE:
				{
				alt238=9;
				}
				break;
			case TIME:
				{
				alt238=10;
				}
				break;
			case FREQ:
				{
				alt238=11;
				}
				break;
			case RESOLUTION:
				{
				alt238=12;
				}
				break;
			case DIMENSION:
				{
				alt238=13;
				}
				break;
			case STRING:
				{
				alt238=14;
				}
				break;
			case TILDE:
				{
				alt238=15;
				}
				break;
			case LESS_JS_STRING:
				{
				alt238=16;
				}
				break;
			case GEN:
				{
				alt238=17;
				}
				break;
			case URI:
				{
				alt238=18;
				}
				break;
			case HASH:
				{
				alt238=19;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt238=20;
				}
				break;
			case LESS_AND:
				{
				alt238=21;
				}
				break;
			case HASH_SYMBOL:
				{
				alt238=22;
				}
				break;
			case AT_SIGN:
				{
				alt238=23;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt238=24;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 238, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(238);}

			switch (alt238) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(931,36);
					pushFollow(FOLLOW_function_in_term5293);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:11: IDENT
					{
					dbg.location(932,11);
					match(input,IDENT,FOLLOW_IDENT_in_term5306); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:11: NUMBER
					{
					dbg.location(933,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term5318); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:934:11: PERCENTAGE
					{
					dbg.location(934,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term5330); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:935:11: LENGTH
					{
					dbg.location(935,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term5342); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:936:11: EMS
					{
					dbg.location(936,11);
					match(input,EMS,FOLLOW_EMS_in_term5354); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:937:11: REM
					{
					dbg.location(937,11);
					match(input,REM,FOLLOW_REM_in_term5366); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:938:11: EXS
					{
					dbg.location(938,11);
					match(input,EXS,FOLLOW_EXS_in_term5378); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:939:11: ANGLE
					{
					dbg.location(939,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term5390); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:940:11: TIME
					{
					dbg.location(940,11);
					match(input,TIME,FOLLOW_TIME_in_term5402); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:11: FREQ
					{
					dbg.location(941,11);
					match(input,FREQ,FOLLOW_FREQ_in_term5414); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:11: RESOLUTION
					{
					dbg.location(942,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term5426); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:11: DIMENSION
					{
					dbg.location(943,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term5438); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:944:11: STRING
					{
					dbg.location(944,11);
					match(input,STRING,FOLLOW_STRING_in_term5455); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(945,11);
					match(input,TILDE,FOLLOW_TILDE_in_term5467); if (state.failed) return;dbg.location(945,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:946:11: LESS_JS_STRING
					{
					dbg.location(946,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term5490); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:11: GEN
					{
					dbg.location(947,11);
					match(input,GEN,FOLLOW_GEN_in_term5505); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:948:11: URI
					{
					dbg.location(948,11);
					match(input,URI,FOLLOW_URI_in_term5517); if (state.failed) return;
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:949:11: hexColor
					{
					dbg.location(949,11);
					pushFollow(FOLLOW_hexColor_in_term5529);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:11: {...}? cp_variable
					{
					dbg.location(950,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(950,40);
					pushFollow(FOLLOW_cp_variable_in_term5543);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:11: {...}? LESS_AND
					{
					dbg.location(951,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(951,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term5557); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:952:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(952,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(952,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term5571);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:953:11: {...}? less_selector_interpolation
					{
					dbg.location(953,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(953,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term5585);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:954:11: {...}? cp_term_symbol
					{
					dbg.location(954,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(954,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term5599);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(238);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(956, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(961, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:7: PERCENTAGE_SYMBOL
			{
			dbg.location(962,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5626); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(963, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(965, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(966,5);
			pushFollow(FOLLOW_functionName_in_function5642);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(966,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:18: ( ws )?
			int alt239=2;
			try { dbg.enterSubRule(239);
			try { dbg.enterDecision(239, decisionCanBacktrack[239]);

			int LA239_0 = input.LA(1);
			if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
				alt239=1;
			}
			} finally {dbg.exitDecision(239);}

			switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:18: ws
					{
					dbg.location(966,18);
					pushFollow(FOLLOW_ws_in_function5644);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(239);}
			dbg.location(967,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function5649); if (state.failed) return;dbg.location(967,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:967:10: ( ws )?
			int alt240=2;
			try { dbg.enterSubRule(240);
			try { dbg.enterDecision(240, decisionCanBacktrack[240]);

			int LA240_0 = input.LA(1);
			if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
				alt240=1;
			}
			} finally {dbg.exitDecision(240);}

			switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:967:10: ws
					{
					dbg.location(967,10);
					pushFollow(FOLLOW_ws_in_function5651);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(240);}
			dbg.location(968,3);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:3: ( fnAttributes |)
			int alt241=2;
			try { dbg.enterSubRule(241);
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			int LA241_0 = input.LA(1);
			if ( ((LA241_0 >= ANGLE && LA241_0 <= AT_SIGN)||(LA241_0 >= BOTTOMCENTER_SYM && LA241_0 <= BOTTOMRIGHT_SYM)||LA241_0==CHARSET_SYM||LA241_0==COUNTER_STYLE_SYM||LA241_0==DIMENSION||LA241_0==EMS||LA241_0==EXS||(LA241_0 >= FONT_FACE_SYM && LA241_0 <= FREQ)||LA241_0==GEN||(LA241_0 >= HASH && LA241_0 <= HASH_SYMBOL)||(LA241_0 >= IDENT && LA241_0 <= IMPORT_SYM)||LA241_0==LBRACE||(LA241_0 >= LEFTBOTTOM_SYM && LA241_0 <= LENGTH)||(LA241_0 >= LESS_AND && LA241_0 <= LESS_JS_STRING)||LA241_0==LPAREN||(LA241_0 >= MEDIA_SYM && LA241_0 <= MOZ_DOCUMENT_SYM)||LA241_0==NAMESPACE_SYM||(LA241_0 >= NOT && LA241_0 <= NUMBER)||(LA241_0 >= PAGE_SYM && LA241_0 <= PERCENTAGE_SYMBOL)||LA241_0==PLUS||(LA241_0 >= REM && LA241_0 <= RIGHTTOP_SYM)||(LA241_0 >= SASS_AT_ROOT && LA241_0 <= SASS_DEBUG)||(LA241_0 >= SASS_EACH && LA241_0 <= SASS_ELSE)||LA241_0==SASS_EXTEND||(LA241_0 >= SASS_FOR && LA241_0 <= SASS_FUNCTION)||(LA241_0 >= SASS_IF && LA241_0 <= SASS_MIXIN)||(LA241_0 >= SASS_RETURN && LA241_0 <= SASS_WHILE)||LA241_0==STRING||(LA241_0 >= TILDE && LA241_0 <= TOPRIGHT_SYM)||LA241_0==URI||LA241_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt241=1;
			}
			else if ( (LA241_0==RPAREN) ) {
				alt241=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:21: fnAttributes
					{
					dbg.location(969,21);
					pushFollow(FOLLOW_fnAttributes_in_function5678);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:971:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(972,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function5709); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(973, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:979:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(979, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(984,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:9: ( IDENT COLON )?
			int alt242=2;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			int LA242_0 = input.LA(1);
			if ( (LA242_0==IDENT) ) {
				int LA242_1 = input.LA(2);
				if ( (LA242_1==COLON) ) {
					alt242=1;
				}
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:10: IDENT COLON
					{
					dbg.location(984,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5761); if (state.failed) return;dbg.location(984,16);
					match(input,COLON,FOLLOW_COLON_in_functionName5763); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}
			dbg.location(984,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName5767); if (state.failed) return;dbg.location(984,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:30: ( DOT IDENT )*
			try { dbg.enterSubRule(243);

			loop243:
			while (true) {
				int alt243=2;
				try { dbg.enterDecision(243, decisionCanBacktrack[243]);

				int LA243_0 = input.LA(1);
				if ( (LA243_0==DOT) ) {
					alt243=1;
				}

				} finally {dbg.exitDecision(243);}

				switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:31: DOT IDENT
					{
					dbg.location(984,31);
					match(input,DOT,FOLLOW_DOT_in_functionName5770); if (state.failed) return;dbg.location(984,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName5772); if (state.failed) return;
					}
					break;

				default :
					break loop243;
				}
			}
			} finally {dbg.exitSubRule(243);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(985, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(987, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(989,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes5796);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(989,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(247);

			loop247:
			while (true) {
				int alt247=2;
				try { dbg.enterDecision(247, decisionCanBacktrack[247]);

				try {
					isCyclicDecision = true;
					alt247 = dfa247.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(247);}

				switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(989,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:18: ( ws )?
					int alt244=2;
					try { dbg.enterSubRule(244);
					try { dbg.enterDecision(244, decisionCanBacktrack[244]);

					int LA244_0 = input.LA(1);
					if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
						alt244=1;
					}
					} finally {dbg.exitDecision(244);}

					switch (alt244) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:18: ws
							{
							dbg.location(989,18);
							pushFollow(FOLLOW_ws_in_fnAttributes5799);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(244);}
					dbg.location(989,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:22: ( COMMA |{...}? SEMI )
					int alt245=2;
					try { dbg.enterSubRule(245);
					try { dbg.enterDecision(245, decisionCanBacktrack[245]);

					int LA245_0 = input.LA(1);
					if ( (LA245_0==COMMA) ) {
						alt245=1;
					}
					else if ( (LA245_0==SEMI) ) {
						alt245=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 245, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(245);}

					switch (alt245) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:23: COMMA
							{
							dbg.location(989,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes5803); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:31: {...}? SEMI
							{
							dbg.location(989,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(989,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes5809); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(245);}
					dbg.location(989,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:55: ( ws )?
					int alt246=2;
					try { dbg.enterSubRule(246);
					try { dbg.enterDecision(246, decisionCanBacktrack[246]);

					int LA246_0 = input.LA(1);
					if ( (LA246_0==COMMENT||LA246_0==NL||LA246_0==WS) ) {
						alt246=1;
					}
					} finally {dbg.exitDecision(246);}

					switch (alt246) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:55: ws
							{
							dbg.location(989,55);
							pushFollow(FOLLOW_ws_in_fnAttributes5812);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(246);}
					dbg.location(989,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes5815);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop247;
				}
			}
			} finally {dbg.exitSubRule(247);}
			dbg.location(989,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:73: ( ws )?
			int alt248=2;
			try { dbg.enterSubRule(248);
			try { dbg.enterDecision(248, decisionCanBacktrack[248]);

			int LA248_0 = input.LA(1);
			if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
				alt248=1;
			}
			} finally {dbg.exitDecision(248);}

			switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:73: ws
					{
					dbg.location(989,73);
					pushFollow(FOLLOW_ws_in_fnAttributes5819);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(248);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(990, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(992, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt251=3;
			try { dbg.enterDecision(251, decisionCanBacktrack[251]);

			int LA251_0 = input.LA(1);
			if ( (LA251_0==IDENT) ) {
				int LA251_1 = input.LA(2);
				if ( (synpred32_Css3()) ) {
					alt251=1;
				}
				else if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==AT_IDENT||(LA251_0 >= BOTTOMCENTER_SYM && LA251_0 <= BOTTOMRIGHT_SYM)||LA251_0==CHARSET_SYM||LA251_0==COUNTER_STYLE_SYM||LA251_0==FONT_FACE_SYM||LA251_0==IMPORT_SYM||(LA251_0 >= LEFTBOTTOM_SYM && LA251_0 <= LEFTTOP_SYM)||LA251_0==MEDIA_SYM||LA251_0==MOZ_DOCUMENT_SYM||LA251_0==NAMESPACE_SYM||LA251_0==PAGE_SYM||(LA251_0 >= RIGHTBOTTOM_SYM && LA251_0 <= RIGHTTOP_SYM)||(LA251_0 >= SASS_AT_ROOT && LA251_0 <= SASS_DEBUG)||(LA251_0 >= SASS_EACH && LA251_0 <= SASS_ELSE)||LA251_0==SASS_EXTEND||(LA251_0 >= SASS_FOR && LA251_0 <= SASS_FUNCTION)||(LA251_0 >= SASS_IF && LA251_0 <= SASS_MIXIN)||LA251_0==SASS_RETURN||(LA251_0 >= SASS_WARN && LA251_0 <= SASS_WHILE)||(LA251_0 >= TOPCENTER_SYM && LA251_0 <= TOPRIGHT_SYM)||LA251_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA251_2 = input.LA(2);
				if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt251=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred33_Css3())) ) {
					alt251=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==SASS_VAR) ) {
				int LA251_3 = input.LA(2);
				if ( (((synpred32_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt251=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred33_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt251=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==LBRACE) && (synpred33_Css3())) {
				alt251=2;
			}
			else if ( (LA251_0==NOT) && (synpred33_Css3())) {
				alt251=2;
			}
			else if ( (LA251_0==MINUS||LA251_0==PLUS) ) {
				int LA251_6 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==NUMBER) ) {
				int LA251_7 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==PERCENTAGE) ) {
				int LA251_8 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==LENGTH) ) {
				int LA251_9 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==EMS) ) {
				int LA251_10 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==REM) ) {
				int LA251_11 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==EXS) ) {
				int LA251_12 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==ANGLE) ) {
				int LA251_13 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==TIME) ) {
				int LA251_14 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==FREQ) ) {
				int LA251_15 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==RESOLUTION) ) {
				int LA251_16 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==DIMENSION) ) {
				int LA251_17 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==STRING) ) {
				int LA251_18 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==TILDE) ) {
				int LA251_19 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==LESS_JS_STRING) ) {
				int LA251_20 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==GEN) ) {
				int LA251_21 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==URI) ) {
				int LA251_22 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==HASH) ) {
				int LA251_23 = input.LA(2);
				if ( (synpred33_Css3()) ) {
					alt251=2;
				}
				else if ( (true) ) {
					alt251=3;
				}

			}
			else if ( (LA251_0==LESS_AND) ) {
				int LA251_24 = input.LA(2);
				if ( ((synpred33_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt251=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==HASH_SYMBOL) ) {
				int LA251_25 = input.LA(2);
				if ( ((synpred33_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt251=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==AT_SIGN) ) {
				int LA251_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred33_Css3())) ) {
					alt251=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==PERCENTAGE_SYMBOL) ) {
				int LA251_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred33_Css3())) ) {
					alt251=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt251=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 251, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA251_0==IMPORTANT_SYM) && (synpred33_Css3())) {
				alt251=2;
			}
			else if ( (LA251_0==LPAREN) && (synpred33_Css3())) {
				alt251=2;
			}

			} finally {dbg.exitDecision(251);}

			switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(994,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute5856);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(994,62);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:62: ( ws )?
					int alt249=2;
					try { dbg.enterSubRule(249);
					try { dbg.enterDecision(249, decisionCanBacktrack[249]);

					int LA249_0 = input.LA(1);
					if ( (LA249_0==COMMENT||LA249_0==NL||LA249_0==WS) ) {
						alt249=1;
					}
					} finally {dbg.exitDecision(249);}

					switch (alt249) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:62: ws
							{
							dbg.location(994,62);
							pushFollow(FOLLOW_ws_in_fnAttribute5858);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(249);}
					dbg.location(994,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(994,79);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:79: ( ws )?
					int alt250=2;
					try { dbg.enterSubRule(250);
					try { dbg.enterDecision(250, decisionCanBacktrack[250]);

					int LA250_0 = input.LA(1);
					if ( (LA250_0==COMMENT||LA250_0==NL||LA250_0==WS) ) {
						alt250=1;
					}
					} finally {dbg.exitDecision(250);}

					switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:79: ws
							{
							dbg.location(994,79);
							pushFollow(FOLLOW_ws_in_fnAttribute5867);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(250);}
					dbg.location(994,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute5870);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:11: ( cp_expression )=> cp_expression
					{
					dbg.location(995,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute5887);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:996:11: expression
					{
					dbg.location(996,11);
					pushFollow(FOLLOW_expression_in_fnAttribute5899);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(997, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(999, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt253=2;
			try { dbg.enterDecision(253, decisionCanBacktrack[253]);

			int LA253_0 = input.LA(1);
			if ( (LA253_0==IDENT) ) {
				alt253=1;
			}
			else if ( (LA253_0==AT_IDENT||(LA253_0 >= BOTTOMCENTER_SYM && LA253_0 <= BOTTOMRIGHT_SYM)||LA253_0==CHARSET_SYM||LA253_0==COUNTER_STYLE_SYM||LA253_0==FONT_FACE_SYM||LA253_0==IMPORT_SYM||(LA253_0 >= LEFTBOTTOM_SYM && LA253_0 <= LEFTTOP_SYM)||LA253_0==MEDIA_SYM||LA253_0==MOZ_DOCUMENT_SYM||LA253_0==NAMESPACE_SYM||LA253_0==PAGE_SYM||(LA253_0 >= RIGHTBOTTOM_SYM && LA253_0 <= RIGHTTOP_SYM)||(LA253_0 >= SASS_AT_ROOT && LA253_0 <= SASS_DEBUG)||(LA253_0 >= SASS_EACH && LA253_0 <= SASS_ELSE)||LA253_0==SASS_EXTEND||(LA253_0 >= SASS_FOR && LA253_0 <= SASS_FUNCTION)||(LA253_0 >= SASS_IF && LA253_0 <= SASS_MIXIN)||(LA253_0 >= SASS_RETURN && LA253_0 <= SASS_WHILE)||(LA253_0 >= TOPCENTER_SYM && LA253_0 <= TOPRIGHT_SYM)||LA253_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt253=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 253, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(253);}

			switch (alt253) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1001:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1001,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5922); if (state.failed) return;dbg.location(1001,19);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1001:19: ( DOT IDENT )*
					try { dbg.enterSubRule(252);

					loop252:
					while (true) {
						int alt252=2;
						try { dbg.enterDecision(252, decisionCanBacktrack[252]);

						int LA252_0 = input.LA(1);
						if ( (LA252_0==DOT) ) {
							alt252=1;
						}

						} finally {dbg.exitDecision(252);}

						switch (alt252) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1001:20: DOT IDENT
							{
							dbg.location(1001,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName5925); if (state.failed) return;dbg.location(1001,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName5927); if (state.failed) return;
							}
							break;

						default :
							break loop252;
						}
					}
					} finally {dbg.exitSubRule(252);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1002:15: {...}? cp_variable
					{
					dbg.location(1002,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1002,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName5947);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1003, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1005, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt258=2;
			try { dbg.enterDecision(258, decisionCanBacktrack[258]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA258_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA258_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA258_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA258_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA258_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA258_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA258_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA258_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA258_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA258_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA258_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA258_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA258_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA258_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA258_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA258_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA258_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA258_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA258_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA258_20 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt258=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA258_21 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt258=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA258_22 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt258=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA258_23 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt258=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA258_24 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt258=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA258_25 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt258=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 258, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt258=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 258, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(258);}

			switch (alt258) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1007,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue5970);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1007,18);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(257);

					loop257:
					while (true) {
						int alt257=2;
						try { dbg.enterDecision(257, decisionCanBacktrack[257]);

						try {
							isCyclicDecision = true;
							alt257 = dfa257.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(257);}

						switch (alt257) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1007,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt256=3;
							try { dbg.enterSubRule(256);
							try { dbg.enterDecision(256, decisionCanBacktrack[256]);

							try {
								isCyclicDecision = true;
								alt256 = dfa256.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(256);}

							switch (alt256) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:73: ws
									{
									dbg.location(1007,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue6002);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1007,78);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1007,79);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:79: ( ws )?
									int alt254=2;
									try { dbg.enterSubRule(254);
									try { dbg.enterDecision(254, decisionCanBacktrack[254]);

									int LA254_0 = input.LA(1);
									if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
										alt254=1;
									}
									} finally {dbg.exitDecision(254);}

									switch (alt254) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:79: ws
											{
											dbg.location(1007,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6007);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(254);}
									dbg.location(1007,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue6010); if (state.failed) return;dbg.location(1007,91);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:91: ( ws )?
									int alt255=2;
									try { dbg.enterSubRule(255);
									try { dbg.enterDecision(255, decisionCanBacktrack[255]);

									int LA255_0 = input.LA(1);
									if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
										alt255=1;
									}
									} finally {dbg.exitDecision(255);}

									switch (alt255) {
										case 1 :
											dbg.enterAlt(1);

											// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:91: ws
											{
											dbg.location(1007,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue6012);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(255);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(256);}
							dbg.location(1007,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue6021);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop257;
						}
					}
					} finally {dbg.exitSubRule(257);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1008:15: {...}? cp_math_expression
					{
					dbg.location(1008,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1008,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue6042);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1009, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1011:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1011, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1012:5: ( HASH )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1012:7: HASH
			{
			dbg.location(1012,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor6056); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1013, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1015:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1015, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1016,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1016:7: ( WS | NL | COMMENT )+
			int cnt259=0;
			try { dbg.enterSubRule(259);

			loop259:
			while (true) {
				int alt259=2;
				try { dbg.enterDecision(259, decisionCanBacktrack[259]);

				int LA259_0 = input.LA(1);
				if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
					alt259=1;
				}

				} finally {dbg.exitDecision(259);}

				switch (alt259) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1016,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt259 >= 1 ) break loop259;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(259, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt259++;
			}
			} finally {dbg.exitSubRule(259);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1017, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1022:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1022, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt267=2;
			try { dbg.enterDecision(267, decisionCanBacktrack[267]);

			int LA267_0 = input.LA(1);
			if ( (LA267_0==AT_IDENT||(LA267_0 >= BOTTOMCENTER_SYM && LA267_0 <= BOTTOMRIGHT_SYM)||LA267_0==CHARSET_SYM||LA267_0==COUNTER_STYLE_SYM||LA267_0==FONT_FACE_SYM||LA267_0==IMPORT_SYM||(LA267_0 >= LEFTBOTTOM_SYM && LA267_0 <= LEFTTOP_SYM)||LA267_0==MEDIA_SYM||LA267_0==MOZ_DOCUMENT_SYM||LA267_0==NAMESPACE_SYM||LA267_0==PAGE_SYM||(LA267_0 >= RIGHTBOTTOM_SYM && LA267_0 <= RIGHTTOP_SYM)||(LA267_0 >= SASS_AT_ROOT && LA267_0 <= SASS_DEBUG)||(LA267_0 >= SASS_EACH && LA267_0 <= SASS_ELSE)||LA267_0==SASS_EXTEND||(LA267_0 >= SASS_FOR && LA267_0 <= SASS_FUNCTION)||(LA267_0 >= SASS_IF && LA267_0 <= SASS_MIXIN)||LA267_0==SASS_RETURN||(LA267_0 >= SASS_WARN && LA267_0 <= SASS_WHILE)||(LA267_0 >= TOPCENTER_SYM && LA267_0 <= TOPRIGHT_SYM)||LA267_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA267_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt267=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt267=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 267, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA267_0==SASS_VAR) ) {
				int LA267_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt267=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt267=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 267, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 267, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(267);}

			switch (alt267) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1024:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1024,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1024,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6116);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1024,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1024:39: ( ws )?
					int alt260=2;
					try { dbg.enterSubRule(260);
					try { dbg.enterDecision(260, decisionCanBacktrack[260]);

					int LA260_0 = input.LA(1);
					if ( (LA260_0==COMMENT||LA260_0==NL||LA260_0==WS) ) {
						alt260=1;
					}
					} finally {dbg.exitDecision(260);}

					switch (alt260) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1024:39: ws
							{
							dbg.location(1024,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6118);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(260);}
					dbg.location(1024,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6121); if (state.failed) return;dbg.location(1024,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1024:49: ( ws )?
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					int LA261_0 = input.LA(1);
					if ( (LA261_0==COMMENT||LA261_0==NL||LA261_0==WS) ) {
						alt261=1;
					}
					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1024:49: ws
							{
							dbg.location(1024,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6123);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(261);}
					dbg.location(1024,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6126);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1026,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1026,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration6148);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1026,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:39: ( ws )?
					int alt262=2;
					try { dbg.enterSubRule(262);
					try { dbg.enterDecision(262, decisionCanBacktrack[262]);

					int LA262_0 = input.LA(1);
					if ( (LA262_0==COMMENT||LA262_0==NL||LA262_0==WS) ) {
						alt262=1;
					}
					} finally {dbg.exitDecision(262);}

					switch (alt262) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:39: ws
							{
							dbg.location(1026,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6150);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(262);}
					dbg.location(1026,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration6153); if (state.failed) return;dbg.location(1026,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:49: ( ws )?
					int alt263=2;
					try { dbg.enterSubRule(263);
					try { dbg.enterDecision(263, decisionCanBacktrack[263]);

					int LA263_0 = input.LA(1);
					if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
						alt263=1;
					}
					} finally {dbg.exitDecision(263);}

					switch (alt263) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:49: ws
							{
							dbg.location(1026,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration6155);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(263);}
					dbg.location(1026,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration6158);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1026,72);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(266);

					loop266:
					while (true) {
						int alt266=3;
						try { dbg.enterDecision(266, decisionCanBacktrack[266]);

						try {
							isCyclicDecision = true;
							alt266 = dfa266.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(266);}

						switch (alt266) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1026,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1026,74);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:74: ( ws )?
							int alt264=2;
							try { dbg.enterSubRule(264);
							try { dbg.enterDecision(264, decisionCanBacktrack[264]);

							int LA264_0 = input.LA(1);
							if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
								alt264=1;
							}
							} finally {dbg.exitDecision(264);}

							switch (alt264) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:74: ws
									{
									dbg.location(1026,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6162);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(264);}
							dbg.location(1026,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6165); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1026,94);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1026,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:95: ( ws )?
							int alt265=2;
							try { dbg.enterSubRule(265);
							try { dbg.enterDecision(265, decisionCanBacktrack[265]);

							int LA265_0 = input.LA(1);
							if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
								alt265=1;
							}
							} finally {dbg.exitDecision(265);}

							switch (alt265) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1026:95: ws
									{
									dbg.location(1026,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration6171);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(265);}
							dbg.location(1026,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6174); if (state.failed) return;
							}

							}
							break;

						default :
							break loop266;
						}
					}
					} finally {dbg.exitSubRule(266);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1027, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1030:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1030, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1031:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR ) )
			int alt268=2;
			try { dbg.enterDecision(268, decisionCanBacktrack[268]);

			int LA268_0 = input.LA(1);
			if ( (LA268_0==AT_IDENT||(LA268_0 >= BOTTOMCENTER_SYM && LA268_0 <= BOTTOMRIGHT_SYM)||LA268_0==CHARSET_SYM||LA268_0==COUNTER_STYLE_SYM||LA268_0==FONT_FACE_SYM||LA268_0==IMPORT_SYM||(LA268_0 >= LEFTBOTTOM_SYM && LA268_0 <= LEFTTOP_SYM)||LA268_0==MEDIA_SYM||LA268_0==MOZ_DOCUMENT_SYM||LA268_0==NAMESPACE_SYM||LA268_0==PAGE_SYM||(LA268_0 >= RIGHTBOTTOM_SYM && LA268_0 <= RIGHTTOP_SYM)||(LA268_0 >= SASS_AT_ROOT && LA268_0 <= SASS_DEBUG)||(LA268_0 >= SASS_EACH && LA268_0 <= SASS_ELSE)||LA268_0==SASS_EXTEND||(LA268_0 >= SASS_FOR && LA268_0 <= SASS_FUNCTION)||(LA268_0 >= SASS_IF && LA268_0 <= SASS_MIXIN)||LA268_0==SASS_RETURN||(LA268_0 >= SASS_WARN && LA268_0 <= SASS_WHILE)||(LA268_0 >= TOPCENTER_SYM && LA268_0 <= TOPRIGHT_SYM)||LA268_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt268=1;
			}
			else if ( (LA268_0==SASS_VAR) ) {
				alt268=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 268, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(268);}

			switch (alt268) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1033:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1033,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1033,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:9: {...}? ( SASS_VAR )
					{
					dbg.location(1035,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1035,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:27: ( SASS_VAR )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:29: SASS_VAR
					{
					dbg.location(1035,29);
					match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable6398); if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1036, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1039:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1039, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1041,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list6428);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1042,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(271);

			loop271:
			while (true) {
				int alt271=2;
				try { dbg.enterDecision(271, decisionCanBacktrack[271]);

				try {
					isCyclicDecision = true;
					alt271 = dfa271.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(271);}

				switch (alt271) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1042,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:37: ( ws )?
					int alt269=2;
					try { dbg.enterSubRule(269);
					try { dbg.enterDecision(269, decisionCanBacktrack[269]);

					int LA269_0 = input.LA(1);
					if ( (LA269_0==COMMENT||LA269_0==NL||LA269_0==WS) ) {
						alt269=1;
					}
					} finally {dbg.exitDecision(269);}

					switch (alt269) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:37: ws
							{
							dbg.location(1042,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list6447);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(269);}
					dbg.location(1042,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list6450); if (state.failed) return;dbg.location(1042,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:47: ( ws )?
					int alt270=2;
					try { dbg.enterSubRule(270);
					try { dbg.enterDecision(270, decisionCanBacktrack[270]);

					int LA270_0 = input.LA(1);
					if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
						alt270=1;
					}
					} finally {dbg.exitDecision(270);}

					switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:47: ws
							{
							dbg.location(1042,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list6452);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(270);}
					dbg.location(1042,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list6455);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop271;
				}
			}
			} finally {dbg.exitSubRule(271);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1043, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1055, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1056:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt280=3;
			try { dbg.enterDecision(280, decisionCanBacktrack[280]);

			int LA280_0 = input.LA(1);
			if ( (LA280_0==LBRACE) ) {
				alt280=1;
			}
			else if ( (LA280_0==NOT) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==MINUS||LA280_0==PLUS) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==IDENT) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==NUMBER) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==PERCENTAGE) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==LENGTH) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==EMS) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==REM) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==EXS) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==ANGLE) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==TIME) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==FREQ) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==RESOLUTION) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==DIMENSION) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==STRING) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==TILDE) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==LESS_JS_STRING) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==GEN) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==URI) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==HASH) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==AT_IDENT||(LA280_0 >= BOTTOMCENTER_SYM && LA280_0 <= BOTTOMRIGHT_SYM)||LA280_0==CHARSET_SYM||LA280_0==COUNTER_STYLE_SYM||LA280_0==FONT_FACE_SYM||LA280_0==IMPORT_SYM||(LA280_0 >= LEFTBOTTOM_SYM && LA280_0 <= LEFTTOP_SYM)||LA280_0==MEDIA_SYM||LA280_0==MOZ_DOCUMENT_SYM||LA280_0==NAMESPACE_SYM||LA280_0==PAGE_SYM||(LA280_0 >= RIGHTBOTTOM_SYM && LA280_0 <= RIGHTTOP_SYM)||(LA280_0 >= SASS_AT_ROOT && LA280_0 <= SASS_DEBUG)||(LA280_0 >= SASS_EACH && LA280_0 <= SASS_ELSE)||LA280_0==SASS_EXTEND||(LA280_0 >= SASS_FOR && LA280_0 <= SASS_FUNCTION)||(LA280_0 >= SASS_IF && LA280_0 <= SASS_MIXIN)||LA280_0==SASS_RETURN||(LA280_0 >= SASS_WARN && LA280_0 <= SASS_WHILE)||(LA280_0 >= TOPCENTER_SYM && LA280_0 <= TOPRIGHT_SYM)||LA280_0==WEBKIT_KEYFRAMES_SYM) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==SASS_VAR) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==LESS_AND) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==HASH_SYMBOL) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==AT_SIGN) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==PERCENTAGE_SYMBOL) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==IMPORTANT_SYM) && (synpred37_Css3())) {
				alt280=2;
			}
			else if ( (LA280_0==LPAREN) ) {
				int LA280_29 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt280=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt280=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 280, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 280, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(280);}

			switch (alt280) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1057,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1057,23);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1057,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression6491); if (state.failed) return;dbg.location(1057,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:31: ( ws )?
					int alt272=2;
					try { dbg.enterSubRule(272);
					try { dbg.enterDecision(272, decisionCanBacktrack[272]);

					int LA272_0 = input.LA(1);
					if ( (LA272_0==COMMENT||LA272_0==NL||LA272_0==WS) ) {
						alt272=1;
					}
					} finally {dbg.exitDecision(272);}

					switch (alt272) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:31: ws
							{
							dbg.location(1057,31);
							pushFollow(FOLLOW_ws_in_cp_expression6493);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(272);}
					dbg.location(1057,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6496);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1057,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:48: ( declarations )?
					int alt273=2;
					try { dbg.enterSubRule(273);
					try { dbg.enterDecision(273, decisionCanBacktrack[273]);

					int LA273_0 = input.LA(1);
					if ( ((LA273_0 >= AT_IDENT && LA273_0 <= AT_SIGN)||(LA273_0 >= BOTTOMCENTER_SYM && LA273_0 <= BOTTOMRIGHT_SYM)||(LA273_0 >= CHARSET_SYM && LA273_0 <= COLON)||LA273_0==COUNTER_STYLE_SYM||LA273_0==DCOLON||LA273_0==DOT||LA273_0==FONT_FACE_SYM||(LA273_0 >= GEN && LA273_0 <= GREATER)||(LA273_0 >= HASH && LA273_0 <= HASH_SYMBOL)||LA273_0==IDENT||LA273_0==IMPORT_SYM||(LA273_0 >= LBRACKET && LA273_0 <= LEFTTOP_SYM)||LA273_0==LESS_AND||(LA273_0 >= MEDIA_SYM && LA273_0 <= MOZ_DOCUMENT_SYM)||LA273_0==NAMESPACE_SYM||LA273_0==PAGE_SYM||(LA273_0 >= PIPE && LA273_0 <= PLUS)||(LA273_0 >= RIGHTBOTTOM_SYM && LA273_0 <= RIGHTTOP_SYM)||(LA273_0 >= SASS_AT_ROOT && LA273_0 <= SASS_DEBUG)||(LA273_0 >= SASS_EACH && LA273_0 <= SASS_ELSE)||(LA273_0 >= SASS_ERROR && LA273_0 <= SASS_FUNCTION)||(LA273_0 >= SASS_IF && LA273_0 <= SASS_MIXIN)||(LA273_0 >= SASS_RETURN && LA273_0 <= SEMI)||LA273_0==STAR||LA273_0==TILDE||(LA273_0 >= TOPCENTER_SYM && LA273_0 <= TOPRIGHT_SYM)||LA273_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt273=1;
					}
					} finally {dbg.exitDecision(273);}

					switch (alt273) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:48: declarations
							{
							dbg.location(1057,48);
							pushFollow(FOLLOW_declarations_in_cp_expression6498);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(273);}
					dbg.location(1057,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression6501); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1058,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1058,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6517);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1059,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(277);

					loop277:
					while (true) {
						int alt277=3;
						try { dbg.enterDecision(277, decisionCanBacktrack[277]);

						try {
							isCyclicDecision = true;
							alt277 = dfa277.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(277);}

						switch (alt277) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1060,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1060,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:40: ( ws )?
							int alt274=2;
							try { dbg.enterSubRule(274);
							try { dbg.enterDecision(274, decisionCanBacktrack[274]);

							int LA274_0 = input.LA(1);
							if ( (LA274_0==COMMENT||LA274_0==NL||LA274_0==WS) ) {
								alt274=1;
							}
							} finally {dbg.exitDecision(274);}

							switch (alt274) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:40: ws
									{
									dbg.location(1060,40);
									pushFollow(FOLLOW_ws_in_cp_expression6541);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(274);}
							dbg.location(1060,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression6544);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1060,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:67: ( ws )?
							int alt275=2;
							try { dbg.enterSubRule(275);
							try { dbg.enterDecision(275, decisionCanBacktrack[275]);

							int LA275_0 = input.LA(1);
							if ( (LA275_0==COMMENT||LA275_0==NL||LA275_0==WS) ) {
								alt275=1;
							}
							} finally {dbg.exitDecision(275);}

							switch (alt275) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:67: ws
									{
									dbg.location(1060,67);
									pushFollow(FOLLOW_ws_in_cp_expression6546);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(275);}

							}
							dbg.location(1060,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6550);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1061,37);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:37: ( ws )?
							int alt276=2;
							try { dbg.enterSubRule(276);
							try { dbg.enterDecision(276, decisionCanBacktrack[276]);

							int LA276_0 = input.LA(1);
							if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
								alt276=1;
							}
							} finally {dbg.exitDecision(276);}

							switch (alt276) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:37: ws
									{
									dbg.location(1061,37);
									pushFollow(FOLLOW_ws_in_cp_expression6569);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(276);}
							dbg.location(1061,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression6572);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop277;
						}
					}
					} finally {dbg.exitSubRule(277);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1063,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1063,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression6590); if (state.failed) return;dbg.location(1063,32);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:32: ( ws )?
					int alt278=2;
					try { dbg.enterSubRule(278);
					try { dbg.enterDecision(278, decisionCanBacktrack[278]);

					int LA278_0 = input.LA(1);
					if ( (LA278_0==COMMENT||LA278_0==NL||LA278_0==WS) ) {
						alt278=1;
					}
					} finally {dbg.exitDecision(278);}

					switch (alt278) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:32: ws
							{
							dbg.location(1063,32);
							pushFollow(FOLLOW_ws_in_cp_expression6592);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(278);}
					dbg.location(1063,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression6595);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1063,49);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:49: ( sass_map_pairs )?
					int alt279=2;
					try { dbg.enterSubRule(279);
					try { dbg.enterDecision(279, decisionCanBacktrack[279]);

					int LA279_0 = input.LA(1);
					if ( (LA279_0==AT_IDENT||(LA279_0 >= BOTTOMCENTER_SYM && LA279_0 <= BOTTOMRIGHT_SYM)||LA279_0==CHARSET_SYM||LA279_0==COMMA||LA279_0==COUNTER_STYLE_SYM||LA279_0==FONT_FACE_SYM||LA279_0==GEN||LA279_0==HASH_SYMBOL||LA279_0==IDENT||LA279_0==IMPORT_SYM||(LA279_0 >= LEFTBOTTOM_SYM && LA279_0 <= LEFTTOP_SYM)||(LA279_0 >= MEDIA_SYM && LA279_0 <= MOZ_DOCUMENT_SYM)||LA279_0==NAMESPACE_SYM||LA279_0==PAGE_SYM||(LA279_0 >= RIGHTBOTTOM_SYM && LA279_0 <= RIGHTTOP_SYM)||(LA279_0 >= SASS_AT_ROOT && LA279_0 <= SASS_DEBUG)||(LA279_0 >= SASS_EACH && LA279_0 <= SASS_ELSE)||LA279_0==SASS_EXTEND||(LA279_0 >= SASS_FOR && LA279_0 <= SASS_FUNCTION)||(LA279_0 >= SASS_IF && LA279_0 <= SASS_MIXIN)||(LA279_0 >= SASS_RETURN && LA279_0 <= SASS_WHILE)||LA279_0==STRING||(LA279_0 >= TOPCENTER_SYM && LA279_0 <= TOPRIGHT_SYM)||LA279_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt279=1;
					}
					} finally {dbg.exitDecision(279);}

					switch (alt279) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:49: sass_map_pairs
							{
							dbg.location(1063,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression6597);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(279);}
					dbg.location(1063,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression6600); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1064, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1066:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1066, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt281=8;
			try { dbg.enterDecision(281, decisionCanBacktrack[281]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA281_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt281=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt281=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 281, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt281=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt281=4;
				}
				break;
			case LESS:
				{
				alt281=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt281=6;
				}
				break;
			case GREATER:
				{
				alt281=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt281=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 281, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(281);}

			switch (alt281) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:5: key_or
					{
					dbg.location(1068,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator6621);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:14: key_and
					{
					dbg.location(1068,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator6625);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:25: CP_EQ
					{
					dbg.location(1068,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator6630); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:33: CP_NOT_EQ
					{
					dbg.location(1068,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator6634); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:45: LESS
					{
					dbg.location(1068,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator6638); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:52: LESS_OR_EQ
					{
					dbg.location(1068,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator6642); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:65: GREATER
					{
					dbg.location(1068,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator6646); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:75: GREATER_OR_EQ
					{
					dbg.location(1068,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6650); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1069, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1071:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1071, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1072:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1073,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:9: ( NOT ( ws )? )?
			int alt283=2;
			try { dbg.enterSubRule(283);
			try { dbg.enterDecision(283, decisionCanBacktrack[283]);

			int LA283_0 = input.LA(1);
			if ( (LA283_0==NOT) ) {
				alt283=1;
			}
			} finally {dbg.exitDecision(283);}

			switch (alt283) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:10: NOT ( ws )?
					{
					dbg.location(1073,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom6676); if (state.failed) return;dbg.location(1073,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:14: ( ws )?
					int alt282=2;
					try { dbg.enterSubRule(282);
					try { dbg.enterDecision(282, decisionCanBacktrack[282]);

					int LA282_0 = input.LA(1);
					if ( (LA282_0==COMMENT||LA282_0==NL||LA282_0==WS) ) {
						alt282=1;
					}
					} finally {dbg.exitDecision(282);}

					switch (alt282) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1073:14: ws
							{
							dbg.location(1073,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6678);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(282);}

					}
					break;

			}
			} finally {dbg.exitSubRule(283);}
			dbg.location(1074,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt287=2;
			try { dbg.enterSubRule(287);
			try { dbg.enterDecision(287, decisionCanBacktrack[287]);

			int LA287_0 = input.LA(1);
			if ( (LA287_0==MINUS||LA287_0==PLUS) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==IDENT) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==NUMBER) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==PERCENTAGE) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==LENGTH) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==EMS) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==REM) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==EXS) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==ANGLE) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==TIME) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==FREQ) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==RESOLUTION) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==DIMENSION) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==STRING) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==TILDE) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==LESS_JS_STRING) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==GEN) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==URI) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==HASH) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==AT_IDENT||(LA287_0 >= BOTTOMCENTER_SYM && LA287_0 <= BOTTOMRIGHT_SYM)||LA287_0==CHARSET_SYM||LA287_0==COUNTER_STYLE_SYM||LA287_0==FONT_FACE_SYM||LA287_0==IMPORT_SYM||(LA287_0 >= LEFTBOTTOM_SYM && LA287_0 <= LEFTTOP_SYM)||LA287_0==MEDIA_SYM||LA287_0==MOZ_DOCUMENT_SYM||LA287_0==NAMESPACE_SYM||LA287_0==PAGE_SYM||(LA287_0 >= RIGHTBOTTOM_SYM && LA287_0 <= RIGHTTOP_SYM)||(LA287_0 >= SASS_AT_ROOT && LA287_0 <= SASS_DEBUG)||(LA287_0 >= SASS_EACH && LA287_0 <= SASS_ELSE)||LA287_0==SASS_EXTEND||(LA287_0 >= SASS_FOR && LA287_0 <= SASS_FUNCTION)||(LA287_0 >= SASS_IF && LA287_0 <= SASS_MIXIN)||LA287_0==SASS_RETURN||(LA287_0 >= SASS_WARN && LA287_0 <= SASS_WHILE)||(LA287_0 >= TOPCENTER_SYM && LA287_0 <= TOPRIGHT_SYM)||LA287_0==WEBKIT_KEYFRAMES_SYM) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==SASS_VAR) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==LESS_AND) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==HASH_SYMBOL) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==AT_SIGN) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==PERCENTAGE_SYMBOL) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==IMPORTANT_SYM) && (synpred40_Css3())) {
				alt287=1;
			}
			else if ( (LA287_0==LPAREN) ) {
				int LA287_27 = input.LA(2);
				if ( (synpred40_Css3()) ) {
					alt287=1;
				}
				else if ( (true) ) {
					alt287=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 287, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(287);}

			switch (alt287) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1075,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom6709);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1076,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom6725); if (state.failed) return;dbg.location(1076,22);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:22: ( ws )?
					int alt284=2;
					try { dbg.enterSubRule(284);
					try { dbg.enterDecision(284, decisionCanBacktrack[284]);

					int LA284_0 = input.LA(1);
					if ( (LA284_0==COMMENT||LA284_0==NL||LA284_0==WS) ) {
						alt284=1;
					}
					} finally {dbg.exitDecision(284);}

					switch (alt284) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:22: ws
							{
							dbg.location(1076,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom6727);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(284);}
					dbg.location(1076,26);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:26: ( cp_expression_list ( ws )? )?
					int alt286=2;
					try { dbg.enterSubRule(286);
					try { dbg.enterDecision(286, decisionCanBacktrack[286]);

					int LA286_0 = input.LA(1);
					if ( ((LA286_0 >= ANGLE && LA286_0 <= AT_SIGN)||(LA286_0 >= BOTTOMCENTER_SYM && LA286_0 <= BOTTOMRIGHT_SYM)||LA286_0==CHARSET_SYM||LA286_0==COUNTER_STYLE_SYM||LA286_0==DIMENSION||LA286_0==EMS||LA286_0==EXS||(LA286_0 >= FONT_FACE_SYM && LA286_0 <= FREQ)||LA286_0==GEN||(LA286_0 >= HASH && LA286_0 <= HASH_SYMBOL)||(LA286_0 >= IDENT && LA286_0 <= IMPORT_SYM)||LA286_0==LBRACE||(LA286_0 >= LEFTBOTTOM_SYM && LA286_0 <= LENGTH)||(LA286_0 >= LESS_AND && LA286_0 <= LESS_JS_STRING)||LA286_0==LPAREN||(LA286_0 >= MEDIA_SYM && LA286_0 <= MOZ_DOCUMENT_SYM)||LA286_0==NAMESPACE_SYM||(LA286_0 >= NOT && LA286_0 <= NUMBER)||(LA286_0 >= PAGE_SYM && LA286_0 <= PERCENTAGE_SYMBOL)||LA286_0==PLUS||(LA286_0 >= REM && LA286_0 <= RIGHTTOP_SYM)||(LA286_0 >= SASS_AT_ROOT && LA286_0 <= SASS_DEBUG)||(LA286_0 >= SASS_EACH && LA286_0 <= SASS_ELSE)||LA286_0==SASS_EXTEND||(LA286_0 >= SASS_FOR && LA286_0 <= SASS_FUNCTION)||(LA286_0 >= SASS_IF && LA286_0 <= SASS_MIXIN)||(LA286_0 >= SASS_RETURN && LA286_0 <= SASS_WHILE)||LA286_0==STRING||(LA286_0 >= TILDE && LA286_0 <= TOPRIGHT_SYM)||LA286_0==URI||LA286_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt286=1;
					}
					} finally {dbg.exitDecision(286);}

					switch (alt286) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:27: cp_expression_list ( ws )?
							{
							dbg.location(1076,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom6731);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1076,46);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:46: ( ws )?
							int alt285=2;
							try { dbg.enterSubRule(285);
							try { dbg.enterDecision(285, decisionCanBacktrack[285]);

							int LA285_0 = input.LA(1);
							if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
								alt285=1;
							}
							} finally {dbg.exitDecision(285);}

							switch (alt285) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:46: ws
									{
									dbg.location(1076,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom6733);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(285);}

							}
							break;

					}
					} finally {dbg.exitSubRule(286);}
					dbg.location(1076,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom6738); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(287);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1078, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1081, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1083,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6770);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1084,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1084:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(288);

			loop288:
			while (true) {
				int alt288=2;
				try { dbg.enterDecision(288, decisionCanBacktrack[288]);

				int LA288_0 = input.LA(1);
				if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
					alt288=1;
				}

				} finally {dbg.exitDecision(288);}

				switch (alt288) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1084:6: ws cp_math_expression
					{
					dbg.location(1084,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions6777);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1084,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions6779);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop288;
				}
			}
			} finally {dbg.exitSubRule(288);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1085, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1099, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1100:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1100:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1100,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6813);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1101,10);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1101:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(291);

			loop291:
			while (true) {
				int alt291=2;
				try { dbg.enterDecision(291, decisionCanBacktrack[291]);

				try {
					isCyclicDecision = true;
					alt291 = dfa291.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(291);}

				switch (alt291) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1102,48);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:48: ( ws )?
					int alt289=2;
					try { dbg.enterSubRule(289);
					try { dbg.enterDecision(289, decisionCanBacktrack[289]);

					int LA289_0 = input.LA(1);
					if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
						alt289=1;
					}
					} finally {dbg.exitDecision(289);}

					switch (alt289) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:48: ws
							{
							dbg.location(1102,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression6855);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(289);}
					dbg.location(1102,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1102,78);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:78: ( ws )?
					int alt290=2;
					try { dbg.enterSubRule(290);
					try { dbg.enterDecision(290, decisionCanBacktrack[290]);

					int LA290_0 = input.LA(1);
					if ( (LA290_0==COMMENT||LA290_0==NL||LA290_0==WS) ) {
						alt290=1;
					}
					} finally {dbg.exitDecision(290);}

					switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:78: ws
							{
							dbg.location(1102,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression6868);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(290);}
					dbg.location(1102,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression6871);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop291;
				}
			}
			} finally {dbg.exitSubRule(291);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1104, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1106, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt296=3;
			try { dbg.enterDecision(296, decisionCanBacktrack[296]);

			try {
				isCyclicDecision = true;
				alt296 = dfa296.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(296);}

			switch (alt296) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:5: term
					{
					dbg.location(1108,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom6904);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:7: IMPORTANT_SYM
					{
					dbg.location(1109,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6912); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1110,7);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:7: ( unaryOperator ( ws )? )?
					int alt293=2;
					try { dbg.enterSubRule(293);
					try { dbg.enterDecision(293, decisionCanBacktrack[293]);

					int LA293_0 = input.LA(1);
					if ( (LA293_0==MINUS||LA293_0==PLUS) ) {
						alt293=1;
					}
					} finally {dbg.exitDecision(293);}

					switch (alt293) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:9: unaryOperator ( ws )?
							{
							dbg.location(1110,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom6923);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1110,23);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:23: ( ws )?
							int alt292=2;
							try { dbg.enterSubRule(292);
							try { dbg.enterDecision(292, decisionCanBacktrack[292]);

							int LA292_0 = input.LA(1);
							if ( (LA292_0==COMMENT||LA292_0==NL||LA292_0==WS) ) {
								alt292=1;
							}
							} finally {dbg.exitDecision(292);}

							switch (alt292) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:23: ws
									{
									dbg.location(1110,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom6925);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(292);}

							}
							break;

					}
					} finally {dbg.exitSubRule(293);}
					dbg.location(1110,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom6931); if (state.failed) return;dbg.location(1110,37);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:37: ( ws )?
					int alt294=2;
					try { dbg.enterSubRule(294);
					try { dbg.enterDecision(294, decisionCanBacktrack[294]);

					int LA294_0 = input.LA(1);
					if ( (LA294_0==COMMENT||LA294_0==NL||LA294_0==WS) ) {
						alt294=1;
					}
					} finally {dbg.exitDecision(294);}

					switch (alt294) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:37: ws
							{
							dbg.location(1110,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6933);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(294);}
					dbg.location(1110,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom6936);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1110,60);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:60: ( ws )?
					int alt295=2;
					try { dbg.enterSubRule(295);
					try { dbg.enterDecision(295, decisionCanBacktrack[295]);

					int LA295_0 = input.LA(1);
					if ( (LA295_0==COMMENT||LA295_0==NL||LA295_0==WS) ) {
						alt295=1;
					}
					} finally {dbg.exitDecision(295);}

					switch (alt295) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:60: ws
							{
							dbg.location(1110,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom6938);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(295);}
					dbg.location(1110,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom6941); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1111, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1119, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1121,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt308=2;
			try { dbg.enterSubRule(308);
			try { dbg.enterDecision(308, decisionCanBacktrack[308]);

			int LA308_0 = input.LA(1);
			if ( (LA308_0==DOT||LA308_0==HASH||LA308_0==LESS_AND) ) {
				alt308=1;
			}
			else if ( (LA308_0==SASS_MIXIN) ) {
				alt308=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 308, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(308);}

			switch (alt308) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1122,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1122,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt301=2;
					try { dbg.enterSubRule(301);
					try { dbg.enterDecision(301, decisionCanBacktrack[301]);

					int LA301_0 = input.LA(1);
					if ( (LA301_0==LESS_AND) ) {
						alt301=1;
					}
					else if ( (LA301_0==DOT||LA301_0==HASH) ) {
						alt301=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 301, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(301);}

					switch (alt301) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:28: LESS_AND
							{
							dbg.location(1122,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration6981); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1122,39);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1122,40);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt297=2;
							try { dbg.enterSubRule(297);
							try { dbg.enterDecision(297, decisionCanBacktrack[297]);

							int LA297_0 = input.LA(1);
							if ( (LA297_0==DOT) ) {
								alt297=1;
							}
							else if ( (LA297_0==HASH) ) {
								alt297=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 297, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(297);}

							switch (alt297) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:41: ( DOT cp_mixin_name )
									{
									dbg.location(1122,41);
									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:42: DOT cp_mixin_name
									{
									dbg.location(1122,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration6988); if (state.failed) return;dbg.location(1122,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration6990);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:63: HASH
									{
									dbg.location(1122,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration6995); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(297);}
							dbg.location(1122,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:69: ( ws )?
							int alt298=2;
							try { dbg.enterSubRule(298);
							try { dbg.enterDecision(298, decisionCanBacktrack[298]);

							int LA298_0 = input.LA(1);
							if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
								alt298=1;
							}
							} finally {dbg.exitDecision(298);}

							switch (alt298) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:69: ws
									{
									dbg.location(1122,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration6998);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(298);}
							dbg.location(1122,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7001); if (state.failed) return;dbg.location(1122,80);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:80: ( ws )?
							int alt299=2;
							try { dbg.enterSubRule(299);
							try { dbg.enterDecision(299, decisionCanBacktrack[299]);

							int LA299_0 = input.LA(1);
							if ( (LA299_0==COMMENT||LA299_0==NL||LA299_0==WS) ) {
								alt299=1;
							}
							} finally {dbg.exitDecision(299);}

							switch (alt299) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:80: ws
									{
									dbg.location(1122,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7003);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(299);}
							dbg.location(1122,84);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:84: ( cp_args_list )?
							int alt300=2;
							try { dbg.enterSubRule(300);
							try { dbg.enterDecision(300, decisionCanBacktrack[300]);

							int LA300_0 = input.LA(1);
							if ( (LA300_0==AT_IDENT||(LA300_0 >= BOTTOMCENTER_SYM && LA300_0 <= BOTTOMRIGHT_SYM)||LA300_0==CHARSET_SYM||(LA300_0 >= COUNTER_STYLE_SYM && LA300_0 <= CP_DOTS)||LA300_0==FONT_FACE_SYM||LA300_0==IDENT||LA300_0==IMPORT_SYM||(LA300_0 >= LEFTBOTTOM_SYM && LA300_0 <= LEFTTOP_SYM)||LA300_0==LESS_REST||LA300_0==MEDIA_SYM||LA300_0==MOZ_DOCUMENT_SYM||LA300_0==NAMESPACE_SYM||LA300_0==PAGE_SYM||(LA300_0 >= RIGHTBOTTOM_SYM && LA300_0 <= RIGHTTOP_SYM)||(LA300_0 >= SASS_AT_ROOT && LA300_0 <= SASS_DEBUG)||(LA300_0 >= SASS_EACH && LA300_0 <= SASS_ELSE)||LA300_0==SASS_EXTEND||(LA300_0 >= SASS_FOR && LA300_0 <= SASS_FUNCTION)||(LA300_0 >= SASS_IF && LA300_0 <= SASS_MIXIN)||(LA300_0 >= SASS_RETURN && LA300_0 <= SASS_WHILE)||(LA300_0 >= TOPCENTER_SYM && LA300_0 <= TOPRIGHT_SYM)||LA300_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt300=1;
							}
							} finally {dbg.exitDecision(300);}

							switch (alt300) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:84: cp_args_list
									{
									dbg.location(1122,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7006);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(300);}
							dbg.location(1122,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7009); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(301);}
					dbg.location(1122,107);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:107: ( ( ws )? less_mixin_guarded )?
					int alt303=2;
					try { dbg.enterSubRule(303);
					try { dbg.enterDecision(303, decisionCanBacktrack[303]);

					try {
						isCyclicDecision = true;
						alt303 = dfa303.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(303);}

					switch (alt303) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1122,108);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:108: ( ws )?
							int alt302=2;
							try { dbg.enterSubRule(302);
							try { dbg.enterDecision(302, decisionCanBacktrack[302]);

							int LA302_0 = input.LA(1);
							if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
								alt302=1;
							}
							} finally {dbg.exitDecision(302);}

							switch (alt302) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:108: ws
									{
									dbg.location(1122,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7014);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(302);}
							dbg.location(1122,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7017);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(303);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1124,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1124,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7041); if (state.failed) return;dbg.location(1124,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7043);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1124,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration7045);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1124,55);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt307=2;
					try { dbg.enterSubRule(307);
					try { dbg.enterDecision(307, decisionCanBacktrack[307]);

					try {
						isCyclicDecision = true;
						alt307 = dfa307.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(307);}

					switch (alt307) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1124,56);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:56: ( ws )?
							int alt304=2;
							try { dbg.enterSubRule(304);
							try { dbg.enterDecision(304, decisionCanBacktrack[304]);

							int LA304_0 = input.LA(1);
							if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
								alt304=1;
							}
							} finally {dbg.exitDecision(304);}

							switch (alt304) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:56: ws
									{
									dbg.location(1124,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7048);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(304);}
							dbg.location(1124,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration7051); if (state.failed) return;dbg.location(1124,67);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:67: ( ws )?
							int alt305=2;
							try { dbg.enterSubRule(305);
							try { dbg.enterDecision(305, decisionCanBacktrack[305]);

							int LA305_0 = input.LA(1);
							if ( (LA305_0==COMMENT||LA305_0==NL||LA305_0==WS) ) {
								alt305=1;
							}
							} finally {dbg.exitDecision(305);}

							switch (alt305) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:67: ws
									{
									dbg.location(1124,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration7053);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(305);}
							dbg.location(1124,71);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:71: ( cp_args_list )?
							int alt306=2;
							try { dbg.enterSubRule(306);
							try { dbg.enterDecision(306, decisionCanBacktrack[306]);

							int LA306_0 = input.LA(1);
							if ( (LA306_0==AT_IDENT||(LA306_0 >= BOTTOMCENTER_SYM && LA306_0 <= BOTTOMRIGHT_SYM)||LA306_0==CHARSET_SYM||(LA306_0 >= COUNTER_STYLE_SYM && LA306_0 <= CP_DOTS)||LA306_0==FONT_FACE_SYM||LA306_0==IDENT||LA306_0==IMPORT_SYM||(LA306_0 >= LEFTBOTTOM_SYM && LA306_0 <= LEFTTOP_SYM)||LA306_0==LESS_REST||LA306_0==MEDIA_SYM||LA306_0==MOZ_DOCUMENT_SYM||LA306_0==NAMESPACE_SYM||LA306_0==PAGE_SYM||(LA306_0 >= RIGHTBOTTOM_SYM && LA306_0 <= RIGHTTOP_SYM)||(LA306_0 >= SASS_AT_ROOT && LA306_0 <= SASS_DEBUG)||(LA306_0 >= SASS_EACH && LA306_0 <= SASS_ELSE)||LA306_0==SASS_EXTEND||(LA306_0 >= SASS_FOR && LA306_0 <= SASS_FUNCTION)||(LA306_0 >= SASS_IF && LA306_0 <= SASS_MIXIN)||(LA306_0 >= SASS_RETURN && LA306_0 <= SASS_WHILE)||(LA306_0 >= TOPCENTER_SYM && LA306_0 <= TOPRIGHT_SYM)||LA306_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt306=1;
							}
							} finally {dbg.exitDecision(306);}

							switch (alt306) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:71: cp_args_list
									{
									dbg.location(1124,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration7056);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(306);}
							dbg.location(1124,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration7059); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(307);}

					}
					break;

			}
			} finally {dbg.exitSubRule(308);}
			dbg.location(1126,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1126:5: ( ws )?
			int alt309=2;
			try { dbg.enterSubRule(309);
			try { dbg.enterDecision(309, decisionCanBacktrack[309]);

			int LA309_0 = input.LA(1);
			if ( (LA309_0==COMMENT||LA309_0==NL||LA309_0==WS) ) {
				alt309=1;
			}
			} finally {dbg.exitDecision(309);}

			switch (alt309) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1126:5: ws
					{
					dbg.location(1126,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration7073);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(309);}
			dbg.location(1126,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration7076);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1127, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1131, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1132:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1133:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1133,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1133:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt321=2;
			try { dbg.enterSubRule(321);
			try { dbg.enterDecision(321, decisionCanBacktrack[321]);

			int LA321_0 = input.LA(1);
			if ( (LA321_0==AT_IDENT||LA321_0==DOT||LA321_0==HASH||LA321_0==LESS_AND) ) {
				alt321=1;
			}
			else if ( (LA321_0==SASS_INCLUDE) ) {
				alt321=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 321, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(321);}

			switch (alt321) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1134,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1134,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt310=4;
					try { dbg.enterSubRule(310);
					try { dbg.enterDecision(310, decisionCanBacktrack[310]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt310=1;
						}
						break;
					case HASH:
						{
						alt310=2;
						}
						break;
					case AT_IDENT:
						{
						alt310=3;
						}
						break;
					case LESS_AND:
						{
						alt310=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 310, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(310);}

					switch (alt310) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:28: DOT cp_mixin_name
							{
							dbg.location(1134,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call7112); if (state.failed) return;dbg.location(1134,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7114);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:48: HASH
							{
							dbg.location(1134,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call7118); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:55: AT_IDENT
							{
							dbg.location(1134,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call7122); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:66: LESS_AND
							{
							dbg.location(1134,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call7126); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(310);}
					dbg.location(1134,76);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:76: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt314=3;
					try { dbg.enterSubRule(314);
					try { dbg.enterDecision(314, decisionCanBacktrack[314]);

					int LA314_0 = input.LA(1);
					if ( (LA314_0==COLON||LA314_0==DCOLON) ) {
						int LA314_1 = input.LA(2);
						if ( (synpred42_Css3()) ) {
							alt314=1;
						}
					}
					else if ( (LA314_0==COMMENT||LA314_0==NL||LA314_0==WS) ) {
						int LA314_2 = input.LA(2);
						if ( (synpred43_Css3()) ) {
							alt314=2;
						}
					}
					else if ( (LA314_0==LPAREN) && (synpred43_Css3())) {
						alt314=2;
					}
					} finally {dbg.exitDecision(314);}

					switch (alt314) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:77: ( pseudo )=> pseudo
							{
							dbg.location(1134,87);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call7134);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:96: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1134,110);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:110: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:111: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1134,111);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:111: ( ws )?
							int alt311=2;
							try { dbg.enterSubRule(311);
							try { dbg.enterDecision(311, decisionCanBacktrack[311]);

							int LA311_0 = input.LA(1);
							if ( (LA311_0==COMMENT||LA311_0==NL||LA311_0==WS) ) {
								alt311=1;
							}
							} finally {dbg.exitDecision(311);}

							switch (alt311) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:111: ws
									{
									dbg.location(1134,111);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7146);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(311);}
							dbg.location(1134,115);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7149); if (state.failed) return;dbg.location(1134,122);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:122: ( ws )?
							int alt312=2;
							try { dbg.enterSubRule(312);
							try { dbg.enterDecision(312, decisionCanBacktrack[312]);

							int LA312_0 = input.LA(1);
							if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
								alt312=1;
							}
							} finally {dbg.exitDecision(312);}

							switch (alt312) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:122: ws
									{
									dbg.location(1134,122);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7151);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(312);}
							dbg.location(1134,126);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:126: ( cp_mixin_call_args )?
							int alt313=2;
							try { dbg.enterSubRule(313);
							try { dbg.enterDecision(313, decisionCanBacktrack[313]);

							int LA313_0 = input.LA(1);
							if ( ((LA313_0 >= ANGLE && LA313_0 <= AT_SIGN)||(LA313_0 >= BOTTOMCENTER_SYM && LA313_0 <= BOTTOMRIGHT_SYM)||LA313_0==CHARSET_SYM||LA313_0==COUNTER_STYLE_SYM||LA313_0==DIMENSION||LA313_0==EMS||LA313_0==EXS||(LA313_0 >= FONT_FACE_SYM && LA313_0 <= FREQ)||LA313_0==GEN||(LA313_0 >= HASH && LA313_0 <= HASH_SYMBOL)||(LA313_0 >= IDENT && LA313_0 <= IMPORT_SYM)||LA313_0==LBRACE||(LA313_0 >= LEFTBOTTOM_SYM && LA313_0 <= LENGTH)||(LA313_0 >= LESS_AND && LA313_0 <= LESS_JS_STRING)||LA313_0==LPAREN||(LA313_0 >= MEDIA_SYM && LA313_0 <= MOZ_DOCUMENT_SYM)||LA313_0==NAMESPACE_SYM||(LA313_0 >= NOT && LA313_0 <= NUMBER)||(LA313_0 >= PAGE_SYM && LA313_0 <= PERCENTAGE_SYMBOL)||LA313_0==PLUS||(LA313_0 >= REM && LA313_0 <= RIGHTTOP_SYM)||(LA313_0 >= SASS_AT_ROOT && LA313_0 <= SASS_DEBUG)||(LA313_0 >= SASS_EACH && LA313_0 <= SASS_ELSE)||LA313_0==SASS_EXTEND||(LA313_0 >= SASS_FOR && LA313_0 <= SASS_FUNCTION)||(LA313_0 >= SASS_IF && LA313_0 <= SASS_MIXIN)||(LA313_0 >= SASS_RETURN && LA313_0 <= SASS_WHILE)||LA313_0==STRING||(LA313_0 >= TILDE && LA313_0 <= TOPRIGHT_SYM)||LA313_0==URI||LA313_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt313=1;
							}
							} finally {dbg.exitDecision(313);}

							switch (alt313) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:126: cp_mixin_call_args
									{
									dbg.location(1134,126);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7154);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(313);}
							dbg.location(1134,146);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7157); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(314);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1136,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1136,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call7182); if (state.failed) return;dbg.location(1136,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call7184);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1136,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call7186);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1136,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt318=2;
					try { dbg.enterSubRule(318);
					try { dbg.enterDecision(318, decisionCanBacktrack[318]);

					try {
						isCyclicDecision = true;
						alt318 = dfa318.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(318);}

					switch (alt318) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1136,58);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:58: ( ws )?
							int alt315=2;
							try { dbg.enterSubRule(315);
							try { dbg.enterDecision(315, decisionCanBacktrack[315]);

							int LA315_0 = input.LA(1);
							if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
								alt315=1;
							}
							} finally {dbg.exitDecision(315);}

							switch (alt315) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:58: ws
									{
									dbg.location(1136,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7189);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(315);}
							dbg.location(1136,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call7192); if (state.failed) return;dbg.location(1136,69);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:69: ( ws )?
							int alt316=2;
							try { dbg.enterSubRule(316);
							try { dbg.enterDecision(316, decisionCanBacktrack[316]);

							int LA316_0 = input.LA(1);
							if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
								alt316=1;
							}
							} finally {dbg.exitDecision(316);}

							switch (alt316) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:69: ws
									{
									dbg.location(1136,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7194);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(316);}
							dbg.location(1136,73);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:73: ( cp_mixin_call_args )?
							int alt317=2;
							try { dbg.enterSubRule(317);
							try { dbg.enterDecision(317, decisionCanBacktrack[317]);

							int LA317_0 = input.LA(1);
							if ( ((LA317_0 >= ANGLE && LA317_0 <= AT_SIGN)||(LA317_0 >= BOTTOMCENTER_SYM && LA317_0 <= BOTTOMRIGHT_SYM)||LA317_0==CHARSET_SYM||LA317_0==COUNTER_STYLE_SYM||LA317_0==DIMENSION||LA317_0==EMS||LA317_0==EXS||(LA317_0 >= FONT_FACE_SYM && LA317_0 <= FREQ)||LA317_0==GEN||(LA317_0 >= HASH && LA317_0 <= HASH_SYMBOL)||(LA317_0 >= IDENT && LA317_0 <= IMPORT_SYM)||LA317_0==LBRACE||(LA317_0 >= LEFTBOTTOM_SYM && LA317_0 <= LENGTH)||(LA317_0 >= LESS_AND && LA317_0 <= LESS_JS_STRING)||LA317_0==LPAREN||(LA317_0 >= MEDIA_SYM && LA317_0 <= MOZ_DOCUMENT_SYM)||LA317_0==NAMESPACE_SYM||(LA317_0 >= NOT && LA317_0 <= NUMBER)||(LA317_0 >= PAGE_SYM && LA317_0 <= PERCENTAGE_SYMBOL)||LA317_0==PLUS||(LA317_0 >= REM && LA317_0 <= RIGHTTOP_SYM)||(LA317_0 >= SASS_AT_ROOT && LA317_0 <= SASS_DEBUG)||(LA317_0 >= SASS_EACH && LA317_0 <= SASS_ELSE)||LA317_0==SASS_EXTEND||(LA317_0 >= SASS_FOR && LA317_0 <= SASS_FUNCTION)||(LA317_0 >= SASS_IF && LA317_0 <= SASS_MIXIN)||(LA317_0 >= SASS_RETURN && LA317_0 <= SASS_WHILE)||LA317_0==STRING||(LA317_0 >= TILDE && LA317_0 <= TOPRIGHT_SYM)||LA317_0==URI||LA317_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt317=1;
							}
							} finally {dbg.exitDecision(317);}

							switch (alt317) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:73: cp_mixin_call_args
									{
									dbg.location(1136,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call7197);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(317);}
							dbg.location(1136,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call7200); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(318);}
					dbg.location(1136,102);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:102: ( ( ws )? cp_mixin_block )?
					int alt320=2;
					try { dbg.enterSubRule(320);
					try { dbg.enterDecision(320, decisionCanBacktrack[320]);

					try {
						isCyclicDecision = true;
						alt320 = dfa320.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(320);}

					switch (alt320) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:103: ( ws )? cp_mixin_block
							{
							dbg.location(1136,103);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:103: ( ws )?
							int alt319=2;
							try { dbg.enterSubRule(319);
							try { dbg.enterDecision(319, decisionCanBacktrack[319]);

							int LA319_0 = input.LA(1);
							if ( (LA319_0==COMMENT||LA319_0==NL||LA319_0==WS) ) {
								alt319=1;
							}
							} finally {dbg.exitDecision(319);}

							switch (alt319) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:103: ws
									{
									dbg.location(1136,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call7205);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(319);}
							dbg.location(1136,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call7208);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(320);}

					}
					break;

			}
			} finally {dbg.exitSubRule(321);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1138, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1140, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1141:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1142,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block7237); if (state.failed) return;dbg.location(1142,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:12: ( ws )?
			int alt322=2;
			try { dbg.enterSubRule(322);
			try { dbg.enterDecision(322, decisionCanBacktrack[322]);

			int LA322_0 = input.LA(1);
			if ( (LA322_0==COMMENT||LA322_0==NL||LA322_0==WS) ) {
				alt322=1;
			}
			} finally {dbg.exitDecision(322);}

			switch (alt322) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1142:12: ws
					{
					dbg.location(1142,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block7239);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(322);}
			dbg.location(1142,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block7242);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1143,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt325=3;
			try { dbg.enterSubRule(325);
			try { dbg.enterDecision(325, decisionCanBacktrack[325]);

			int LA325_0 = input.LA(1);
			if ( ((LA325_0 >= AT_IDENT && LA325_0 <= AT_SIGN)||(LA325_0 >= BOTTOMCENTER_SYM && LA325_0 <= BOTTOMRIGHT_SYM)||(LA325_0 >= CHARSET_SYM && LA325_0 <= COLON)||LA325_0==COUNTER_STYLE_SYM||LA325_0==DCOLON||LA325_0==DOT||LA325_0==FONT_FACE_SYM||(LA325_0 >= GEN && LA325_0 <= GREATER)||(LA325_0 >= HASH && LA325_0 <= HASH_SYMBOL)||LA325_0==IMPORT_SYM||(LA325_0 >= LBRACKET && LA325_0 <= LEFTTOP_SYM)||LA325_0==LESS_AND||(LA325_0 >= MEDIA_SYM && LA325_0 <= MOZ_DOCUMENT_SYM)||LA325_0==NAMESPACE_SYM||LA325_0==PAGE_SYM||(LA325_0 >= PIPE && LA325_0 <= PLUS)||(LA325_0 >= RIGHTBOTTOM_SYM && LA325_0 <= RIGHTTOP_SYM)||LA325_0==SASS_AT_ROOT||LA325_0==SASS_DEBUG||(LA325_0 >= SASS_EACH && LA325_0 <= SASS_ELSE)||(LA325_0 >= SASS_ERROR && LA325_0 <= SASS_FUNCTION)||(LA325_0 >= SASS_IF && LA325_0 <= SASS_MIXIN)||(LA325_0 >= SASS_RETURN && LA325_0 <= SEMI)||LA325_0==STAR||LA325_0==TILDE||(LA325_0 >= TOPCENTER_SYM && LA325_0 <= TOPRIGHT_SYM)||LA325_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt325=1;
			}
			else if ( (LA325_0==IDENT) ) {
				int LA325_4 = input.LA(2);
				if ( (true) ) {
					alt325=1;
				}
				else if ( ((synpred44_Css3()&&(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")))) ) {
					alt325=2;
				}
			}
			else if ( (LA325_0==SASS_CONTENT) ) {
				int LA325_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt325=1;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt325=2;
				}
			}
			else if ( (LA325_0==PERCENTAGE) && (synpred44_Css3())) {
				alt325=2;
			}
			else if ( (LA325_0==RBRACE) ) {
				int LA325_39 = input.LA(2);
				if ( (synpred44_Css3()) ) {
					alt325=2;
				}
			}
			} finally {dbg.exitDecision(325);}

			switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:10: declarations
					{
					dbg.location(1143,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block7253);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1144,3);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(324);

					loop324:
					while (true) {
						int alt324=2;
						try { dbg.enterDecision(324, decisionCanBacktrack[324]);

						int LA324_0 = input.LA(1);
						if ( (LA324_0==IDENT||LA324_0==PERCENTAGE||LA324_0==SASS_CONTENT) ) {
							alt324=1;
						}

						} finally {dbg.exitDecision(324);}

						switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1144,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7268);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1144,26);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:26: ( ws )?
							int alt323=2;
							try { dbg.enterSubRule(323);
							try { dbg.enterDecision(323, decisionCanBacktrack[323]);

							int LA323_0 = input.LA(1);
							if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
								alt323=1;
							}
							} finally {dbg.exitDecision(323);}

							switch (alt323) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:26: ws
									{
									dbg.location(1144,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block7270);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(323);}

							}
							break;

						default :
							break loop324;
						}
					}
					} finally {dbg.exitSubRule(324);}

					}
					break;

			}
			} finally {dbg.exitSubRule(325);}
			dbg.location(1145,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block7282); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1146, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1148, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1149:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1150:5: IDENT
			{
			dbg.location(1150,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name7303); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1151, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1153, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )?
			{
			dbg.location(1157,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7334);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1157,23);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(327);

			loop327:
			while (true) {
				int alt327=2;
				try { dbg.enterDecision(327, decisionCanBacktrack[327]);

				int LA327_0 = input.LA(1);
				if ( (LA327_0==COMMA||LA327_0==SEMI) ) {
					alt327=1;
				}

				} finally {dbg.exitDecision(327);}

				switch (alt327) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1157,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1157,40);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:40: ( ws )?
					int alt326=2;
					try { dbg.enterSubRule(326);
					try { dbg.enterDecision(326, decisionCanBacktrack[326]);

					int LA326_0 = input.LA(1);
					if ( (LA326_0==COMMENT||LA326_0==NL||LA326_0==WS) ) {
						alt326=1;
					}
					} finally {dbg.exitDecision(326);}

					switch (alt326) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:40: ws
							{
							dbg.location(1157,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7346);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(326);}
					dbg.location(1157,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7349);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop327;
				}
			}
			} finally {dbg.exitSubRule(327);}
			dbg.location(1157,65);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:65: ( CP_DOTS ( ws )? )?
			int alt329=2;
			try { dbg.enterSubRule(329);
			try { dbg.enterDecision(329, decisionCanBacktrack[329]);

			int LA329_0 = input.LA(1);
			if ( (LA329_0==CP_DOTS) ) {
				alt329=1;
			}
			} finally {dbg.exitDecision(329);}

			switch (alt329) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:66: CP_DOTS ( ws )?
					{
					dbg.location(1157,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args7355); if (state.failed) return;dbg.location(1157,74);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:74: ( ws )?
					int alt328=2;
					try { dbg.enterSubRule(328);
					try { dbg.enterDecision(328, decisionCanBacktrack[328]);

					int LA328_0 = input.LA(1);
					if ( (LA328_0==COMMENT||LA328_0==NL||LA328_0==WS) ) {
						alt328=1;
					}
					} finally {dbg.exitDecision(328);}

					switch (alt328) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:74: ws
							{
							dbg.location(1157,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args7357);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(328);}

					}
					break;

			}
			} finally {dbg.exitSubRule(329);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1158, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1160, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1162,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt332=2;
			try { dbg.enterSubRule(332);
			try { dbg.enterDecision(332, decisionCanBacktrack[332]);

			try {
				isCyclicDecision = true;
				alt332 = dfa332.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(332);}

			switch (alt332) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1163,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg7391);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1163,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:21: ( ws )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:21: ws
							{
							dbg.location(1163,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7393);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}
					dbg.location(1163,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg7396); if (state.failed) return;dbg.location(1163,31);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:31: ( ws )?
					int alt331=2;
					try { dbg.enterSubRule(331);
					try { dbg.enterDecision(331, decisionCanBacktrack[331]);

					int LA331_0 = input.LA(1);
					if ( (LA331_0==COMMENT||LA331_0==NL||LA331_0==WS) ) {
						alt331=1;
					}
					} finally {dbg.exitDecision(331);}

					switch (alt331) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:31: ws
							{
							dbg.location(1163,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7398);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(331);}
					dbg.location(1163,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7401);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1164:11: cp_expression
					{
					dbg.location(1164,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg7413);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(332);}
			dbg.location(1165,7);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:7: ( ws )?
			int alt333=2;
			try { dbg.enterSubRule(333);
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			int LA333_0 = input.LA(1);
			if ( (LA333_0==COMMENT||LA333_0==NL||LA333_0==WS) ) {
				alt333=1;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:7: ws
					{
					dbg.location(1165,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg7421);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(333);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1166, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1169:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1169, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt341=2;
			try { dbg.enterDecision(341, decisionCanBacktrack[341]);

			int LA341_0 = input.LA(1);
			if ( (LA341_0==AT_IDENT||(LA341_0 >= BOTTOMCENTER_SYM && LA341_0 <= BOTTOMRIGHT_SYM)||LA341_0==CHARSET_SYM||LA341_0==COUNTER_STYLE_SYM||LA341_0==FONT_FACE_SYM||LA341_0==IDENT||LA341_0==IMPORT_SYM||(LA341_0 >= LEFTBOTTOM_SYM && LA341_0 <= LEFTTOP_SYM)||LA341_0==MEDIA_SYM||LA341_0==MOZ_DOCUMENT_SYM||LA341_0==NAMESPACE_SYM||LA341_0==PAGE_SYM||(LA341_0 >= RIGHTBOTTOM_SYM && LA341_0 <= RIGHTTOP_SYM)||(LA341_0 >= SASS_AT_ROOT && LA341_0 <= SASS_DEBUG)||(LA341_0 >= SASS_EACH && LA341_0 <= SASS_ELSE)||LA341_0==SASS_EXTEND||(LA341_0 >= SASS_FOR && LA341_0 <= SASS_FUNCTION)||(LA341_0 >= SASS_IF && LA341_0 <= SASS_MIXIN)||(LA341_0 >= SASS_RETURN && LA341_0 <= SASS_WHILE)||(LA341_0 >= TOPCENTER_SYM && LA341_0 <= TOPRIGHT_SYM)||LA341_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt341=1;
			}
			else if ( (LA341_0==CP_DOTS||LA341_0==LESS_REST) ) {
				alt341=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 341, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(341);}

			switch (alt341) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1177,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1177,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list7468);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1177,14);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(335);

					loop335:
					while (true) {
						int alt335=2;
						try { dbg.enterDecision(335, decisionCanBacktrack[335]);

						try {
							isCyclicDecision = true;
							alt335 = dfa335.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(335);}

						switch (alt335) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1177,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1177,33);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:33: ( ws )?
							int alt334=2;
							try { dbg.enterSubRule(334);
							try { dbg.enterDecision(334, decisionCanBacktrack[334]);

							int LA334_0 = input.LA(1);
							if ( (LA334_0==COMMENT||LA334_0==NL||LA334_0==WS) ) {
								alt334=1;
							}
							} finally {dbg.exitDecision(334);}

							switch (alt334) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:33: ws
									{
									dbg.location(1177,33);
									pushFollow(FOLLOW_ws_in_cp_args_list7482);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(334);}
							dbg.location(1177,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list7485);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop335;
						}
					}
					} finally {dbg.exitSubRule(335);}
					dbg.location(1177,47);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt337=2;
					try { dbg.enterSubRule(337);
					try { dbg.enterDecision(337, decisionCanBacktrack[337]);

					int LA337_0 = input.LA(1);
					if ( (LA337_0==COMMA||LA337_0==SEMI) ) {
						alt337=1;
					}
					} finally {dbg.exitDecision(337);}

					switch (alt337) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1177,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1177,64);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:64: ( ws )?
							int alt336=2;
							try { dbg.enterSubRule(336);
							try { dbg.enterDecision(336, decisionCanBacktrack[336]);

							int LA336_0 = input.LA(1);
							if ( (LA336_0==COMMENT||LA336_0==NL||LA336_0==WS) ) {
								alt336=1;
							}
							} finally {dbg.exitDecision(336);}

							switch (alt336) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:64: ws
									{
									dbg.location(1177,64);
									pushFollow(FOLLOW_ws_in_cp_args_list7500);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(336);}

							}
							break;

					}
					} finally {dbg.exitSubRule(337);}
					dbg.location(1177,71);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt339=2;
					try { dbg.enterSubRule(339);
					try { dbg.enterDecision(339, decisionCanBacktrack[339]);

					int LA339_0 = input.LA(1);
					if ( (LA339_0==CP_DOTS||LA339_0==LESS_REST) ) {
						alt339=1;
					}
					} finally {dbg.exitDecision(339);}

					switch (alt339) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1177,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1177,95);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:95: ( ws )?
							int alt338=2;
							try { dbg.enterSubRule(338);
							try { dbg.enterDecision(338, decisionCanBacktrack[338]);

							int LA338_0 = input.LA(1);
							if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
								alt338=1;
							}
							} finally {dbg.exitDecision(338);}

							switch (alt338) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:95: ws
									{
									dbg.location(1177,95);
									pushFollow(FOLLOW_ws_in_cp_args_list7516);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(338);}

							}
							break;

					}
					} finally {dbg.exitSubRule(339);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1179,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1179,27);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:27: ( ws )?
					int alt340=2;
					try { dbg.enterSubRule(340);
					try { dbg.enterDecision(340, decisionCanBacktrack[340]);

					int LA340_0 = input.LA(1);
					if ( (LA340_0==COMMENT||LA340_0==NL||LA340_0==WS) ) {
						alt340=1;
					}
					} finally {dbg.exitDecision(340);}

					switch (alt340) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:27: ws
							{
							dbg.location(1179,27);
							pushFollow(FOLLOW_ws_in_cp_args_list7541);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(340);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1180, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1183:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1183, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1184:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt346=2;
			try { dbg.enterDecision(346, decisionCanBacktrack[346]);

			int LA346_0 = input.LA(1);
			if ( (LA346_0==AT_IDENT||(LA346_0 >= BOTTOMCENTER_SYM && LA346_0 <= BOTTOMRIGHT_SYM)||LA346_0==CHARSET_SYM||LA346_0==COUNTER_STYLE_SYM||LA346_0==FONT_FACE_SYM||LA346_0==IMPORT_SYM||(LA346_0 >= LEFTBOTTOM_SYM && LA346_0 <= LEFTTOP_SYM)||LA346_0==MEDIA_SYM||LA346_0==MOZ_DOCUMENT_SYM||LA346_0==NAMESPACE_SYM||LA346_0==PAGE_SYM||(LA346_0 >= RIGHTBOTTOM_SYM && LA346_0 <= RIGHTTOP_SYM)||(LA346_0 >= SASS_AT_ROOT && LA346_0 <= SASS_DEBUG)||(LA346_0 >= SASS_EACH && LA346_0 <= SASS_ELSE)||LA346_0==SASS_EXTEND||(LA346_0 >= SASS_FOR && LA346_0 <= SASS_FUNCTION)||(LA346_0 >= SASS_IF && LA346_0 <= SASS_MIXIN)||(LA346_0 >= SASS_RETURN && LA346_0 <= SASS_WHILE)||(LA346_0 >= TOPCENTER_SYM && LA346_0 <= TOPRIGHT_SYM)||LA346_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt346=1;
			}
			else if ( (LA346_0==IDENT) ) {
				alt346=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 346, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(346);}

			switch (alt346) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1185,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg7564);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1185,17);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:17: ( ws )?
					int alt342=2;
					try { dbg.enterSubRule(342);
					try { dbg.enterDecision(342, decisionCanBacktrack[342]);

					int LA342_0 = input.LA(1);
					if ( (LA342_0==COMMENT||LA342_0==NL||LA342_0==WS) ) {
						alt342=1;
					}
					} finally {dbg.exitDecision(342);}

					switch (alt342) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:17: ws
							{
							dbg.location(1185,17);
							pushFollow(FOLLOW_ws_in_cp_arg7566);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(342);}
					dbg.location(1185,21);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt345=2;
					try { dbg.enterSubRule(345);
					try { dbg.enterDecision(345, decisionCanBacktrack[345]);

					int LA345_0 = input.LA(1);
					if ( (LA345_0==COLON) ) {
						alt345=1;
					}
					} finally {dbg.exitDecision(345);}

					switch (alt345) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1185,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg7571); if (state.failed) return;dbg.location(1185,29);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:29: ( ws )?
							int alt343=2;
							try { dbg.enterSubRule(343);
							try { dbg.enterDecision(343, decisionCanBacktrack[343]);

							int LA343_0 = input.LA(1);
							if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
								alt343=1;
							}
							} finally {dbg.exitDecision(343);}

							switch (alt343) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:29: ws
									{
									dbg.location(1185,29);
									pushFollow(FOLLOW_ws_in_cp_arg7573);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(343);}
							dbg.location(1185,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg7576);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1185,47);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:47: ( ws )?
							int alt344=2;
							try { dbg.enterSubRule(344);
							try { dbg.enterDecision(344, decisionCanBacktrack[344]);

							int LA344_0 = input.LA(1);
							if ( (LA344_0==COMMENT||LA344_0==NL||LA344_0==WS) ) {
								alt344=1;
							}
							} finally {dbg.exitDecision(344);}

							switch (alt344) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:47: ws
									{
									dbg.location(1185,47);
									pushFollow(FOLLOW_ws_in_cp_arg7578);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(344);}

							}
							break;

					}
					} finally {dbg.exitSubRule(345);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:7: {...}? IDENT
					{
					dbg.location(1186,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1186,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg7591); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1187, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1191:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1191, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1193,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded7614);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1193,15);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:15: ( ws )?
			int alt347=2;
			try { dbg.enterSubRule(347);
			try { dbg.enterDecision(347, decisionCanBacktrack[347]);

			int LA347_0 = input.LA(1);
			if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
				alt347=1;
			}
			} finally {dbg.exitDecision(347);}

			switch (alt347) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:15: ws
					{
					dbg.location(1193,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded7616);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(347);}
			dbg.location(1193,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7619);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1193,34);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(351);

			loop351:
			while (true) {
				int alt351=2;
				try { dbg.enterDecision(351, decisionCanBacktrack[351]);

				try {
					isCyclicDecision = true;
					alt351 = dfa351.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(351);}

				switch (alt351) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1193,35);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:35: ( ws )?
					int alt348=2;
					try { dbg.enterSubRule(348);
					try { dbg.enterDecision(348, decisionCanBacktrack[348]);

					int LA348_0 = input.LA(1);
					if ( (LA348_0==COMMENT||LA348_0==NL||LA348_0==WS) ) {
						alt348=1;
					}
					} finally {dbg.exitDecision(348);}

					switch (alt348) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:35: ws
							{
							dbg.location(1193,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7622);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(348);}
					dbg.location(1193,39);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:39: ( COMMA | key_and )
					int alt349=2;
					try { dbg.enterSubRule(349);
					try { dbg.enterDecision(349, decisionCanBacktrack[349]);

					int LA349_0 = input.LA(1);
					if ( (LA349_0==COMMA) ) {
						alt349=1;
					}
					else if ( (LA349_0==IDENT) ) {
						alt349=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 349, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(349);}

					switch (alt349) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:40: COMMA
							{
							dbg.location(1193,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded7626); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:48: key_and
							{
							dbg.location(1193,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded7630);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(349);}
					dbg.location(1193,57);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:57: ( ws )?
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==COMMENT||LA350_0==NL||LA350_0==WS) ) {
						alt350=1;
					}
					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:57: ws
							{
							dbg.location(1193,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded7633);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(350);}
					dbg.location(1193,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded7636);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop351;
				}
			}
			} finally {dbg.exitSubRule(351);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1194, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1198:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1198, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1199:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1200,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:5: ( NOT ( ws )? )?
			int alt353=2;
			try { dbg.enterSubRule(353);
			try { dbg.enterDecision(353, decisionCanBacktrack[353]);

			int LA353_0 = input.LA(1);
			if ( (LA353_0==NOT) ) {
				alt353=1;
			}
			} finally {dbg.exitDecision(353);}

			switch (alt353) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:6: NOT ( ws )?
					{
					dbg.location(1200,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition7662); if (state.failed) return;dbg.location(1200,10);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:10: ( ws )?
					int alt352=2;
					try { dbg.enterSubRule(352);
					try { dbg.enterDecision(352, decisionCanBacktrack[352]);

					int LA352_0 = input.LA(1);
					if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
						alt352=1;
					}
					} finally {dbg.exitDecision(352);}

					switch (alt352) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:10: ws
							{
							dbg.location(1200,10);
							pushFollow(FOLLOW_ws_in_less_condition7664);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(352);}

					}
					break;

			}
			} finally {dbg.exitSubRule(353);}
			dbg.location(1201,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition7673); if (state.failed) return;dbg.location(1201,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:12: ( ws )?
			int alt354=2;
			try { dbg.enterSubRule(354);
			try { dbg.enterDecision(354, decisionCanBacktrack[354]);

			int LA354_0 = input.LA(1);
			if ( (LA354_0==COMMENT||LA354_0==NL||LA354_0==WS) ) {
				alt354=1;
			}
			} finally {dbg.exitDecision(354);}

			switch (alt354) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:12: ws
					{
					dbg.location(1201,12);
					pushFollow(FOLLOW_ws_in_less_condition7675);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(354);}
			dbg.location(1202,9);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1203,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:14: ( cp_variable | less_function_in_condition )
			int alt355=2;
			try { dbg.enterSubRule(355);
			try { dbg.enterDecision(355, decisionCanBacktrack[355]);

			int LA355_0 = input.LA(1);
			if ( (LA355_0==AT_IDENT||(LA355_0 >= BOTTOMCENTER_SYM && LA355_0 <= BOTTOMRIGHT_SYM)||LA355_0==CHARSET_SYM||LA355_0==COUNTER_STYLE_SYM||LA355_0==FONT_FACE_SYM||LA355_0==IMPORT_SYM||(LA355_0 >= LEFTBOTTOM_SYM && LA355_0 <= LEFTTOP_SYM)||LA355_0==MEDIA_SYM||LA355_0==MOZ_DOCUMENT_SYM||LA355_0==NAMESPACE_SYM||LA355_0==PAGE_SYM||(LA355_0 >= RIGHTBOTTOM_SYM && LA355_0 <= RIGHTTOP_SYM)||(LA355_0 >= SASS_AT_ROOT && LA355_0 <= SASS_DEBUG)||(LA355_0 >= SASS_EACH && LA355_0 <= SASS_ELSE)||LA355_0==SASS_EXTEND||(LA355_0 >= SASS_FOR && LA355_0 <= SASS_FUNCTION)||(LA355_0 >= SASS_IF && LA355_0 <= SASS_MIXIN)||(LA355_0 >= SASS_RETURN && LA355_0 <= SASS_WHILE)||(LA355_0 >= TOPCENTER_SYM && LA355_0 <= TOPRIGHT_SYM)||LA355_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt355=1;
			}
			else if ( (LA355_0==IDENT) ) {
				alt355=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 355, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(355);}

			switch (alt355) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:15: cp_variable
					{
					dbg.location(1203,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition7702);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:29: less_function_in_condition
					{
					dbg.location(1203,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition7706);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(355);}
			dbg.location(1203,57);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:57: ( ws )?
			int alt356=2;
			try { dbg.enterSubRule(356);
			try { dbg.enterDecision(356, decisionCanBacktrack[356]);

			int LA356_0 = input.LA(1);
			if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
				alt356=1;
			}
			} finally {dbg.exitDecision(356);}

			switch (alt356) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:57: ws
					{
					dbg.location(1203,57);
					pushFollow(FOLLOW_ws_in_less_condition7709);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(356);}
			dbg.location(1203,61);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt358=2;
			try { dbg.enterSubRule(358);
			try { dbg.enterDecision(358, decisionCanBacktrack[358]);

			int LA358_0 = input.LA(1);
			if ( ((LA358_0 >= GREATER && LA358_0 <= GREATER_OR_EQ)||LA358_0==LESS||LA358_0==LESS_OR_EQ||LA358_0==OPEQ) ) {
				alt358=1;
			}
			} finally {dbg.exitDecision(358);}

			switch (alt358) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1203,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition7713);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1203,86);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:86: ( ws )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					int LA357_0 = input.LA(1);
					if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
						alt357=1;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1203:86: ws
							{
							dbg.location(1203,86);
							pushFollow(FOLLOW_ws_in_less_condition7715);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}
					dbg.location(1203,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition7718);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(358);}

			}
			dbg.location(1205,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition7736); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1206, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1209, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1211,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition7758);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1211,18);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:18: ( ws )?
			int alt359=2;
			try { dbg.enterSubRule(359);
			try { dbg.enterDecision(359, decisionCanBacktrack[359]);

			int LA359_0 = input.LA(1);
			if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
				alt359=1;
			}
			} finally {dbg.exitDecision(359);}

			switch (alt359) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:18: ws
					{
					dbg.location(1211,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7760);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(359);}
			dbg.location(1211,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition7763); if (state.failed) return;dbg.location(1211,29);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:29: ( ws )?
			int alt360=2;
			try { dbg.enterSubRule(360);
			try { dbg.enterDecision(360, decisionCanBacktrack[360]);

			int LA360_0 = input.LA(1);
			if ( (LA360_0==COMMENT||LA360_0==NL||LA360_0==WS) ) {
				alt360=1;
			}
			} finally {dbg.exitDecision(360);}

			switch (alt360) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:29: ws
					{
					dbg.location(1211,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7765);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(360);}
			dbg.location(1211,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition7768);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1211,45);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:45: ( ws )?
			int alt361=2;
			try { dbg.enterSubRule(361);
			try { dbg.enterDecision(361, decisionCanBacktrack[361]);

			int LA361_0 = input.LA(1);
			if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
				alt361=1;
			}
			} finally {dbg.exitDecision(361);}

			switch (alt361) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1211:45: ws
					{
					dbg.location(1211,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition7770);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(361);}
			dbg.location(1211,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition7773); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1212, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1215, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1216:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1217:5: IDENT
			{
			dbg.location(1217,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name7795); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1218, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1220, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1221,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1223, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:1: less_selector_interpolation_exp : less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1225, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:33: ( less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:5: less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1226,5);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7849);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1226,33);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:33: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt363=3;
			try { dbg.enterSubRule(363);
			try { dbg.enterDecision(363, decisionCanBacktrack[363]);

			try {
				isCyclicDecision = true;
				alt363 = dfa363.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(363);}

			switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:34: less_selector_interpolation_exp
					{
					dbg.location(1226,34);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7852);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:68: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1226,68);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:68: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt362=0;
					try { dbg.enterSubRule(362);

					loop362:
					while (true) {
						int alt362=2;
						try { dbg.enterDecision(362, decisionCanBacktrack[362]);

						int LA362_0 = input.LA(1);
						if ( (LA362_0==DIMENSION||LA362_0==IDENT||LA362_0==LENGTH||LA362_0==MINUS) ) {
							alt362=1;
						}

						} finally {dbg.exitDecision(362);}

						switch (alt362) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1226,68);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt362 >= 1 ) break loop362;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(362, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt362++;
					}
					} finally {dbg.exitSubRule(362);}

					}
					break;

			}
			} finally {dbg.exitSubRule(363);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1227, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1229, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1231,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation7895); if (state.failed) return;dbg.location(1231,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation7897); if (state.failed) return;dbg.location(1231,20);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:20: ( ws )?
			int alt364=2;
			try { dbg.enterSubRule(364);
			try { dbg.enterDecision(364, decisionCanBacktrack[364]);

			int LA364_0 = input.LA(1);
			if ( (LA364_0==COMMENT||LA364_0==NL||LA364_0==WS) ) {
				alt364=1;
			}
			} finally {dbg.exitDecision(364);}

			switch (alt364) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:20: ws
					{
					dbg.location(1231,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7899);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(364);}
			dbg.location(1231,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation7902); if (state.failed) return;dbg.location(1231,30);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:30: ( ws )?
			int alt365=2;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			int LA365_0 = input.LA(1);
			if ( (LA365_0==COMMENT||LA365_0==NL||LA365_0==WS) ) {
				alt365=1;
			}
			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:30: ws
					{
					dbg.location(1231,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation7904);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1231,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation7907); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1232, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1235, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1236,5);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:5: ( IDENT | MINUS )?
			int alt366=2;
			try { dbg.enterSubRule(366);
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			int LA366_0 = input.LA(1);
			if ( (LA366_0==IDENT||LA366_0==MINUS) ) {
				alt366=1;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1236,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1236,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp7934);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1236,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt368=3;
			try { dbg.enterSubRule(368);
			try { dbg.enterDecision(368, decisionCanBacktrack[368]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA368_1 = input.LA(2);
					if ( (LA368_1==HASH_SYMBOL) ) {
						int LA368_5 = input.LA(3);
						if ( (LA368_5==LBRACE) ) {
							alt368=1;
						}
						else if ( (LA368_5==AT_SIGN||LA368_5==NAME) ) {
							alt368=2;
						}
					}
					else if ( (LA368_1==AT_SIGN||(LA368_1 >= COLON && LA368_1 <= COMMENT)||(LA368_1 >= DCOLON && LA368_1 <= DOT)||LA368_1==GREATER||LA368_1==HASH||LA368_1==IDENT||(LA368_1 >= LBRACE && LA368_1 <= LBRACKET)||LA368_1==LENGTH||LA368_1==LESS_AND||LA368_1==MINUS||LA368_1==NL||LA368_1==PLUS||LA368_1==RBRACE||LA368_1==RPAREN||LA368_1==SASS_EXTEND_ONLY_SELECTOR||LA368_1==SEMI||LA368_1==TILDE||LA368_1==WS) ) {
						alt368=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA368_2 = input.LA(2);
					if ( (LA368_2==LBRACE) ) {
						alt368=1;
					}
					}
					break;
				case DIMENSION:
				case LENGTH:
					{
					alt368=2;
					}
					break;
			}
			} finally {dbg.exitDecision(368);}

			switch (alt368) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:57: sass_selector_interpolation_exp
					{
					dbg.location(1236,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp7937);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1236,91);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt367=0;
					try { dbg.enterSubRule(367);

					loop367:
					while (true) {
						int alt367=2;
						try { dbg.enterDecision(367, decisionCanBacktrack[367]);

						int LA367_0 = input.LA(1);
						if ( (LA367_0==DIMENSION||LA367_0==IDENT||LA367_0==LENGTH||LA367_0==MINUS) ) {
							alt367=1;
						}

						} finally {dbg.exitDecision(367);}

						switch (alt367) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1236,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt367 >= 1 ) break loop367;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(367, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt367++;
					}
					} finally {dbg.exitSubRule(367);}

					}
					break;

			}
			} finally {dbg.exitSubRule(368);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1237, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE cp_expression RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1239, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1240:5: ( HASH_SYMBOL LBRACE cp_expression RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1241:9: HASH_SYMBOL LBRACE cp_expression RBRACE
			{
			dbg.location(1241,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7984); if (state.failed) return;dbg.location(1241,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var7986); if (state.failed) return;dbg.location(1241,28);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var7988);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1241,42);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var7990); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1242, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1262, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1264,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties8030);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1264,14);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:14: ( ws )?
			int alt369=2;
			try { dbg.enterSubRule(369);
			try { dbg.enterDecision(369, decisionCanBacktrack[369]);

			int LA369_0 = input.LA(1);
			if ( (LA369_0==COMMENT||LA369_0==NL||LA369_0==WS) ) {
				alt369=1;
			}
			} finally {dbg.exitDecision(369);}

			switch (alt369) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:14: ws
					{
					dbg.location(1264,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8032);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(369);}
			dbg.location(1264,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties8035); if (state.failed) return;dbg.location(1264,24);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:24: ( ws )?
			int alt370=2;
			try { dbg.enterSubRule(370);
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			int LA370_0 = input.LA(1);
			if ( (LA370_0==COMMENT||LA370_0==NL||LA370_0==WS) ) {
				alt370=1;
			}
			} finally {dbg.exitDecision(370);}

			switch (alt370) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:24: ws
					{
					dbg.location(1264,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8037);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(370);}
			dbg.location(1264,28);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:28: ( propertyValue ( ws )? )?
			int alt372=2;
			try { dbg.enterSubRule(372);
			try { dbg.enterDecision(372, decisionCanBacktrack[372]);

			int LA372_0 = input.LA(1);
			if ( ((LA372_0 >= ANGLE && LA372_0 <= AT_SIGN)||(LA372_0 >= BOTTOMCENTER_SYM && LA372_0 <= BOTTOMRIGHT_SYM)||LA372_0==CHARSET_SYM||LA372_0==COUNTER_STYLE_SYM||LA372_0==DIMENSION||LA372_0==EMS||LA372_0==EXS||(LA372_0 >= FONT_FACE_SYM && LA372_0 <= FREQ)||LA372_0==GEN||(LA372_0 >= HASH && LA372_0 <= HASH_SYMBOL)||LA372_0==IDENT||LA372_0==IMPORT_SYM||(LA372_0 >= LEFTBOTTOM_SYM && LA372_0 <= LENGTH)||(LA372_0 >= LESS_AND && LA372_0 <= LESS_JS_STRING)||(LA372_0 >= MEDIA_SYM && LA372_0 <= MOZ_DOCUMENT_SYM)||LA372_0==NAMESPACE_SYM||LA372_0==NUMBER||(LA372_0 >= PAGE_SYM && LA372_0 <= PERCENTAGE_SYMBOL)||LA372_0==PLUS||(LA372_0 >= REM && LA372_0 <= RIGHTTOP_SYM)||(LA372_0 >= SASS_AT_ROOT && LA372_0 <= SASS_DEBUG)||(LA372_0 >= SASS_EACH && LA372_0 <= SASS_ELSE)||LA372_0==SASS_EXTEND||(LA372_0 >= SASS_FOR && LA372_0 <= SASS_FUNCTION)||(LA372_0 >= SASS_IF && LA372_0 <= SASS_MIXIN)||(LA372_0 >= SASS_RETURN && LA372_0 <= SASS_WHILE)||LA372_0==STRING||(LA372_0 >= TILDE && LA372_0 <= TOPRIGHT_SYM)||LA372_0==URI||LA372_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt372=1;
			}
			} finally {dbg.exitDecision(372);}

			switch (alt372) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:29: propertyValue ( ws )?
					{
					dbg.location(1264,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties8041);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1264,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:43: ( ws )?
					int alt371=2;
					try { dbg.enterSubRule(371);
					try { dbg.enterDecision(371, decisionCanBacktrack[371]);

					int LA371_0 = input.LA(1);
					if ( (LA371_0==COMMENT||LA371_0==NL||LA371_0==WS) ) {
						alt371=1;
					}
					} finally {dbg.exitDecision(371);}

					switch (alt371) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:43: ws
							{
							dbg.location(1264,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties8043);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(371);}

					}
					break;

			}
			} finally {dbg.exitSubRule(372);}
			dbg.location(1264,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties8048); if (state.failed) return;dbg.location(1264,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:56: ( ws )?
			int alt373=2;
			try { dbg.enterSubRule(373);
			try { dbg.enterDecision(373, decisionCanBacktrack[373]);

			int LA373_0 = input.LA(1);
			if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
				alt373=1;
			}
			} finally {dbg.exitDecision(373);}

			switch (alt373) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:56: ws
					{
					dbg.location(1264,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties8050);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(373);}
			dbg.location(1264,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties8053);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1264,73);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:73: ( declarations )?
			int alt374=2;
			try { dbg.enterSubRule(374);
			try { dbg.enterDecision(374, decisionCanBacktrack[374]);

			int LA374_0 = input.LA(1);
			if ( ((LA374_0 >= AT_IDENT && LA374_0 <= AT_SIGN)||(LA374_0 >= BOTTOMCENTER_SYM && LA374_0 <= BOTTOMRIGHT_SYM)||(LA374_0 >= CHARSET_SYM && LA374_0 <= COLON)||LA374_0==COUNTER_STYLE_SYM||LA374_0==DCOLON||LA374_0==DOT||LA374_0==FONT_FACE_SYM||(LA374_0 >= GEN && LA374_0 <= GREATER)||(LA374_0 >= HASH && LA374_0 <= HASH_SYMBOL)||LA374_0==IDENT||LA374_0==IMPORT_SYM||(LA374_0 >= LBRACKET && LA374_0 <= LEFTTOP_SYM)||LA374_0==LESS_AND||(LA374_0 >= MEDIA_SYM && LA374_0 <= MOZ_DOCUMENT_SYM)||LA374_0==NAMESPACE_SYM||LA374_0==PAGE_SYM||(LA374_0 >= PIPE && LA374_0 <= PLUS)||(LA374_0 >= RIGHTBOTTOM_SYM && LA374_0 <= RIGHTTOP_SYM)||(LA374_0 >= SASS_AT_ROOT && LA374_0 <= SASS_DEBUG)||(LA374_0 >= SASS_EACH && LA374_0 <= SASS_ELSE)||(LA374_0 >= SASS_ERROR && LA374_0 <= SASS_FUNCTION)||(LA374_0 >= SASS_IF && LA374_0 <= SASS_MIXIN)||(LA374_0 >= SASS_RETURN && LA374_0 <= SEMI)||LA374_0==STAR||LA374_0==TILDE||(LA374_0 >= TOPCENTER_SYM && LA374_0 <= TOPRIGHT_SYM)||LA374_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt374=1;
			}
			} finally {dbg.exitDecision(374);}

			switch (alt374) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:73: declarations
					{
					dbg.location(1264,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties8055);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(374);}
			dbg.location(1264,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties8058); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1265, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1267, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:5: ( SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1269:5: SASS_EXTEND ws simpleSelectorSequence ( ws SASS_OPTIONAL )?
			{
			dbg.location(1269,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend8079); if (state.failed) return;dbg.location(1269,17);
			pushFollow(FOLLOW_ws_in_sass_extend8081);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1269,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend8083);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1269,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1269:43: ( ws SASS_OPTIONAL )?
			int alt375=2;
			try { dbg.enterSubRule(375);
			try { dbg.enterDecision(375, decisionCanBacktrack[375]);

			try {
				isCyclicDecision = true;
				alt375 = dfa375.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(375);}

			switch (alt375) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1269:44: ws SASS_OPTIONAL
					{
					dbg.location(1269,44);
					pushFollow(FOLLOW_ws_in_sass_extend8086);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1269,47);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend8088); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(375);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1270, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1272, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:5: ( SASS_EXTEND_ONLY_SELECTOR )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1274:5: SASS_EXTEND_ONLY_SELECTOR
			{
			dbg.location(1274,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8111); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1275, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1277, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1279:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1279,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1279,32);
			pushFollow(FOLLOW_ws_in_sass_debug8142);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1279,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug8144);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1280, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1282, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1284:5: SASS_ERROR ws STRING
			{
			dbg.location(1284,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error8165); if (state.failed) return;dbg.location(1284,16);
			pushFollow(FOLLOW_ws_in_sass_error8167);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1284,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error8169); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1285, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1287, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt376=4;
			try { dbg.enterDecision(376, decisionCanBacktrack[376]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt376=1;
				}
				break;
			case SASS_FOR:
				{
				alt376=2;
				}
				break;
			case SASS_EACH:
				{
				alt376=3;
				}
				break;
			case SASS_WHILE:
				{
				alt376=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 376, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(376);}

			switch (alt376) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:5: sass_if
					{
					dbg.location(1289,5);
					pushFollow(FOLLOW_sass_if_in_sass_control8190);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:15: sass_for
					{
					dbg.location(1289,15);
					pushFollow(FOLLOW_sass_for_in_sass_control8194);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:26: sass_each
					{
					dbg.location(1289,26);
					pushFollow(FOLLOW_sass_each_in_sass_control8198);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:38: sass_while
					{
					dbg.location(1289,38);
					pushFollow(FOLLOW_sass_while_in_sass_control8202);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1290, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1292, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1294,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if8223); if (state.failed) return;dbg.location(1294,13);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:13: ( ws )?
			int alt377=2;
			try { dbg.enterSubRule(377);
			try { dbg.enterDecision(377, decisionCanBacktrack[377]);

			int LA377_0 = input.LA(1);
			if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
				alt377=1;
			}
			} finally {dbg.exitDecision(377);}

			switch (alt377) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:13: ws
					{
					dbg.location(1294,13);
					pushFollow(FOLLOW_ws_in_sass_if8225);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(377);}
			dbg.location(1294,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if8228);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1294,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:41: ( ws )?
			int alt378=2;
			try { dbg.enterSubRule(378);
			try { dbg.enterDecision(378, decisionCanBacktrack[378]);

			int LA378_0 = input.LA(1);
			if ( (LA378_0==COMMENT||LA378_0==NL||LA378_0==WS) ) {
				alt378=1;
			}
			} finally {dbg.exitDecision(378);}

			switch (alt378) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:41: ws
					{
					dbg.location(1294,41);
					pushFollow(FOLLOW_ws_in_sass_if8230);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(378);}
			dbg.location(1294,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if8233);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1294,64);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:64: ( ( ws )? sass_else )?
			int alt380=2;
			try { dbg.enterSubRule(380);
			try { dbg.enterDecision(380, decisionCanBacktrack[380]);

			try {
				isCyclicDecision = true;
				alt380 = dfa380.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(380);}

			switch (alt380) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:65: ( ws )? sass_else
					{
					dbg.location(1294,65);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:65: ( ws )?
					int alt379=2;
					try { dbg.enterSubRule(379);
					try { dbg.enterDecision(379, decisionCanBacktrack[379]);

					int LA379_0 = input.LA(1);
					if ( (LA379_0==COMMENT||LA379_0==NL||LA379_0==WS) ) {
						alt379=1;
					}
					} finally {dbg.exitDecision(379);}

					switch (alt379) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:65: ws
							{
							dbg.location(1294,65);
							pushFollow(FOLLOW_ws_in_sass_if8236);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(379);}
					dbg.location(1294,69);
					pushFollow(FOLLOW_sass_else_in_sass_if8239);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(380);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1295, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1297, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt388=2;
			try { dbg.enterDecision(388, decisionCanBacktrack[388]);

			try {
				isCyclicDecision = true;
				alt388 = dfa388.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(388);}

			switch (alt388) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1299,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8262); if (state.failed) return;dbg.location(1299,15);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:15: ( ws )?
					int alt381=2;
					try { dbg.enterSubRule(381);
					try { dbg.enterDecision(381, decisionCanBacktrack[381]);

					int LA381_0 = input.LA(1);
					if ( (LA381_0==COMMENT||LA381_0==NL||LA381_0==WS) ) {
						alt381=1;
					}
					} finally {dbg.exitDecision(381);}

					switch (alt381) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:15: ws
							{
							dbg.location(1299,15);
							pushFollow(FOLLOW_ws_in_sass_else8264);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(381);}
					dbg.location(1299,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8267);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1301,5);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt383=2;
					try { dbg.enterSubRule(383);
					try { dbg.enterDecision(383, decisionCanBacktrack[383]);

					int LA383_0 = input.LA(1);
					if ( (LA383_0==SASS_ELSE) ) {
						alt383=1;
					}
					else if ( (LA383_0==SASS_ELSEIF) ) {
						alt383=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 383, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(383);}

					switch (alt383) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1301,6);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1301,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else8281); if (state.failed) return;dbg.location(1301,17);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:17: ( ws )?
							int alt382=2;
							try { dbg.enterSubRule(382);
							try { dbg.enterDecision(382, decisionCanBacktrack[382]);

							int LA382_0 = input.LA(1);
							if ( (LA382_0==COMMENT||LA382_0==NL||LA382_0==WS) ) {
								alt382=1;
							}
							} finally {dbg.exitDecision(382);}

							switch (alt382) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:17: ws
									{
									dbg.location(1301,17);
									pushFollow(FOLLOW_ws_in_sass_else8283);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(382);}
							dbg.location(1301,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1301,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else8288); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:64: SASS_ELSEIF
							{
							dbg.location(1301,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else8295); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(383);}
					dbg.location(1301,77);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:77: ( ws )?
					int alt384=2;
					try { dbg.enterSubRule(384);
					try { dbg.enterDecision(384, decisionCanBacktrack[384]);

					int LA384_0 = input.LA(1);
					if ( (LA384_0==COMMENT||LA384_0==NL||LA384_0==WS) ) {
						alt384=1;
					}
					} finally {dbg.exitDecision(384);}

					switch (alt384) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:77: ws
							{
							dbg.location(1301,77);
							pushFollow(FOLLOW_ws_in_sass_else8298);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(384);}
					dbg.location(1301,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else8301);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1301,105);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:105: ( ws )?
					int alt385=2;
					try { dbg.enterSubRule(385);
					try { dbg.enterDecision(385, decisionCanBacktrack[385]);

					int LA385_0 = input.LA(1);
					if ( (LA385_0==COMMENT||LA385_0==NL||LA385_0==WS) ) {
						alt385=1;
					}
					} finally {dbg.exitDecision(385);}

					switch (alt385) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:105: ws
							{
							dbg.location(1301,105);
							pushFollow(FOLLOW_ws_in_sass_else8303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(385);}
					dbg.location(1301,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else8306);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1301,128);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:128: ( ( ws )? sass_else )?
					int alt387=2;
					try { dbg.enterSubRule(387);
					try { dbg.enterDecision(387, decisionCanBacktrack[387]);

					try {
						isCyclicDecision = true;
						alt387 = dfa387.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(387);}

					switch (alt387) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:129: ( ws )? sass_else
							{
							dbg.location(1301,129);
							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:129: ( ws )?
							int alt386=2;
							try { dbg.enterSubRule(386);
							try { dbg.enterDecision(386, decisionCanBacktrack[386]);

							int LA386_0 = input.LA(1);
							if ( (LA386_0==COMMENT||LA386_0==NL||LA386_0==WS) ) {
								alt386=1;
							}
							} finally {dbg.exitDecision(386);}

							switch (alt386) {
								case 1 :
									dbg.enterAlt(1);

									// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1301:129: ws
									{
									dbg.location(1301,129);
									pushFollow(FOLLOW_ws_in_sass_else8309);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(386);}
							dbg.location(1301,133);
							pushFollow(FOLLOW_sass_else_in_sass_else8312);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(387);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1302, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1304, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1306:5: cp_expression
			{
			dbg.location(1306,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression8335);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1307, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1309:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1309, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1310:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1311,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for8356); if (state.failed) return;dbg.location(1311,14);
			pushFollow(FOLLOW_ws_in_sass_for8358);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for8360);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,29);
			pushFollow(FOLLOW_ws_in_sass_for8362);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1311,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8366); if (state.failed) return;dbg.location(1311,74);
			pushFollow(FOLLOW_ws_in_sass_for8370);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8372);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,96);
			pushFollow(FOLLOW_ws_in_sass_for8374);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1311,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for8378); if (state.failed) return;dbg.location(1311,173);
			pushFollow(FOLLOW_ws_in_sass_for8382);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for8384);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1311,195);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:195: ( ws )?
			int alt389=2;
			try { dbg.enterSubRule(389);
			try { dbg.enterDecision(389, decisionCanBacktrack[389]);

			int LA389_0 = input.LA(1);
			if ( (LA389_0==COMMENT||LA389_0==NL||LA389_0==WS) ) {
				alt389=1;
			}
			} finally {dbg.exitDecision(389);}

			switch (alt389) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1311:195: ws
					{
					dbg.location(1311,195);
					pushFollow(FOLLOW_ws_in_sass_for8386);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(389);}
			dbg.location(1311,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for8389);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1312, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1314, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws cp_expression_list ( ws )? sass_control_block
			{
			dbg.location(1316,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each8410); if (state.failed) return;dbg.location(1316,15);
			pushFollow(FOLLOW_ws_in_sass_each8412);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each8414);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,38);
			pushFollow(FOLLOW_ws_in_sass_each8416);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1316,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each8420); if (state.failed) return;dbg.location(1316,79);
			pushFollow(FOLLOW_ws_in_sass_each8424);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,82);
			pushFollow(FOLLOW_cp_expression_list_in_sass_each8426);
			cp_expression_list();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,101);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:101: ( ws )?
			int alt390=2;
			try { dbg.enterSubRule(390);
			try { dbg.enterDecision(390, decisionCanBacktrack[390]);

			int LA390_0 = input.LA(1);
			if ( (LA390_0==COMMENT||LA390_0==NL||LA390_0==WS) ) {
				alt390=1;
			}
			} finally {dbg.exitDecision(390);}

			switch (alt390) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:101: ws
					{
					dbg.location(1316,101);
					pushFollow(FOLLOW_ws_in_sass_each8428);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(390);}
			dbg.location(1316,105);
			pushFollow(FOLLOW_sass_control_block_in_sass_each8431);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1317, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1319, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1321,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables8452);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,17);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(393);

			loop393:
			while (true) {
				int alt393=2;
				try { dbg.enterDecision(393, decisionCanBacktrack[393]);

				try {
					isCyclicDecision = true;
					alt393 = dfa393.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(393);}

				switch (alt393) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1321,33);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:33: ( ws )?
					int alt391=2;
					try { dbg.enterSubRule(391);
					try { dbg.enterDecision(391, decisionCanBacktrack[391]);

					int LA391_0 = input.LA(1);
					if ( (LA391_0==COMMENT||LA391_0==NL||LA391_0==WS) ) {
						alt391=1;
					}
					} finally {dbg.exitDecision(391);}

					switch (alt391) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:33: ws
							{
							dbg.location(1321,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables8464);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(391);}
					dbg.location(1321,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables8467); if (state.failed) return;dbg.location(1321,43);
					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:43: ( ws )?
					int alt392=2;
					try { dbg.enterSubRule(392);
					try { dbg.enterDecision(392, decisionCanBacktrack[392]);

					int LA392_0 = input.LA(1);
					if ( (LA392_0==COMMENT||LA392_0==NL||LA392_0==WS) ) {
						alt392=1;
					}
					} finally {dbg.exitDecision(392);}

					switch (alt392) {
						case 1 :
							dbg.enterAlt(1);

							// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:43: ws
							{
							dbg.location(1321,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables8469);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(392);}
					dbg.location(1321,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables8472);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop393;
				}
			}
			} finally {dbg.exitSubRule(393);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1322, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1324, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1326,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while8497); if (state.failed) return;dbg.location(1326,16);
			pushFollow(FOLLOW_ws_in_sass_while8499);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while8501);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1326,43);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:43: ( ws )?
			int alt394=2;
			try { dbg.enterSubRule(394);
			try { dbg.enterDecision(394, decisionCanBacktrack[394]);

			int LA394_0 = input.LA(1);
			if ( (LA394_0==COMMENT||LA394_0==NL||LA394_0==WS) ) {
				alt394=1;
			}
			} finally {dbg.exitDecision(394);}

			switch (alt394) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:43: ws
					{
					dbg.location(1326,43);
					pushFollow(FOLLOW_ws_in_sass_while8503);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(394);}
			dbg.location(1326,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while8506);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1327, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1329, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1331,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block8527); if (state.failed) return;dbg.location(1331,12);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:12: ( ws )?
			int alt395=2;
			try { dbg.enterSubRule(395);
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			int LA395_0 = input.LA(1);
			if ( (LA395_0==COMMENT||LA395_0==NL||LA395_0==WS) ) {
				alt395=1;
			}
			} finally {dbg.exitDecision(395);}

			switch (alt395) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:12: ws
					{
					dbg.location(1331,12);
					pushFollow(FOLLOW_ws_in_sass_control_block8529);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(395);}
			dbg.location(1331,16);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:16: ( declarations )?
			int alt396=2;
			try { dbg.enterSubRule(396);
			try { dbg.enterDecision(396, decisionCanBacktrack[396]);

			int LA396_0 = input.LA(1);
			if ( ((LA396_0 >= AT_IDENT && LA396_0 <= AT_SIGN)||(LA396_0 >= BOTTOMCENTER_SYM && LA396_0 <= BOTTOMRIGHT_SYM)||(LA396_0 >= CHARSET_SYM && LA396_0 <= COLON)||LA396_0==COUNTER_STYLE_SYM||LA396_0==DCOLON||LA396_0==DOT||LA396_0==FONT_FACE_SYM||(LA396_0 >= GEN && LA396_0 <= GREATER)||(LA396_0 >= HASH && LA396_0 <= HASH_SYMBOL)||LA396_0==IDENT||LA396_0==IMPORT_SYM||(LA396_0 >= LBRACKET && LA396_0 <= LEFTTOP_SYM)||LA396_0==LESS_AND||(LA396_0 >= MEDIA_SYM && LA396_0 <= MOZ_DOCUMENT_SYM)||LA396_0==NAMESPACE_SYM||LA396_0==PAGE_SYM||(LA396_0 >= PIPE && LA396_0 <= PLUS)||(LA396_0 >= RIGHTBOTTOM_SYM && LA396_0 <= RIGHTTOP_SYM)||(LA396_0 >= SASS_AT_ROOT && LA396_0 <= SASS_DEBUG)||(LA396_0 >= SASS_EACH && LA396_0 <= SASS_ELSE)||(LA396_0 >= SASS_ERROR && LA396_0 <= SASS_FUNCTION)||(LA396_0 >= SASS_IF && LA396_0 <= SASS_MIXIN)||(LA396_0 >= SASS_RETURN && LA396_0 <= SEMI)||LA396_0==STAR||LA396_0==TILDE||(LA396_0 >= TOPCENTER_SYM && LA396_0 <= TOPRIGHT_SYM)||LA396_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt396=1;
			}
			} finally {dbg.exitDecision(396);}

			switch (alt396) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:16: declarations
					{
					dbg.location(1331,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block8532);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(396);}
			dbg.location(1331,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block8535); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1332, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1334, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1340,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration8577); if (state.failed) return;dbg.location(1340,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration8579);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1340,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration8581);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1340,41);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:41: ( ws )?
			int alt397=2;
			try { dbg.enterSubRule(397);
			try { dbg.enterDecision(397, decisionCanBacktrack[397]);

			int LA397_0 = input.LA(1);
			if ( (LA397_0==COMMENT||LA397_0==NL||LA397_0==WS) ) {
				alt397=1;
			}
			} finally {dbg.exitDecision(397);}

			switch (alt397) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:41: ws
					{
					dbg.location(1340,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8583);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(397);}
			dbg.location(1340,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration8586); if (state.failed) return;dbg.location(1340,52);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:52: ( ws )?
			int alt398=2;
			try { dbg.enterSubRule(398);
			try { dbg.enterDecision(398, decisionCanBacktrack[398]);

			int LA398_0 = input.LA(1);
			if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {
				alt398=1;
			}
			} finally {dbg.exitDecision(398);}

			switch (alt398) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:52: ws
					{
					dbg.location(1340,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8588);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(398);}
			dbg.location(1340,56);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:56: ( cp_args_list )?
			int alt399=2;
			try { dbg.enterSubRule(399);
			try { dbg.enterDecision(399, decisionCanBacktrack[399]);

			int LA399_0 = input.LA(1);
			if ( (LA399_0==AT_IDENT||(LA399_0 >= BOTTOMCENTER_SYM && LA399_0 <= BOTTOMRIGHT_SYM)||LA399_0==CHARSET_SYM||(LA399_0 >= COUNTER_STYLE_SYM && LA399_0 <= CP_DOTS)||LA399_0==FONT_FACE_SYM||LA399_0==IDENT||LA399_0==IMPORT_SYM||(LA399_0 >= LEFTBOTTOM_SYM && LA399_0 <= LEFTTOP_SYM)||LA399_0==LESS_REST||LA399_0==MEDIA_SYM||LA399_0==MOZ_DOCUMENT_SYM||LA399_0==NAMESPACE_SYM||LA399_0==PAGE_SYM||(LA399_0 >= RIGHTBOTTOM_SYM && LA399_0 <= RIGHTTOP_SYM)||(LA399_0 >= SASS_AT_ROOT && LA399_0 <= SASS_DEBUG)||(LA399_0 >= SASS_EACH && LA399_0 <= SASS_ELSE)||LA399_0==SASS_EXTEND||(LA399_0 >= SASS_FOR && LA399_0 <= SASS_FUNCTION)||(LA399_0 >= SASS_IF && LA399_0 <= SASS_MIXIN)||(LA399_0 >= SASS_RETURN && LA399_0 <= SASS_WHILE)||(LA399_0 >= TOPCENTER_SYM && LA399_0 <= TOPRIGHT_SYM)||LA399_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt399=1;
			}
			} finally {dbg.exitDecision(399);}

			switch (alt399) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:56: cp_args_list
					{
					dbg.location(1340,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration8591);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(399);}
			dbg.location(1340,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration8594); if (state.failed) return;dbg.location(1340,77);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:77: ( ws )?
			int alt400=2;
			try { dbg.enterSubRule(400);
			try { dbg.enterDecision(400, decisionCanBacktrack[400]);

			int LA400_0 = input.LA(1);
			if ( (LA400_0==COMMENT||LA400_0==NL||LA400_0==WS) ) {
				alt400=1;
			}
			} finally {dbg.exitDecision(400);}

			switch (alt400) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:77: ws
					{
					dbg.location(1340,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8596);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(400);}
			dbg.location(1340,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration8599); if (state.failed) return;dbg.location(1340,88);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:88: ( ws )?
			int alt401=2;
			try { dbg.enterSubRule(401);
			try { dbg.enterDecision(401, decisionCanBacktrack[401]);

			int LA401_0 = input.LA(1);
			if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {
				alt401=1;
			}
			} finally {dbg.exitDecision(401);}

			switch (alt401) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:88: ws
					{
					dbg.location(1340,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration8601);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(401);}
			dbg.location(1340,92);
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:92: ( declarations )?
			int alt402=2;
			try { dbg.enterSubRule(402);
			try { dbg.enterDecision(402, decisionCanBacktrack[402]);

			int LA402_0 = input.LA(1);
			if ( ((LA402_0 >= AT_IDENT && LA402_0 <= AT_SIGN)||(LA402_0 >= BOTTOMCENTER_SYM && LA402_0 <= BOTTOMRIGHT_SYM)||(LA402_0 >= CHARSET_SYM && LA402_0 <= COLON)||LA402_0==COUNTER_STYLE_SYM||LA402_0==DCOLON||LA402_0==DOT||LA402_0==FONT_FACE_SYM||(LA402_0 >= GEN && LA402_0 <= GREATER)||(LA402_0 >= HASH && LA402_0 <= HASH_SYMBOL)||LA402_0==IDENT||LA402_0==IMPORT_SYM||(LA402_0 >= LBRACKET && LA402_0 <= LEFTTOP_SYM)||LA402_0==LESS_AND||(LA402_0 >= MEDIA_SYM && LA402_0 <= MOZ_DOCUMENT_SYM)||LA402_0==NAMESPACE_SYM||LA402_0==PAGE_SYM||(LA402_0 >= PIPE && LA402_0 <= PLUS)||(LA402_0 >= RIGHTBOTTOM_SYM && LA402_0 <= RIGHTTOP_SYM)||(LA402_0 >= SASS_AT_ROOT && LA402_0 <= SASS_DEBUG)||(LA402_0 >= SASS_EACH && LA402_0 <= SASS_ELSE)||(LA402_0 >= SASS_ERROR && LA402_0 <= SASS_FUNCTION)||(LA402_0 >= SASS_IF && LA402_0 <= SASS_MIXIN)||(LA402_0 >= SASS_RETURN && LA402_0 <= SEMI)||LA402_0==STAR||LA402_0==TILDE||(LA402_0 >= TOPCENTER_SYM && LA402_0 <= TOPRIGHT_SYM)||LA402_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt402=1;
			}
			} finally {dbg.exitDecision(402);}

			switch (alt402) {
				case 1 :
					dbg.enterAlt(1);

					// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:92: declarations
					{
					dbg.location(1340,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration8604);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(402);}
			dbg.location(1340,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration8607); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1341, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1343:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1343, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1345:5: IDENT
			{
			dbg.location(1345,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name8628); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1346, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1348:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1348, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1349:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1350,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return8649); if (state.failed) return;dbg.location(1350,17);
			pushFollow(FOLLOW_ws_in_sass_function_return8651);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1350,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return8653);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1351, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1353, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1354:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:5: SASS_CONTENT
			{
			dbg.location(1355,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content8674); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1356, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1358, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1359:5: {...}? IDENT
			{
			dbg.location(1359,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1359,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types8693); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1360, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1365, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1366:5: {...}? IDENT
			{
			dbg.location(1366,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1366,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when8716); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1367, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1369, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1369:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1370:5: {...}? IDENT
			{
			dbg.location(1370,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1370,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and8735); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1371, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1373, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:5: {...}? IDENT
			{
			dbg.location(1374,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1374,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or8753); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1375, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1377, 0);

		try {
			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1378:5: {...}? IDENT
			{
			dbg.location(1378,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1378,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only8771); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1379, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ( ws )? mediaQueryList
		{
		dbg.location(386,45);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ( ws )?
		int alt403=2;
		try { dbg.enterSubRule(403);
		try { dbg.enterDecision(403, decisionCanBacktrack[403]);

		int LA403_0 = input.LA(1);
		if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
			alt403=1;
		}
		} finally {dbg.exitDecision(403);}

		switch (alt403) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:386:45: ws
				{
				dbg.location(386,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3365);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(403);}
		dbg.location(386,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3368);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ( ws )? mediaQueryList
		{
		dbg.location(389,99);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ( ws )?
		int alt404=2;
		try { dbg.enterSubRule(404);
		try { dbg.enterDecision(404, decisionCanBacktrack[404]);

		int LA404_0 = input.LA(1);
		if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
			alt404=1;
		}
		} finally {dbg.exitDecision(404);}

		switch (alt404) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:99: ws
				{
				dbg.location(389,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3429);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(404);}
		dbg.location(389,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3432);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ( ws )? mediaQueryList
		{
		dbg.location(391,102);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ( ws )?
		int alt405=2;
		try { dbg.enterSubRule(405);
		try { dbg.enterDecision(405, decisionCanBacktrack[405]);

		int LA405_0 = input.LA(1);
		if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {
			alt405=1;
		}
		} finally {dbg.exitDecision(405);}

		switch (alt405) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:102: ws
				{
				dbg.location(391,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3483);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(405);}
		dbg.location(391,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3486);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ( ws )? SEMI
		{
		dbg.location(406,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ( ws )?
		int alt406=2;
		try { dbg.enterSubRule(406);
		try { dbg.enterDecision(406, decisionCanBacktrack[406]);

		int LA406_0 = input.LA(1);
		if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
			alt406=1;
		}
		} finally {dbg.exitDecision(406);}

		switch (alt406) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:406:28: ws
				{
				dbg.location(406,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css3605);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(406);}
		dbg.location(406,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css3608); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt411=2;
		try { dbg.enterDecision(411, decisionCanBacktrack[411]);

		int LA411_0 = input.LA(1);
		if ( (LA411_0==SASS_MIXIN) ) {
			alt411=1;
		}
		else if ( (LA411_0==DOT||LA411_0==HASH) ) {
			alt411=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 411, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(411);}

		switch (alt411) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:6: SASS_MIXIN
				{
				dbg.location(415,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css3706); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(415,19);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(415,20);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:20: ( ( DOT IDENT ) | HASH )
				int alt407=2;
				try { dbg.enterSubRule(407);
				try { dbg.enterDecision(407, decisionCanBacktrack[407]);

				int LA407_0 = input.LA(1);
				if ( (LA407_0==DOT) ) {
					alt407=1;
				}
				else if ( (LA407_0==HASH) ) {
					alt407=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 407, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(407);}

				switch (alt407) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:21: ( DOT IDENT )
						{
						dbg.location(415,21);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:22: DOT IDENT
						{
						dbg.location(415,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css3713); if (state.failed) return;dbg.location(415,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css3715); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:35: HASH
						{
						dbg.location(415,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css3720); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(407);}
				dbg.location(415,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:41: ( ws )?
				int alt408=2;
				try { dbg.enterSubRule(408);
				try { dbg.enterDecision(408, decisionCanBacktrack[408]);

				int LA408_0 = input.LA(1);
				if ( (LA408_0==COMMENT||LA408_0==NL||LA408_0==WS) ) {
					alt408=1;
				}
				} finally {dbg.exitDecision(408);}

				switch (alt408) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:41: ws
						{
						dbg.location(415,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css3723);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(408);}
				dbg.location(415,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css3726); if (state.failed) return;dbg.location(415,52);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:52: (~ RPAREN )*
				try { dbg.enterSubRule(409);

				loop409:
				while (true) {
					int alt409=2;
					try { dbg.enterDecision(409, decisionCanBacktrack[409]);

					int LA409_0 = input.LA(1);
					if ( ((LA409_0 >= A && LA409_0 <= RIGHTTOP_SYM)||(LA409_0 >= S && LA409_0 <= Z)) ) {
						alt409=1;
					}

					} finally {dbg.exitDecision(409);}

					switch (alt409) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(415,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop409;
					}
				}
				} finally {dbg.exitSubRule(409);}
				dbg.location(415,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css3734); if (state.failed) return;dbg.location(415,70);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(410);

				loop410:
				while (true) {
					int alt410=2;
					try { dbg.enterDecision(410, decisionCanBacktrack[410]);

					int LA410_0 = input.LA(1);
					if ( ((LA410_0 >= A && LA410_0 <= L)||(LA410_0 >= LBRACKET && LA410_0 <= SASS_WHILE)||(LA410_0 >= SOLIDUS && LA410_0 <= Z)) ) {
						alt410=1;
					}

					} finally {dbg.exitDecision(410);}

					switch (alt410) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(415,70);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop410;
					}
				}
				} finally {dbg.exitSubRule(410);}
				dbg.location(415,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css3744); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(417,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css3762);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(417,22);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:22: ( ( ws )? IMPORTANT_SYM )?
		int alt413=2;
		try { dbg.enterSubRule(413);
		try { dbg.enterDecision(413, decisionCanBacktrack[413]);

		try {
			isCyclicDecision = true;
			alt413 = dfa413.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(413);}

		switch (alt413) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(417,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ( ws )?
				int alt412=2;
				try { dbg.enterSubRule(412);
				try { dbg.enterDecision(412, decisionCanBacktrack[412]);

				int LA412_0 = input.LA(1);
				if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
					alt412=1;
				}
				} finally {dbg.exitDecision(412);}

				switch (alt412) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:23: ws
						{
						dbg.location(417,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css3765);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(412);}
				dbg.location(417,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(413);}
		dbg.location(417,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:43: ( ws )?
		int alt414=2;
		try { dbg.enterSubRule(414);
		try { dbg.enterDecision(414, decisionCanBacktrack[414]);

		int LA414_0 = input.LA(1);
		if ( (LA414_0==COMMENT||LA414_0==NL||LA414_0==WS) ) {
			alt414=1;
		}
		} finally {dbg.exitDecision(414);}

		switch (alt414) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:43: ws
				{
				dbg.location(417,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css3772);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(414);}
		dbg.location(417,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css3775); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:8: cp_mixin_call
		{
		dbg.location(418,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css3798);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:6: ( (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+ COLON (~ ( SEMI | LBRACE | RBRACE ) )+ SEMI
		{
		dbg.location(419,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:8: (~ ( LBRACE | SEMI | RBRACE | COLON ) )+
		int cnt415=0;
		try { dbg.enterSubRule(415);

		loop415:
		while (true) {
			int alt415=2;
			try { dbg.enterDecision(415, decisionCanBacktrack[415]);

			int LA415_0 = input.LA(1);
			if ( ((LA415_0 >= A && LA415_0 <= CHARSET_SYM)||(LA415_0 >= COMMA && LA415_0 <= L)||(LA415_0 >= LBRACKET && LA415_0 <= R)||(LA415_0 >= RBRACKET && LA415_0 <= SASS_WHILE)||(LA415_0 >= SOLIDUS && LA415_0 <= Z)) ) {
				alt415=1;
			}

			} finally {dbg.exitDecision(415);}

			switch (alt415) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(419,8);
				if ( (input.LA(1) >= A && input.LA(1) <= CHARSET_SYM)||(input.LA(1) >= COMMA && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt415 >= 1 ) break loop415;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(415, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt415++;
		}
		} finally {dbg.exitSubRule(415);}
		dbg.location(419,37);
		match(input,COLON,FOLLOW_COLON_in_synpred8_Css3833); if (state.failed) return;dbg.location(419,43);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:43: (~ ( SEMI | LBRACE | RBRACE ) )+
		int cnt416=0;
		try { dbg.enterSubRule(416);

		loop416:
		while (true) {
			int alt416=2;
			try { dbg.enterDecision(416, decisionCanBacktrack[416]);

			int LA416_0 = input.LA(1);
			if ( ((LA416_0 >= A && LA416_0 <= L)||(LA416_0 >= LBRACKET && LA416_0 <= R)||(LA416_0 >= RBRACKET && LA416_0 <= SASS_WHILE)||(LA416_0 >= SOLIDUS && LA416_0 <= Z)) ) {
				alt416=1;
			}

			} finally {dbg.exitDecision(416);}

			switch (alt416) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(419,43);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				if ( cnt416 >= 1 ) break loop416;
				if (state.backtracking>0) {state.failed=true; return;}
				EarlyExitException eee = new EarlyExitException(416, input);
				dbg.recognitionException(eee);

				throw eee;
			}
			cnt416++;
		}
		} finally {dbg.exitSubRule(416);}
		dbg.location(419,66);
		match(input,SEMI,FOLLOW_SEMI_in_synpred8_Css3845); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:18: ( ws )? COMMA
		{
		dbg.location(433,18);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:18: ( ws )?
		int alt417=2;
		try { dbg.enterSubRule(417);
		try { dbg.enterDecision(417, decisionCanBacktrack[417]);

		int LA417_0 = input.LA(1);
		if ( (LA417_0==COMMENT||LA417_0==NL||LA417_0==WS) ) {
			alt417=1;
		}
		} finally {dbg.exitDecision(417);}

		switch (alt417) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:18: ws
				{
				dbg.location(433,18);
				pushFollow(FOLLOW_ws_in_synpred9_Css3953);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(417);}
		dbg.location(433,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred9_Css3956); if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:23: ( ws )? SEMI
		{
		dbg.location(473,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:23: ( ws )?
		int alt418=2;
		try { dbg.enterSubRule(418);
		try { dbg.enterDecision(418, decisionCanBacktrack[418]);

		int LA418_0 = input.LA(1);
		if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
			alt418=1;
		}
		} finally {dbg.exitDecision(418);}

		switch (alt418) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:23: ws
				{
				dbg.location(473,23);
				pushFollow(FOLLOW_ws_in_synpred10_Css31252);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(418);}
		dbg.location(473,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred10_Css31255); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt423=2;
		try { dbg.enterDecision(423, decisionCanBacktrack[423]);

		int LA423_0 = input.LA(1);
		if ( (LA423_0==SASS_MIXIN) ) {
			alt423=1;
		}
		else if ( (LA423_0==DOT||LA423_0==HASH) ) {
			alt423=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 423, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(423);}

		switch (alt423) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:10: SASS_MIXIN
				{
				dbg.location(481,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred11_Css31330); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(481,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(481,24);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:24: ( ( DOT IDENT ) | HASH )
				int alt419=2;
				try { dbg.enterSubRule(419);
				try { dbg.enterDecision(419, decisionCanBacktrack[419]);

				int LA419_0 = input.LA(1);
				if ( (LA419_0==DOT) ) {
					alt419=1;
				}
				else if ( (LA419_0==HASH) ) {
					alt419=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 419, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(419);}

				switch (alt419) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:25: ( DOT IDENT )
						{
						dbg.location(481,25);
						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:26: DOT IDENT
						{
						dbg.location(481,26);
						match(input,DOT,FOLLOW_DOT_in_synpred11_Css31337); if (state.failed) return;dbg.location(481,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred11_Css31339); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:39: HASH
						{
						dbg.location(481,39);
						match(input,HASH,FOLLOW_HASH_in_synpred11_Css31344); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(419);}
				dbg.location(481,45);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:45: ( ws )?
				int alt420=2;
				try { dbg.enterSubRule(420);
				try { dbg.enterDecision(420, decisionCanBacktrack[420]);

				int LA420_0 = input.LA(1);
				if ( (LA420_0==COMMENT||LA420_0==NL||LA420_0==WS) ) {
					alt420=1;
				}
				} finally {dbg.exitDecision(420);}

				switch (alt420) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:45: ws
						{
						dbg.location(481,45);
						pushFollow(FOLLOW_ws_in_synpred11_Css31347);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(420);}
				dbg.location(481,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred11_Css31350); if (state.failed) return;dbg.location(481,56);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:56: (~ RPAREN )*
				try { dbg.enterSubRule(421);

				loop421:
				while (true) {
					int alt421=2;
					try { dbg.enterDecision(421, decisionCanBacktrack[421]);

					int LA421_0 = input.LA(1);
					if ( ((LA421_0 >= A && LA421_0 <= RIGHTTOP_SYM)||(LA421_0 >= S && LA421_0 <= Z)) ) {
						alt421=1;
					}

					} finally {dbg.exitDecision(421);}

					switch (alt421) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(481,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop421;
					}
				}
				} finally {dbg.exitSubRule(421);}
				dbg.location(481,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred11_Css31358); if (state.failed) return;dbg.location(481,74);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(422);

				loop422:
				while (true) {
					int alt422=2;
					try { dbg.enterDecision(422, decisionCanBacktrack[422]);

					int LA422_0 = input.LA(1);
					if ( ((LA422_0 >= A && LA422_0 <= L)||(LA422_0 >= LBRACKET && LA422_0 <= R)||(LA422_0 >= RBRACKET && LA422_0 <= SASS_WHILE)||(LA422_0 >= SOLIDUS && LA422_0 <= Z)) ) {
						alt422=1;
					}

					} finally {dbg.exitDecision(422);}

					switch (alt422) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(481,74);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop422;
					}
				}
				} finally {dbg.exitSubRule(422);}
				dbg.location(481,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred11_Css31370); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(483,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred12_Css31396);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(483,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:26: ( ws )?
		int alt424=2;
		try { dbg.enterSubRule(424);
		try { dbg.enterDecision(424, decisionCanBacktrack[424]);

		int LA424_0 = input.LA(1);
		if ( (LA424_0==COMMENT||LA424_0==NL||LA424_0==WS) ) {
			alt424=1;
		}
		} finally {dbg.exitDecision(424);}

		switch (alt424) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:26: ws
				{
				dbg.location(483,26);
				pushFollow(FOLLOW_ws_in_synpred12_Css31398);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(424);}
		dbg.location(483,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred12_Css31401); if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:12: cp_mixin_call
		{
		dbg.location(484,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred13_Css31420);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:12: cp_variable ( ws )? COLON
		{
		dbg.location(486,12);
		pushFollow(FOLLOW_cp_variable_in_synpred14_Css31448);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(486,24);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:24: ( ws )?
		int alt425=2;
		try { dbg.enterSubRule(425);
		try { dbg.enterDecision(425, decisionCanBacktrack[425]);

		int LA425_0 = input.LA(1);
		if ( (LA425_0==COMMENT||LA425_0==NL||LA425_0==WS) ) {
			alt425=1;
		}
		} finally {dbg.exitDecision(425);}

		switch (alt425) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:24: ws
				{
				dbg.location(486,24);
				pushFollow(FOLLOW_ws_in_synpred14_Css31450);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(425);}
		dbg.location(486,28);
		match(input,COLON,FOLLOW_COLON_in_synpred14_Css31453); if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:12: sass_map
		{
		dbg.location(487,12);
		pushFollow(FOLLOW_sass_map_in_synpred15_Css31470);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:28: ( ws )? COMMA
		{
		dbg.location(650,28);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:28: ( ws )?
		int alt426=2;
		try { dbg.enterSubRule(426);
		try { dbg.enterDecision(426, decisionCanBacktrack[426]);

		int LA426_0 = input.LA(1);
		if ( (LA426_0==COMMENT||LA426_0==NL||LA426_0==WS) ) {
			alt426=1;
		}
		} finally {dbg.exitDecision(426);}

		switch (alt426) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:28: ws
				{
				dbg.location(650,28);
				pushFollow(FOLLOW_ws_in_synpred16_Css32671);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(426);}
		dbg.location(650,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred16_Css32674); if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:6: cp_variable_declaration
		{
		dbg.location(686,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred17_Css33043);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:8: sass_map
		{
		dbg.location(687,8);
		pushFollow(FOLLOW_sass_map_in_synpred18_Css33055);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:688:8: sass_nested_properties
		{
		dbg.location(688,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred19_Css33068);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(689,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt432=3;
		try { dbg.enterSubRule(432);
		try { dbg.enterDecision(432, decisionCanBacktrack[432]);

		try {
			isCyclicDecision = true;
			alt432 = dfa432.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(432);}

		switch (alt432) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(689,9);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(689,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred20_Css33082); if (state.failed) return;dbg.location(689,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:23: ( ws selectorsGroup )?
				int alt427=2;
				try { dbg.enterSubRule(427);
				try { dbg.enterDecision(427, decisionCanBacktrack[427]);

				try {
					isCyclicDecision = true;
					alt427 = dfa427.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(427);}

				switch (alt427) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:24: ws selectorsGroup
						{
						dbg.location(689,24);
						pushFollow(FOLLOW_ws_in_synpred20_Css33085);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(689,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred20_Css33087);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(427);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(689,48);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(689,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred20_Css33096); if (state.failed) return;dbg.location(689,62);
				pushFollow(FOLLOW_ws_in_synpred20_Css33098);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(689,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred20_Css33100); if (state.failed) return;dbg.location(689,72);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:72: ( ws )?
				int alt428=2;
				try { dbg.enterSubRule(428);
				try { dbg.enterDecision(428, decisionCanBacktrack[428]);

				int LA428_0 = input.LA(1);
				if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
					alt428=1;
				}
				} finally {dbg.exitDecision(428);}

				switch (alt428) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:72: ws
						{
						dbg.location(689,72);
						pushFollow(FOLLOW_ws_in_synpred20_Css33102);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(428);}
				dbg.location(689,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred20_Css33105); if (state.failed) return;dbg.location(689,82);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:82: ( ws )?
				int alt429=2;
				try { dbg.enterSubRule(429);
				try { dbg.enterDecision(429, decisionCanBacktrack[429]);

				int LA429_0 = input.LA(1);
				if ( (LA429_0==COMMENT||LA429_0==NL||LA429_0==WS) ) {
					alt429=1;
				}
				} finally {dbg.exitDecision(429);}

				switch (alt429) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:82: ws
						{
						dbg.location(689,82);
						pushFollow(FOLLOW_ws_in_synpred20_Css33107);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(429);}
				dbg.location(689,86);
				match(input,COLON,FOLLOW_COLON_in_synpred20_Css33110); if (state.failed) return;dbg.location(689,92);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:92: ( ws )?
				int alt430=2;
				try { dbg.enterSubRule(430);
				try { dbg.enterDecision(430, decisionCanBacktrack[430]);

				int LA430_0 = input.LA(1);
				if ( (LA430_0==COMMENT||LA430_0==NL||LA430_0==WS) ) {
					alt430=1;
				}
				} finally {dbg.exitDecision(430);}

				switch (alt430) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:92: ws
						{
						dbg.location(689,92);
						pushFollow(FOLLOW_ws_in_synpred20_Css33112);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(430);}
				dbg.location(689,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred20_Css33115); if (state.failed) return;dbg.location(689,102);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:102: ( ws )?
				int alt431=2;
				try { dbg.enterSubRule(431);
				try { dbg.enterDecision(431, decisionCanBacktrack[431]);

				int LA431_0 = input.LA(1);
				if ( (LA431_0==COMMENT||LA431_0==NL||LA431_0==WS) ) {
					alt431=1;
				}
				} finally {dbg.exitDecision(431);}

				switch (alt431) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:102: ws
						{
						dbg.location(689,102);
						pushFollow(FOLLOW_ws_in_synpred20_Css33117);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(431);}
				dbg.location(689,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred20_Css33120); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:116: selectorsGroup
				{
				dbg.location(689,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred20_Css33125);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(432);}
		dbg.location(689,132);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:132: ( ws )?
		int alt433=2;
		try { dbg.enterSubRule(433);
		try { dbg.enterDecision(433, decisionCanBacktrack[433]);

		int LA433_0 = input.LA(1);
		if ( (LA433_0==COMMENT||LA433_0==NL||LA433_0==WS) ) {
			alt433=1;
		}
		} finally {dbg.exitDecision(433);}

		switch (alt433) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:132: ws
				{
				dbg.location(689,132);
				pushFollow(FOLLOW_ws_in_synpred20_Css33128);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(433);}
		dbg.location(689,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred20_Css33131); if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:8: propertyDeclaration
		{
		dbg.location(690,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred21_Css33143);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(692,8);
		pushFollow(FOLLOW_property_in_synpred22_Css33160);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(692,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:17: ( ws )?
		int alt434=2;
		try { dbg.enterSubRule(434);
		try { dbg.enterDecision(434, decisionCanBacktrack[434]);

		int LA434_0 = input.LA(1);
		if ( (LA434_0==COMMENT||LA434_0==NL||LA434_0==WS) ) {
			alt434=1;
		}
		} finally {dbg.exitDecision(434);}

		switch (alt434) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:17: ws
				{
				dbg.location(692,17);
				pushFollow(FOLLOW_ws_in_synpred22_Css33162);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(434);}
		dbg.location(692,21);
		match(input,COLON,FOLLOW_COLON_in_synpred22_Css33165); if (state.failed) return;dbg.location(692,27);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(435);

		loop435:
		while (true) {
			int alt435=2;
			try { dbg.enterDecision(435, decisionCanBacktrack[435]);

			int LA435_0 = input.LA(1);
			if ( ((LA435_0 >= A && LA435_0 <= L)||(LA435_0 >= LBRACKET && LA435_0 <= R)||(LA435_0 >= RBRACKET && LA435_0 <= SASS_WHILE)||(LA435_0 >= SOLIDUS && LA435_0 <= Z)) ) {
				alt435=1;
			}

			} finally {dbg.exitDecision(435);}

			switch (alt435) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(692,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop435;
			}
		}
		} finally {dbg.exitSubRule(435);}
		dbg.location(692,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:693:8: cp_mixin_declaration
		{
		dbg.location(693,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred23_Css33194);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:8: cp_mixin_call
		{
		dbg.location(694,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred24_Css33206);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:8: cp_mixin_call
		{
		dbg.location(695,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred25_Css33227);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:83: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:84: ( ws )? esPred
		{
		dbg.location(728,84);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:84: ( ws )?
		int alt436=2;
		try { dbg.enterSubRule(436);
		try { dbg.enterDecision(436, decisionCanBacktrack[436]);

		int LA436_0 = input.LA(1);
		if ( (LA436_0==COMMENT||LA436_0==NL||LA436_0==WS) ) {
			alt436=1;
		}
		} finally {dbg.exitDecision(436);}

		switch (alt436) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:84: ws
				{
				dbg.location(728,84);
				pushFollow(FOLLOW_ws_in_synpred26_Css33510);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(436);}
		dbg.location(728,88);
		pushFollow(FOLLOW_esPred_in_synpred26_Css33513);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:5: typeSelector
		{
		dbg.location(729,5);
		pushFollow(FOLLOW_typeSelector_in_synpred27_Css33546);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:35: ( ws )? esPred
		{
		dbg.location(729,35);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:35: ( ws )?
		int alt437=2;
		try { dbg.enterSubRule(437);
		try { dbg.enterDecision(437, decisionCanBacktrack[437]);

		int LA437_0 = input.LA(1);
		if ( (LA437_0==COMMENT||LA437_0==NL||LA437_0==WS) ) {
			alt437=1;
		}
		} finally {dbg.exitDecision(437);}

		switch (alt437) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:729:35: ws
				{
				dbg.location(729,35);
				pushFollow(FOLLOW_ws_in_synpred28_Css33553);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(437);}
		dbg.location(729,39);
		pushFollow(FOLLOW_esPred_in_synpred28_Css33556);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(743,8);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:8: ( IDENT | STAR )?
		int alt438=2;
		try { dbg.enterSubRule(438);
		try { dbg.enterDecision(438, decisionCanBacktrack[438]);

		int LA438_0 = input.LA(1);
		if ( (LA438_0==IDENT||LA438_0==STAR) ) {
			alt438=1;
		}
		} finally {dbg.exitDecision(438);}

		switch (alt438) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(743,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(438);}
		dbg.location(743,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred29_Css33667); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(924,15);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt441=3;
		try { dbg.enterSubRule(441);
		try { dbg.enterDecision(441, decisionCanBacktrack[441]);

		try {
			isCyclicDecision = true;
			alt441 = dfa441.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(441);}

		switch (alt441) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:17: ws
				{
				dbg.location(924,17);
				pushFollow(FOLLOW_ws_in_synpred30_Css35193);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(924,22);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:23: ( ws )? operator ( ws )?
				{
				dbg.location(924,23);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:23: ( ws )?
				int alt439=2;
				try { dbg.enterSubRule(439);
				try { dbg.enterDecision(439, decisionCanBacktrack[439]);

				int LA439_0 = input.LA(1);
				if ( (LA439_0==COMMENT||LA439_0==NL||LA439_0==WS) ) {
					alt439=1;
				}
				} finally {dbg.exitDecision(439);}

				switch (alt439) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:23: ws
						{
						dbg.location(924,23);
						pushFollow(FOLLOW_ws_in_synpred30_Css35198);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(439);}
				dbg.location(924,27);
				pushFollow(FOLLOW_operator_in_synpred30_Css35201);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(924,36);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:36: ( ws )?
				int alt440=2;
				try { dbg.enterSubRule(440);
				try { dbg.enterDecision(440, decisionCanBacktrack[440]);

				int LA440_0 = input.LA(1);
				if ( (LA440_0==COMMENT||LA440_0==NL||LA440_0==WS) ) {
					alt440=1;
				}
				} finally {dbg.exitDecision(440);}

				switch (alt440) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:36: ws
						{
						dbg.location(924,36);
						pushFollow(FOLLOW_ws_in_synpred30_Css35203);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(440);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(441);}
		dbg.location(924,58);
		pushFollow(FOLLOW_term_in_synpred30_Css35212);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:10: functionName ( ws )? LPAREN
		{
		dbg.location(931,10);
		pushFollow(FOLLOW_functionName_in_synpred31_Css35285);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(931,23);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:23: ( ws )?
		int alt442=2;
		try { dbg.enterSubRule(442);
		try { dbg.enterDecision(442, decisionCanBacktrack[442]);

		int LA442_0 = input.LA(1);
		if ( (LA442_0==COMMENT||LA442_0==NL||LA442_0==WS) ) {
			alt442=1;
		}
		} finally {dbg.exitDecision(442);}

		switch (alt442) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:23: ws
				{
				dbg.location(931,23);
				pushFollow(FOLLOW_ws_in_synpred31_Css35287);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(442);}
		dbg.location(931,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred31_Css35290); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(994,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred32_Css35843);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(994,26);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:26: ( ws )?
		int alt443=2;
		try { dbg.enterSubRule(443);
		try { dbg.enterDecision(443, decisionCanBacktrack[443]);

		int LA443_0 = input.LA(1);
		if ( (LA443_0==COMMENT||LA443_0==NL||LA443_0==WS) ) {
			alt443=1;
		}
		} finally {dbg.exitDecision(443);}

		switch (alt443) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:26: ws
				{
				dbg.location(994,26);
				pushFollow(FOLLOW_ws_in_synpred32_Css35845);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(443);}
		dbg.location(994,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:12: cp_expression
		{
		dbg.location(995,12);
		pushFollow(FOLLOW_cp_expression_in_synpred33_Css35883);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1007,21);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt446=3;
		try { dbg.enterSubRule(446);
		try { dbg.enterDecision(446, decisionCanBacktrack[446]);

		try {
			isCyclicDecision = true;
			alt446 = dfa446.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(446);}

		switch (alt446) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:23: ws
				{
				dbg.location(1007,23);
				pushFollow(FOLLOW_ws_in_synpred34_Css35977);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1007,28);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1007,29);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:29: ( ws )?
				int alt444=2;
				try { dbg.enterSubRule(444);
				try { dbg.enterDecision(444, decisionCanBacktrack[444]);

				int LA444_0 = input.LA(1);
				if ( (LA444_0==COMMENT||LA444_0==NL||LA444_0==WS) ) {
					alt444=1;
				}
				} finally {dbg.exitDecision(444);}

				switch (alt444) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:29: ws
						{
						dbg.location(1007,29);
						pushFollow(FOLLOW_ws_in_synpred34_Css35982);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(444);}
				dbg.location(1007,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred34_Css35985); if (state.failed) return;dbg.location(1007,41);
				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:41: ( ws )?
				int alt445=2;
				try { dbg.enterSubRule(445);
				try { dbg.enterDecision(445, decisionCanBacktrack[445]);

				int LA445_0 = input.LA(1);
				if ( (LA445_0==COMMENT||LA445_0==NL||LA445_0==WS) ) {
					alt445=1;
				}
				} finally {dbg.exitDecision(445);}

				switch (alt445) {
					case 1 :
						dbg.enterAlt(1);

						// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:41: ws
						{
						dbg.location(1007,41);
						pushFollow(FOLLOW_ws_in_synpred34_Css35987);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(445);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(446);}
		dbg.location(1007,63);
		pushFollow(FOLLOW_term_in_synpred34_Css35996);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1042,7);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:7: ( ws )?
		int alt447=2;
		try { dbg.enterSubRule(447);
		try { dbg.enterDecision(447, decisionCanBacktrack[447]);

		int LA447_0 = input.LA(1);
		if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
			alt447=1;
		}
		} finally {dbg.exitDecision(447);}

		switch (alt447) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:7: ws
				{
				dbg.location(1042,7);
				pushFollow(FOLLOW_ws_in_synpred36_Css36436);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(447);}
		dbg.location(1042,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred36_Css36439); if (state.failed) return;dbg.location(1042,17);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:17: ( ws )?
		int alt448=2;
		try { dbg.enterSubRule(448);
		try { dbg.enterDecision(448, decisionCanBacktrack[448]);

		int LA448_0 = input.LA(1);
		if ( (LA448_0==COMMENT||LA448_0==NL||LA448_0==WS) ) {
			alt448=1;
		}
		} finally {dbg.exitDecision(448);}

		switch (alt448) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1042:17: ws
				{
				dbg.location(1042,17);
				pushFollow(FOLLOW_ws_in_synpred36_Css36441);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(448);}
		dbg.location(1042,21);
		pushFollow(FOLLOW_cp_expression_in_synpred36_Css36444);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:8: cp_expression_atom
		{
		dbg.location(1058,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred37_Css36511);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:10: ( ws )? cp_expression_operator
		{
		dbg.location(1060,10);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:10: ( ws )?
		int alt449=2;
		try { dbg.enterSubRule(449);
		try { dbg.enterDecision(449, decisionCanBacktrack[449]);

		int LA449_0 = input.LA(1);
		if ( (LA449_0==COMMENT||LA449_0==NL||LA449_0==WS) ) {
			alt449=1;
		}
		} finally {dbg.exitDecision(449);}

		switch (alt449) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:10: ws
				{
				dbg.location(1060,10);
				pushFollow(FOLLOW_ws_in_synpred38_Css36534);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(449);}
		dbg.location(1060,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred38_Css36537);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:12: ( ws )? cp_expression_atom
		{
		dbg.location(1061,12);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:12: ( ws )?
		int alt450=2;
		try { dbg.enterSubRule(450);
		try { dbg.enterDecision(450, decisionCanBacktrack[450]);

		int LA450_0 = input.LA(1);
		if ( (LA450_0==COMMENT||LA450_0==NL||LA450_0==WS) ) {
			alt450=1;
		}
		} finally {dbg.exitDecision(450);}

		switch (alt450) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:12: ws
				{
				dbg.location(1061,12);
				pushFollow(FOLLOW_ws_in_synpred39_Css36563);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(450);}
		dbg.location(1061,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred39_Css36566);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:14: cp_math_expression
		{
		dbg.location(1075,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred40_Css36706);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1102,14);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:14: ( ws )?
		int alt451=2;
		try { dbg.enterSubRule(451);
		try { dbg.enterDecision(451, decisionCanBacktrack[451]);

		int LA451_0 = input.LA(1);
		if ( (LA451_0==COMMENT||LA451_0==NL||LA451_0==WS) ) {
			alt451=1;
		}
		} finally {dbg.exitDecision(451);}

		switch (alt451) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1102:14: ws
				{
				dbg.location(1102,14);
				pushFollow(FOLLOW_ws_in_synpred41_Css36839);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(451);}
		dbg.location(1102,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:77: ( pseudo )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:78: pseudo
		{
		dbg.location(1134,78);
		pushFollow(FOLLOW_pseudo_in_synpred42_Css37131);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:96: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:97: ( ws )? LPAREN
		{
		dbg.location(1134,97);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:97: ( ws )?
		int alt452=2;
		try { dbg.enterSubRule(452);
		try { dbg.enterDecision(452, decisionCanBacktrack[452]);

		int LA452_0 = input.LA(1);
		if ( (LA452_0==COMMENT||LA452_0==NL||LA452_0==WS) ) {
			alt452=1;
		}
		} finally {dbg.exitDecision(452);}

		switch (alt452) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:97: ws
				{
				dbg.location(1134,97);
				pushFollow(FOLLOW_ws_in_synpred43_Css37139);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(452);}
		dbg.location(1134,101);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred43_Css37142); if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1143:26: webkitKeyframeSelectors
		{
		dbg.location(1143,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred44_Css37258);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:20: ( ws )? COMMA
		{
		dbg.location(1321,20);
		// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:20: ( ws )?
		int alt453=2;
		try { dbg.enterSubRule(453);
		try { dbg.enterDecision(453, decisionCanBacktrack[453]);

		int LA453_0 = input.LA(1);
		if ( (LA453_0==COMMENT||LA453_0==NL||LA453_0==WS) ) {
			alt453=1;
		}
		} finally {dbg.exitDecision(453);}

		switch (alt453) {
			case 1 :
				dbg.enterAlt(1);

				// /home/mito/nb/web-main/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:20: ws
				{
				dbg.location(1321,20);
				pushFollow(FOLLOW_ws_in_synpred45_Css38457);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(453);}
		dbg.location(1321,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred45_Css38460); if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// Delegated rules

	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA24 dfa24 = new DFA24(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA46 dfa46 = new DFA46(this);
	protected DFA50 dfa50 = new DFA50(this);
	protected DFA55 dfa55 = new DFA55(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA63 dfa63 = new DFA63(this);
	protected DFA71 dfa71 = new DFA71(this);
	protected DFA104 dfa104 = new DFA104(this);
	protected DFA111 dfa111 = new DFA111(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA135 dfa135 = new DFA135(this);
	protected DFA137 dfa137 = new DFA137(this);
	protected DFA145 dfa145 = new DFA145(this);
	protected DFA151 dfa151 = new DFA151(this);
	protected DFA146 dfa146 = new DFA146(this);
	protected DFA168 dfa168 = new DFA168(this);
	protected DFA161 dfa161 = new DFA161(this);
	protected DFA160 dfa160 = new DFA160(this);
	protected DFA165 dfa165 = new DFA165(this);
	protected DFA170 dfa170 = new DFA170(this);
	protected DFA172 dfa172 = new DFA172(this);
	protected DFA176 dfa176 = new DFA176(this);
	protected DFA184 dfa184 = new DFA184(this);
	protected DFA183 dfa183 = new DFA183(this);
	protected DFA182 dfa182 = new DFA182(this);
	protected DFA188 dfa188 = new DFA188(this);
	protected DFA191 dfa191 = new DFA191(this);
	protected DFA213 dfa213 = new DFA213(this);
	protected DFA225 dfa225 = new DFA225(this);
	protected DFA235 dfa235 = new DFA235(this);
	protected DFA234 dfa234 = new DFA234(this);
	protected DFA247 dfa247 = new DFA247(this);
	protected DFA257 dfa257 = new DFA257(this);
	protected DFA256 dfa256 = new DFA256(this);
	protected DFA266 dfa266 = new DFA266(this);
	protected DFA271 dfa271 = new DFA271(this);
	protected DFA277 dfa277 = new DFA277(this);
	protected DFA291 dfa291 = new DFA291(this);
	protected DFA296 dfa296 = new DFA296(this);
	protected DFA303 dfa303 = new DFA303(this);
	protected DFA307 dfa307 = new DFA307(this);
	protected DFA318 dfa318 = new DFA318(this);
	protected DFA320 dfa320 = new DFA320(this);
	protected DFA332 dfa332 = new DFA332(this);
	protected DFA335 dfa335 = new DFA335(this);
	protected DFA351 dfa351 = new DFA351(this);
	protected DFA363 dfa363 = new DFA363(this);
	protected DFA375 dfa375 = new DFA375(this);
	protected DFA380 dfa380 = new DFA380(this);
	protected DFA388 dfa388 = new DFA388(this);
	protected DFA387 dfa387 = new DFA387(this);
	protected DFA393 dfa393 = new DFA393(this);
	protected DFA413 dfa413 = new DFA413(this);
	protected DFA432 dfa432 = new DFA432(this);
	protected DFA427 dfa427 = new DFA427(this);
	protected DFA441 dfa441 = new DFA441(this);
	protected DFA446 dfa446 = new DFA446(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff"+
			"\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\73\uffff\1\3\60\uffff\1\4\17\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "347:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "349:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\3\uffff\1\1\5\uffff\1\1\1\uffff\1\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\2\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff"+
			"\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff\3\1\2\uffff"+
			"\3\1\1\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\uffff\5\1\1\uffff\1\1\2\uffff"+
			"\1\1\1\uffff\5\1\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			"\1\1\1\uffff\1\3\34\uffff\1\4\36\uffff\1\3\60\uffff\1\4\12\uffff\1\4"+
			"\4\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 356:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA32_eotS =
		"\10\uffff";
	static final String DFA32_eofS =
		"\10\uffff";
	static final String DFA32_minS =
		"\1\64\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_maxS =
		"\1\64\2\u0092\1\0\1\uffff\1\0\2\uffff";
	static final String DFA32_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA32_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA32_transitionS = {
			"\1\1",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\3\12\uffff\1\3\4\uffff\1\2",
			"\1\2\60\uffff\1\4\12\uffff\1\2\60\uffff\1\5\12\uffff\1\5\4\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "384:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA32_3 = input.LA(1);
						 
						int index32_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_3);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA32_5 = input.LA(1);
						 
						int index32_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index32_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 32, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA24_eotS =
		"\4\uffff";
	static final String DFA24_eofS =
		"\2\2\2\uffff";
	static final String DFA24_minS =
		"\2\6\2\uffff";
	static final String DFA24_maxS =
		"\2\u0092\2\uffff";
	static final String DFA24_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA24_specialS =
		"\4\uffff}>";
	static final String[] DFA24_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\4\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2"+
			"\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA24_eot = DFA.unpackEncodedString(DFA24_eotS);
	static final short[] DFA24_eof = DFA.unpackEncodedString(DFA24_eofS);
	static final char[] DFA24_min = DFA.unpackEncodedStringToUnsignedChars(DFA24_minS);
	static final char[] DFA24_max = DFA.unpackEncodedStringToUnsignedChars(DFA24_maxS);
	static final short[] DFA24_accept = DFA.unpackEncodedString(DFA24_acceptS);
	static final short[] DFA24_special = DFA.unpackEncodedString(DFA24_specialS);
	static final short[][] DFA24_transition;

	static {
		int numStates = DFA24_transitionS.length;
		DFA24_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA24_transition[i] = DFA.unpackEncodedString(DFA24_transitionS[i]);
		}
	}

	protected class DFA24 extends DFA {

		public DFA24(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 24;
			this.eot = DFA24_eot;
			this.eof = DFA24_eof;
			this.min = DFA24_min;
			this.max = DFA24_max;
			this.accept = DFA24_accept;
			this.special = DFA24_special;
			this.transition = DFA24_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 389:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\6\uffff";
	static final String DFA38_eofS =
		"\6\uffff";
	static final String DFA38_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA38_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA38_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA38_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "406:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA38_2 = input.LA(1);
						 
						int index38_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA38_4 = input.LA(1);
						 
						int index38_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index38_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 38, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA44_eotS =
		"\4\uffff";
	static final String DFA44_eofS =
		"\4\uffff";
	static final String DFA44_minS =
		"\2\6\2\uffff";
	static final String DFA44_maxS =
		"\2\u0092\2\uffff";
	static final String DFA44_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\4\uffff}>";
	static final String[] DFA44_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "417:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA46_eotS =
		"\4\uffff";
	static final String DFA46_eofS =
		"\4\uffff";
	static final String DFA46_minS =
		"\2\6\2\uffff";
	static final String DFA46_maxS =
		"\2\u0092\2\uffff";
	static final String DFA46_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA46_specialS =
		"\4\uffff}>";
	static final String[] DFA46_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
	static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
	static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
	static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
	static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
	static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
	static final short[][] DFA46_transition;

	static {
		int numStates = DFA46_transitionS.length;
		DFA46_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
		}
	}

	protected class DFA46 extends DFA {

		public DFA46(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 46;
			this.eot = DFA46_eot;
			this.eof = DFA46_eof;
			this.min = DFA46_min;
			this.max = DFA46_max;
			this.accept = DFA46_accept;
			this.special = DFA46_special;
			this.transition = DFA46_transition;
		}
		@Override
		public String getDescription() {
			return "418:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA50_eotS =
		"\4\uffff";
	static final String DFA50_eofS =
		"\2\2\2\uffff";
	static final String DFA50_minS =
		"\2\6\2\uffff";
	static final String DFA50_maxS =
		"\2\u0092\2\uffff";
	static final String DFA50_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA50_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA50_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 433:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA50_1 = input.LA(1);
						 
						int index50_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_1==EOF||(LA50_1 >= AT_IDENT && LA50_1 <= AT_SIGN)||(LA50_1 >= BOTTOMCENTER_SYM && LA50_1 <= BOTTOMRIGHT_SYM)||(LA50_1 >= CHARSET_SYM && LA50_1 <= COLON)||LA50_1==COUNTER_STYLE_SYM||LA50_1==DCOLON||LA50_1==DOT||LA50_1==FONT_FACE_SYM||(LA50_1 >= GEN && LA50_1 <= GREATER)||(LA50_1 >= HASH && LA50_1 <= HASH_SYMBOL)||LA50_1==IDENT||LA50_1==IMPORT_SYM||(LA50_1 >= LBRACE && LA50_1 <= LEFTTOP_SYM)||LA50_1==LESS_AND||(LA50_1 >= MEDIA_SYM && LA50_1 <= MOZ_DOCUMENT_SYM)||LA50_1==NAMESPACE_SYM||LA50_1==PAGE_SYM||(LA50_1 >= PIPE && LA50_1 <= PLUS)||LA50_1==RBRACE||(LA50_1 >= RIGHTBOTTOM_SYM && LA50_1 <= RIGHTTOP_SYM)||(LA50_1 >= SASS_AT_ROOT && LA50_1 <= SASS_DEBUG)||(LA50_1 >= SASS_EACH && LA50_1 <= SASS_ELSE)||(LA50_1 >= SASS_ERROR && LA50_1 <= SASS_FUNCTION)||(LA50_1 >= SASS_IF && LA50_1 <= SASS_MIXIN)||(LA50_1 >= SASS_RETURN && LA50_1 <= SEMI)||LA50_1==STAR||LA50_1==TILDE||(LA50_1 >= TOPCENTER_SYM && LA50_1 <= TOPRIGHT_SYM)||LA50_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_1==COMMENT||LA50_1==NL||LA50_1==WS) ) {s = 1;}
						else if ( (LA50_1==COMMA) && (synpred9_Css3())) {s = 3;}
						 
						input.seek(index50_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA50_0 = input.LA(1);
						 
						int index50_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {s = 1;}
						else if ( (LA50_0==EOF||(LA50_0 >= AT_IDENT && LA50_0 <= AT_SIGN)||(LA50_0 >= BOTTOMCENTER_SYM && LA50_0 <= BOTTOMRIGHT_SYM)||(LA50_0 >= CHARSET_SYM && LA50_0 <= COLON)||LA50_0==COUNTER_STYLE_SYM||LA50_0==DCOLON||LA50_0==DOT||LA50_0==FONT_FACE_SYM||(LA50_0 >= GEN && LA50_0 <= GREATER)||(LA50_0 >= HASH && LA50_0 <= HASH_SYMBOL)||LA50_0==IDENT||LA50_0==IMPORT_SYM||(LA50_0 >= LBRACE && LA50_0 <= LEFTTOP_SYM)||LA50_0==LESS_AND||(LA50_0 >= MEDIA_SYM && LA50_0 <= MOZ_DOCUMENT_SYM)||LA50_0==NAMESPACE_SYM||LA50_0==PAGE_SYM||(LA50_0 >= PIPE && LA50_0 <= PLUS)||LA50_0==RBRACE||(LA50_0 >= RIGHTBOTTOM_SYM && LA50_0 <= RIGHTTOP_SYM)||(LA50_0 >= SASS_AT_ROOT && LA50_0 <= SASS_DEBUG)||(LA50_0 >= SASS_EACH && LA50_0 <= SASS_ELSE)||(LA50_0 >= SASS_EXTEND && LA50_0 <= SASS_FUNCTION)||(LA50_0 >= SASS_IF && LA50_0 <= SASS_MIXIN)||(LA50_0 >= SASS_RETURN && LA50_0 <= SEMI)||LA50_0==STAR||LA50_0==TILDE||(LA50_0 >= TOPCENTER_SYM && LA50_0 <= TOPRIGHT_SYM)||LA50_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA50_0==COMMA) && (synpred9_Css3())) {s = 3;}
						 
						input.seek(index50_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 50, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA55_eotS =
		"\10\uffff";
	static final String DFA55_eofS =
		"\2\2\6\uffff";
	static final String DFA55_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA55_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA55_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA55_specialS =
		"\10\uffff}>";
	static final String[] DFA55_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
	static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
	static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
	static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
	static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
	static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
	static final short[][] DFA55_transition;

	static {
		int numStates = DFA55_transitionS.length;
		DFA55_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
		}
	}

	protected class DFA55 extends DFA {

		public DFA55(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 55;
			this.eot = DFA55_eot;
			this.eof = DFA55_eof;
			this.min = DFA55_min;
			this.max = DFA55_max;
			this.accept = DFA55_accept;
			this.special = DFA55_special;
			this.transition = DFA55_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 438:43: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA58_eotS =
		"\10\uffff";
	static final String DFA58_eofS =
		"\2\2\6\uffff";
	static final String DFA58_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA58_maxS =
		"\2\u0092\1\uffff\3\u0092\1\uffff\1\u0092";
	static final String DFA58_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA58_specialS =
		"\10\uffff}>";
	static final String[] DFA58_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\3\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\4\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\13\uffff\1\2\2\uffff\2"+
			"\2\12\uffff\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24"+
			"\uffff\1\2\20\uffff\1\2\15\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\5\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\7\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2"+
			"\2\2\uffff\1\2\7\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff"+
			"\1\7\13\uffff\2\2\24\uffff\1\2\15\uffff\1\2\2\uffff\1\2\15\uffff\1\7"
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:23: ( ( ws )? key_and ( ws )? mediaExpression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA63_eotS =
		"\4\uffff";
	static final String DFA63_eofS =
		"\4\uffff";
	static final String DFA63_minS =
		"\2\23\2\uffff";
	static final String DFA63_maxS =
		"\2\u0092\2\uffff";
	static final String DFA63_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA63_specialS =
		"\4\uffff}>";
	static final String[] DFA63_transitionS = {
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"\1\2\1\uffff\1\1\73\uffff\1\1\26\uffff\1\3\51\uffff\1\1",
			"",
			""
	};

	static final short[] DFA63_eot = DFA.unpackEncodedString(DFA63_eotS);
	static final short[] DFA63_eof = DFA.unpackEncodedString(DFA63_eofS);
	static final char[] DFA63_min = DFA.unpackEncodedStringToUnsignedChars(DFA63_minS);
	static final char[] DFA63_max = DFA.unpackEncodedStringToUnsignedChars(DFA63_maxS);
	static final short[] DFA63_accept = DFA.unpackEncodedString(DFA63_acceptS);
	static final short[] DFA63_special = DFA.unpackEncodedString(DFA63_specialS);
	static final short[][] DFA63_transition;

	static {
		int numStates = DFA63_transitionS.length;
		DFA63_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA63_transition[i] = DFA.unpackEncodedString(DFA63_transitionS[i]);
		}
	}

	protected class DFA63 extends DFA {

		public DFA63(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 63;
			this.eot = DFA63_eot;
			this.eof = DFA63_eof;
			this.min = DFA63_min;
			this.max = DFA63_max;
			this.accept = DFA63_accept;
			this.special = DFA63_special;
			this.transition = DFA63_transition;
		}
		@Override
		public String getDescription() {
			return "453:29: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA71_eotS =
		"\6\uffff";
	static final String DFA71_eofS =
		"\2\3\4\uffff";
	static final String DFA71_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA71_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA71_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA71_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\4\3\1\4\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3"+
			"\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
	static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
	static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
	static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
	static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
	static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
	static final short[][] DFA71_transition;

	static {
		int numStates = DFA71_transitionS.length;
		DFA71_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
		}
	}

	protected class DFA71 extends DFA {

		public DFA71(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}
		@Override
		public String getDescription() {
			return "473:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA71_2 = input.LA(1);
						 
						int index71_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred10_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA71_4 = input.LA(1);
						 
						int index71_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred10_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index71_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 71, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA104_eotS =
		"\4\uffff";
	static final String DFA104_eofS =
		"\1\2\3\uffff";
	static final String DFA104_minS =
		"\2\24\2\uffff";
	static final String DFA104_maxS =
		"\2\u0092\2\uffff";
	static final String DFA104_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA104_specialS =
		"\4\uffff}>";
	static final String[] DFA104_transitionS = {
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
	static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
	static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
	static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
	static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
	static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
	static final short[][] DFA104_transition;

	static {
		int numStates = DFA104_transitionS.length;
		DFA104_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
		}
	}

	protected class DFA104 extends DFA {

		public DFA104(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 104;
			this.eot = DFA104_eot;
			this.eof = DFA104_eof;
			this.min = DFA104_min;
			this.max = DFA104_max;
			this.accept = DFA104_accept;
			this.special = DFA104_special;
			this.transition = DFA104_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 555:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA111_eotS =
		"\5\uffff";
	static final String DFA111_eofS =
		"\5\uffff";
	static final String DFA111_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA111_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA111_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA111_specialS =
		"\5\uffff}>";
	static final String[] DFA111_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
	static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
	static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
	static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
	static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
	static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
	static final short[][] DFA111_transition;

	static {
		int numStates = DFA111_transitionS.length;
		DFA111_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
		}
	}

	protected class DFA111 extends DFA {

		public DFA111(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 111;
			this.eot = DFA111_eot;
			this.eof = DFA111_eof;
			this.min = DFA111_min;
			this.max = DFA111_max;
			this.accept = DFA111_accept;
			this.special = DFA111_special;
			this.transition = DFA111_transition;
		}
		@Override
		public String getDescription() {
			return "563:14: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\5\uffff";
	static final String DFA115_eofS =
		"\5\uffff";
	static final String DFA115_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA115_maxS =
		"\1\u0091\1\uffff\2\u0092\1\uffff";
	static final String DFA115_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA115_specialS =
		"\5\uffff}>";
	static final String[] DFA115_transitionS = {
			"\1\1\3\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\2\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2"+
			"\1\1\uffff\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\5\2\6\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"\1\1\1\uffff\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "563:60: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA135_eotS =
		"\5\uffff";
	static final String DFA135_eofS =
		"\2\2\3\uffff";
	static final String DFA135_minS =
		"\2\6\3\uffff";
	static final String DFA135_maxS =
		"\2\u0092\3\uffff";
	static final String DFA135_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA135_specialS =
		"\5\uffff}>";
	static final String[] DFA135_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
	static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
	static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
	static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
	static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
	static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
	static final short[][] DFA135_transition;

	static {
		int numStates = DFA135_transitionS.length;
		DFA135_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
		}
	}

	protected class DFA135 extends DFA {

		public DFA135(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 135;
			this.eot = DFA135_eot;
			this.eof = DFA135_eof;
			this.min = DFA135_min;
			this.max = DFA135_max;
			this.accept = DFA135_accept;
			this.special = DFA135_special;
			this.transition = DFA135_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 639:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA137_eotS =
		"\6\uffff";
	static final String DFA137_eofS =
		"\6\uffff";
	static final String DFA137_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_maxS =
		"\2\u0092\1\0\1\uffff\1\0\1\uffff";
	static final String DFA137_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA137_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA137_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2"+
			"\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2"+
			"\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA137_eot = DFA.unpackEncodedString(DFA137_eotS);
	static final short[] DFA137_eof = DFA.unpackEncodedString(DFA137_eofS);
	static final char[] DFA137_min = DFA.unpackEncodedStringToUnsignedChars(DFA137_minS);
	static final char[] DFA137_max = DFA.unpackEncodedStringToUnsignedChars(DFA137_maxS);
	static final short[] DFA137_accept = DFA.unpackEncodedString(DFA137_acceptS);
	static final short[] DFA137_special = DFA.unpackEncodedString(DFA137_specialS);
	static final short[][] DFA137_transition;

	static {
		int numStates = DFA137_transitionS.length;
		DFA137_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA137_transition[i] = DFA.unpackEncodedString(DFA137_transitionS[i]);
		}
	}

	protected class DFA137 extends DFA {

		public DFA137(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 137;
			this.eot = DFA137_eot;
			this.eof = DFA137_eof;
			this.min = DFA137_min;
			this.max = DFA137_max;
			this.accept = DFA137_accept;
			this.special = DFA137_special;
			this.transition = DFA137_transition;
		}
		@Override
		public String getDescription() {
			return "650:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA137_2 = input.LA(1);
						 
						int index137_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA137_4 = input.LA(1);
						 
						int index137_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index137_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 137, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA145_eotS =
		"\4\uffff";
	static final String DFA145_eofS =
		"\4\uffff";
	static final String DFA145_minS =
		"\2\6\2\uffff";
	static final String DFA145_maxS =
		"\2\u0092\2\uffff";
	static final String DFA145_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA145_specialS =
		"\4\uffff}>";
	static final String[] DFA145_transitionS = {
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3\3"+
			"\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2"+
			"\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff\5"+
			"\3\6\uffff\1\3\1\1",
			"\1\3\3\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\2\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\10\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff\2\3"+
			"\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\3\uffff\1\3\3\uffff"+
			"\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA145_eot = DFA.unpackEncodedString(DFA145_eotS);
	static final short[] DFA145_eof = DFA.unpackEncodedString(DFA145_eofS);
	static final char[] DFA145_min = DFA.unpackEncodedStringToUnsignedChars(DFA145_minS);
	static final char[] DFA145_max = DFA.unpackEncodedStringToUnsignedChars(DFA145_maxS);
	static final short[] DFA145_accept = DFA.unpackEncodedString(DFA145_acceptS);
	static final short[] DFA145_special = DFA.unpackEncodedString(DFA145_specialS);
	static final short[][] DFA145_transition;

	static {
		int numStates = DFA145_transitionS.length;
		DFA145_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA145_transition[i] = DFA.unpackEncodedString(DFA145_transitionS[i]);
		}
	}

	protected class DFA145 extends DFA {

		public DFA145(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 145;
			this.eot = DFA145_eot;
			this.eof = DFA145_eof;
			this.min = DFA145_min;
			this.max = DFA145_max;
			this.accept = DFA145_accept;
			this.special = DFA145_special;
			this.transition = DFA145_transition;
		}
		@Override
		public String getDescription() {
			return "658:55: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA151_eotS =
		"\6\uffff";
	static final String DFA151_eofS =
		"\6\uffff";
	static final String DFA151_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA151_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA151_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA151_specialS =
		"\6\uffff}>";
	static final String[] DFA151_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2\2\2"+
			"\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff"+
			"\1\1\10\uffff\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\1\4\1\uffff\1\4\12\uffff\2\4\2"+
			"\uffff\2\4\2\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1"+
			"\4\7\uffff\1\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15"+
			"\uffff\1\3",
			"",
			""
	};

	static final short[] DFA151_eot = DFA.unpackEncodedString(DFA151_eotS);
	static final short[] DFA151_eof = DFA.unpackEncodedString(DFA151_eofS);
	static final char[] DFA151_min = DFA.unpackEncodedStringToUnsignedChars(DFA151_minS);
	static final char[] DFA151_max = DFA.unpackEncodedStringToUnsignedChars(DFA151_maxS);
	static final short[] DFA151_accept = DFA.unpackEncodedString(DFA151_acceptS);
	static final short[] DFA151_special = DFA.unpackEncodedString(DFA151_specialS);
	static final short[][] DFA151_transition;

	static {
		int numStates = DFA151_transitionS.length;
		DFA151_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA151_transition[i] = DFA.unpackEncodedString(DFA151_transitionS[i]);
		}
	}

	protected class DFA151 extends DFA {

		public DFA151(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 151;
			this.eot = DFA151_eot;
			this.eof = DFA151_eof;
			this.min = DFA151_min;
			this.max = DFA151_max;
			this.accept = DFA151_accept;
			this.special = DFA151_special;
			this.transition = DFA151_transition;
		}
		@Override
		public String getDescription() {
			return "663:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA146_eotS =
		"\4\uffff";
	static final String DFA146_eofS =
		"\4\uffff";
	static final String DFA146_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA146_maxS =
		"\2\u0092\2\uffff";
	static final String DFA146_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA146_specialS =
		"\4\uffff}>";
	static final String[] DFA146_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA146_eot = DFA.unpackEncodedString(DFA146_eotS);
	static final short[] DFA146_eof = DFA.unpackEncodedString(DFA146_eofS);
	static final char[] DFA146_min = DFA.unpackEncodedStringToUnsignedChars(DFA146_minS);
	static final char[] DFA146_max = DFA.unpackEncodedStringToUnsignedChars(DFA146_maxS);
	static final short[] DFA146_accept = DFA.unpackEncodedString(DFA146_acceptS);
	static final short[] DFA146_special = DFA.unpackEncodedString(DFA146_specialS);
	static final short[][] DFA146_transition;

	static {
		int numStates = DFA146_transitionS.length;
		DFA146_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA146_transition[i] = DFA.unpackEncodedString(DFA146_transitionS[i]);
		}
	}

	protected class DFA146 extends DFA {

		public DFA146(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 146;
			this.eot = DFA146_eot;
			this.eof = DFA146_eof;
			this.min = DFA146_min;
			this.max = DFA146_max;
			this.accept = DFA146_accept;
			this.special = DFA146_special;
			this.transition = DFA146_transition;
		}
		@Override
		public String getDescription() {
			return "664:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA168_eotS =
		"\5\uffff";
	static final String DFA168_eofS =
		"\5\uffff";
	static final String DFA168_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA168_maxS =
		"\1\u0091\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA168_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA168_specialS =
		"\5\uffff}>";
	static final String[] DFA168_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\1\2\1\uffff\1\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff\3\2\1\uffff\4\2\1\1\1\uffff\1\2"+
			"\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\4\2\1\1\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\3",
			""
	};

	static final short[] DFA168_eot = DFA.unpackEncodedString(DFA168_eotS);
	static final short[] DFA168_eof = DFA.unpackEncodedString(DFA168_eofS);
	static final char[] DFA168_min = DFA.unpackEncodedStringToUnsignedChars(DFA168_minS);
	static final char[] DFA168_max = DFA.unpackEncodedStringToUnsignedChars(DFA168_maxS);
	static final short[] DFA168_accept = DFA.unpackEncodedString(DFA168_acceptS);
	static final short[] DFA168_special = DFA.unpackEncodedString(DFA168_specialS);
	static final short[][] DFA168_transition;

	static {
		int numStates = DFA168_transitionS.length;
		DFA168_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA168_transition[i] = DFA.unpackEncodedString(DFA168_transitionS[i]);
		}
	}

	protected class DFA168 extends DFA {

		public DFA168(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 168;
			this.eot = DFA168_eot;
			this.eof = DFA168_eof;
			this.min = DFA168_min;
			this.max = DFA168_max;
			this.accept = DFA168_accept;
			this.special = DFA168_special;
			this.transition = DFA168_transition;
		}
		@Override
		public String getDescription() {
			return "678:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA161_eotS =
		"\6\uffff";
	static final String DFA161_eofS =
		"\6\uffff";
	static final String DFA161_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA161_maxS =
		"\3\u0092\2\uffff\1\u0092";
	static final String DFA161_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA161_specialS =
		"\6\uffff}>";
	static final String[] DFA161_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\5\4\1\uffff"+
			"\3\4\1\uffff\4\4\1\2\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4"+
			"\1\5"
	};

	static final short[] DFA161_eot = DFA.unpackEncodedString(DFA161_eotS);
	static final short[] DFA161_eof = DFA.unpackEncodedString(DFA161_eofS);
	static final char[] DFA161_min = DFA.unpackEncodedStringToUnsignedChars(DFA161_minS);
	static final char[] DFA161_max = DFA.unpackEncodedStringToUnsignedChars(DFA161_maxS);
	static final short[] DFA161_accept = DFA.unpackEncodedString(DFA161_acceptS);
	static final short[] DFA161_special = DFA.unpackEncodedString(DFA161_specialS);
	static final short[][] DFA161_transition;

	static {
		int numStates = DFA161_transitionS.length;
		DFA161_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA161_transition[i] = DFA.unpackEncodedString(DFA161_transitionS[i]);
		}
	}

	protected class DFA161 extends DFA {

		public DFA161(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 161;
			this.eot = DFA161_eot;
			this.eof = DFA161_eof;
			this.min = DFA161_min;
			this.max = DFA161_max;
			this.accept = DFA161_accept;
			this.special = DFA161_special;
			this.transition = DFA161_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 680:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA160_eotS =
		"\4\uffff";
	static final String DFA160_eofS =
		"\4\uffff";
	static final String DFA160_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA160_maxS =
		"\2\u0092\2\uffff";
	static final String DFA160_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA160_specialS =
		"\4\uffff}>";
	static final String[] DFA160_transitionS = {
			"\1\1\73\uffff\1\1\55\uffff\1\2\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\4\3\1\2\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
	static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
	static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
	static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
	static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
	static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
	static final short[][] DFA160_transition;

	static {
		int numStates = DFA160_transitionS.length;
		DFA160_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
		}
	}

	protected class DFA160 extends DFA {

		public DFA160(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 160;
			this.eot = DFA160_eot;
			this.eof = DFA160_eof;
			this.min = DFA160_min;
			this.max = DFA160_max;
			this.accept = DFA160_accept;
			this.special = DFA160_special;
			this.transition = DFA160_transition;
		}
		@Override
		public String getDescription() {
			return "680:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA165_eotS =
		"\5\uffff";
	static final String DFA165_eofS =
		"\5\uffff";
	static final String DFA165_minS =
		"\2\25\3\uffff";
	static final String DFA165_maxS =
		"\2\u0092\3\uffff";
	static final String DFA165_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA165_specialS =
		"\5\uffff}>";
	static final String[] DFA165_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\3\35\uffff\1\2\22\uffff\1\1",
			"\1\1\73\uffff\1\1\17\uffff\1\4\35\uffff\1\2\22\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA165_eot = DFA.unpackEncodedString(DFA165_eotS);
	static final short[] DFA165_eof = DFA.unpackEncodedString(DFA165_eofS);
	static final char[] DFA165_min = DFA.unpackEncodedStringToUnsignedChars(DFA165_minS);
	static final char[] DFA165_max = DFA.unpackEncodedStringToUnsignedChars(DFA165_maxS);
	static final short[] DFA165_accept = DFA.unpackEncodedString(DFA165_acceptS);
	static final short[] DFA165_special = DFA.unpackEncodedString(DFA165_specialS);
	static final short[][] DFA165_transition;

	static {
		int numStates = DFA165_transitionS.length;
		DFA165_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA165_transition[i] = DFA.unpackEncodedString(DFA165_transitionS[i]);
		}
	}

	protected class DFA165 extends DFA {

		public DFA165(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 165;
			this.eot = DFA165_eot;
			this.eof = DFA165_eof;
			this.min = DFA165_min;
			this.max = DFA165_max;
			this.accept = DFA165_accept;
			this.special = DFA165_special;
			this.transition = DFA165_transition;
		}
		@Override
		public String getDescription() {
			return "680:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA170_eotS =
		"\4\uffff";
	static final String DFA170_eofS =
		"\4\uffff";
	static final String DFA170_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA170_maxS =
		"\2\u0092\2\uffff";
	static final String DFA170_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA170_specialS =
		"\4\uffff}>";
	static final String[] DFA170_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA170_eot = DFA.unpackEncodedString(DFA170_eotS);
	static final short[] DFA170_eof = DFA.unpackEncodedString(DFA170_eofS);
	static final char[] DFA170_min = DFA.unpackEncodedStringToUnsignedChars(DFA170_minS);
	static final char[] DFA170_max = DFA.unpackEncodedStringToUnsignedChars(DFA170_maxS);
	static final short[] DFA170_accept = DFA.unpackEncodedString(DFA170_acceptS);
	static final short[] DFA170_special = DFA.unpackEncodedString(DFA170_specialS);
	static final short[][] DFA170_transition;

	static {
		int numStates = DFA170_transitionS.length;
		DFA170_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA170_transition[i] = DFA.unpackEncodedString(DFA170_transitionS[i]);
		}
	}

	protected class DFA170 extends DFA {

		public DFA170(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 170;
			this.eot = DFA170_eot;
			this.eof = DFA170_eof;
			this.min = DFA170_min;
			this.max = DFA170_max;
			this.accept = DFA170_accept;
			this.special = DFA170_special;
			this.transition = DFA170_transition;
		}
		@Override
		public String getDescription() {
			return "694:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA172_eotS =
		"\4\uffff";
	static final String DFA172_eofS =
		"\4\uffff";
	static final String DFA172_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA172_maxS =
		"\2\u0092\2\uffff";
	static final String DFA172_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA172_specialS =
		"\4\uffff}>";
	static final String[] DFA172_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\17\uffff\1\3\35\uffff\1\3\22\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
	static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
	static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
	static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
	static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
	static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
	static final short[][] DFA172_transition;

	static {
		int numStates = DFA172_transitionS.length;
		DFA172_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
		}
	}

	protected class DFA172 extends DFA {

		public DFA172(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 172;
			this.eot = DFA172_eot;
			this.eof = DFA172_eof;
			this.min = DFA172_min;
			this.max = DFA172_max;
			this.accept = DFA172_accept;
			this.special = DFA172_special;
			this.transition = DFA172_transition;
		}
		@Override
		public String getDescription() {
			return "695:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA176_eotS =
		"\6\uffff";
	static final String DFA176_eofS =
		"\6\uffff";
	static final String DFA176_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA176_maxS =
		"\3\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA176_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA176_specialS =
		"\6\uffff}>";
	static final String[] DFA176_transitionS = {
			"\1\1\1\2\44\uffff\1\3\26\uffff\1\2\26\uffff\1\3\51\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\11\uffff\1\3\12\uffff\1\5\15\uffff\1\5\2\uffff\1\5"+
			"\15\uffff\1\4",
			"\1\5\1\2\44\uffff\1\3\26\uffff\1\2\100\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\1\5\1\uffff\1\5\12\uffff\2\5\2"+
			"\uffff\2\5\2\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff"+
			"\1\4\13\uffff\2\5\24\uffff\1\5\15\uffff\1\5\2\uffff\1\5\15\uffff\1\4",
			""
	};

	static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
	static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
	static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
	static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
	static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
	static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
	static final short[][] DFA176_transition;

	static {
		int numStates = DFA176_transitionS.length;
		DFA176_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
		}
	}

	protected class DFA176 extends DFA {

		public DFA176(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 176;
			this.eot = DFA176_eot;
			this.eof = DFA176_eof;
			this.min = DFA176_min;
			this.max = DFA176_max;
			this.accept = DFA176_accept;
			this.special = DFA176_special;
			this.transition = DFA176_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 713:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA184_eotS =
		"\5\uffff";
	static final String DFA184_eofS =
		"\5\uffff";
	static final String DFA184_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA184_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA184_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA184_specialS =
		"\5\uffff}>";
	static final String[] DFA184_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\1\2\1\1\2\uffff\2"+
			"\2\2\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1"+
			"\24\uffff\1\2\15\uffff\1\2\2\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\1\2\1\uffff\1\2\12\uffff\1\2\3\uffff"+
			"\2\2\2\uffff\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3"+
			"\13\uffff\1\2\12\uffff\1\4\12\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\1\2\1\uffff\1\2\12\uffff\1\2\3\uffff"+
			"\2\2\2\uffff\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3"+
			"\13\uffff\1\2\25\uffff\1\2\15\uffff\1\2\20\uffff\1\3",
			""
	};

	static final short[] DFA184_eot = DFA.unpackEncodedString(DFA184_eotS);
	static final short[] DFA184_eof = DFA.unpackEncodedString(DFA184_eofS);
	static final char[] DFA184_min = DFA.unpackEncodedStringToUnsignedChars(DFA184_minS);
	static final char[] DFA184_max = DFA.unpackEncodedStringToUnsignedChars(DFA184_maxS);
	static final short[] DFA184_accept = DFA.unpackEncodedString(DFA184_acceptS);
	static final short[] DFA184_special = DFA.unpackEncodedString(DFA184_specialS);
	static final short[][] DFA184_transition;

	static {
		int numStates = DFA184_transitionS.length;
		DFA184_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA184_transition[i] = DFA.unpackEncodedString(DFA184_transitionS[i]);
		}
	}

	protected class DFA184 extends DFA {

		public DFA184(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 184;
			this.eot = DFA184_eot;
			this.eof = DFA184_eof;
			this.min = DFA184_min;
			this.max = DFA184_max;
			this.accept = DFA184_accept;
			this.special = DFA184_special;
			this.transition = DFA184_transition;
		}
		@Override
		public String getDescription() {
			return "716:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA183_eotS =
		"\4\uffff";
	static final String DFA183_eofS =
		"\4\uffff";
	static final String DFA183_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA183_maxS =
		"\2\u0092\2\uffff";
	static final String DFA183_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA183_specialS =
		"\4\uffff}>";
	static final String[] DFA183_transitionS = {
			"\1\2\1\1\25\uffff\1\3\16\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\33\uffff\1\3\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2\uffff"+
			"\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1"+
			"\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA183_eot = DFA.unpackEncodedString(DFA183_eotS);
	static final short[] DFA183_eof = DFA.unpackEncodedString(DFA183_eofS);
	static final char[] DFA183_min = DFA.unpackEncodedStringToUnsignedChars(DFA183_minS);
	static final char[] DFA183_max = DFA.unpackEncodedStringToUnsignedChars(DFA183_maxS);
	static final short[] DFA183_accept = DFA.unpackEncodedString(DFA183_acceptS);
	static final short[] DFA183_special = DFA.unpackEncodedString(DFA183_specialS);
	static final short[][] DFA183_transition;

	static {
		int numStates = DFA183_transitionS.length;
		DFA183_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA183_transition[i] = DFA.unpackEncodedString(DFA183_transitionS[i]);
		}
	}

	protected class DFA183 extends DFA {

		public DFA183(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 183;
			this.eot = DFA183_eot;
			this.eof = DFA183_eof;
			this.min = DFA183_min;
			this.max = DFA183_max;
			this.accept = DFA183_accept;
			this.special = DFA183_special;
			this.transition = DFA183_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 717:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA182_eotS =
		"\4\uffff";
	static final String DFA182_eofS =
		"\4\uffff";
	static final String DFA182_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA182_maxS =
		"\2\u0092\2\uffff";
	static final String DFA182_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA182_specialS =
		"\4\uffff}>";
	static final String[] DFA182_transitionS = {
			"\1\1\25\uffff\1\2\45\uffff\1\1\14\uffff\1\2\45\uffff\1\2\15\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\1\3\1"+
			"\2\2\uffff\2\3\2\uffff\1\3\10\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\1\3\1\2\24\uffff\1\3\15\uffff\1\3\2\uffff\1\2\15\uffff"+
			"\1\1",
			"",
			""
	};

	static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
	static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
	static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
	static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
	static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
	static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
	static final short[][] DFA182_transition;

	static {
		int numStates = DFA182_transitionS.length;
		DFA182_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
		}
	}

	protected class DFA182 extends DFA {

		public DFA182(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 182;
			this.eot = DFA182_eot;
			this.eof = DFA182_eof;
			this.min = DFA182_min;
			this.max = DFA182_max;
			this.accept = DFA182_accept;
			this.special = DFA182_special;
			this.transition = DFA182_transition;
		}
		@Override
		public String getDescription() {
			return "717:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA188_eotS =
		"\13\uffff";
	static final String DFA188_eofS =
		"\13\uffff";
	static final String DFA188_minS =
		"\2\7\1\uffff\1\72\1\7\1\uffff\4\25\1\0";
	static final String DFA188_maxS =
		"\2\u0092\1\uffff\1\72\1\117\1\uffff\4\u0092\1\0";
	static final String DFA188_acceptS =
		"\2\uffff\1\1\2\uffff\1\2\5\uffff";
	static final String DFA188_specialS =
		"\12\uffff\1\0}>";
	static final String[] DFA188_transitionS = {
			"\1\3\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13"+
			"\uffff\1\2\5\uffff\1\2\17\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1"+
			"\4\2\uffff\1\5\10\uffff\1\2\5\uffff\1\2\7\uffff\1\5\7\uffff\1\1\41\uffff"+
			"\1\2\36\uffff\1\1",
			"",
			"\1\6",
			"\1\2\62\uffff\1\5\24\uffff\1\2",
			"",
			"\1\7\34\uffff\1\10\36\uffff\1\7\100\uffff\1\7",
			"\1\7\34\uffff\1\10\36\uffff\1\7\100\uffff\1\7",
			"\1\11\73\uffff\1\11\17\uffff\1\12\60\uffff\1\11",
			"\1\11\73\uffff\1\11\17\uffff\1\12\60\uffff\1\11",
			"\1\uffff"
	};

	static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
	static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
	static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
	static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
	static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
	static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
	static final short[][] DFA188_transition;

	static {
		int numStates = DFA188_transitionS.length;
		DFA188_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
		}
	}

	protected class DFA188 extends DFA {

		public DFA188(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 188;
			this.eot = DFA188_eot;
			this.eof = DFA188_eof;
			this.min = DFA188_min;
			this.max = DFA188_max;
			this.accept = DFA188_accept;
			this.special = DFA188_special;
			this.transition = DFA188_transition;
		}
		@Override
		public String getDescription() {
			return "728:97: ( ( ( ws )? elementSubsequent ) | ( ws {...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA188_10 = input.LA(1);
						 
						int index188_10 = input.index();
						input.rewind();
						s = -1;
						if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 5;}
						 
						input.seek(index188_10);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 188, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA191_eotS =
		"\5\uffff";
	static final String DFA191_eofS =
		"\5\uffff";
	static final String DFA191_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA191_maxS =
		"\2\u0092\1\uffff\1\117\1\uffff";
	static final String DFA191_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA191_specialS =
		"\5\uffff}>";
	static final String[] DFA191_transitionS = {
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\2\2\13"+
			"\uffff\1\2\5\uffff\1\2\17\uffff\1\1\41\uffff\1\2\36\uffff\1\1",
			"\1\2\13\uffff\1\2\1\uffff\1\1\7\uffff\1\2\1\uffff\1\2\16\uffff\1\2\1"+
			"\3\2\uffff\1\4\10\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff"+
			"\1\2\36\uffff\1\1",
			"",
			"\1\2\62\uffff\1\4\24\uffff\1\2",
			""
	};

	static final short[] DFA191_eot = DFA.unpackEncodedString(DFA191_eotS);
	static final short[] DFA191_eof = DFA.unpackEncodedString(DFA191_eofS);
	static final char[] DFA191_min = DFA.unpackEncodedStringToUnsignedChars(DFA191_minS);
	static final char[] DFA191_max = DFA.unpackEncodedStringToUnsignedChars(DFA191_maxS);
	static final short[] DFA191_accept = DFA.unpackEncodedString(DFA191_acceptS);
	static final short[] DFA191_special = DFA.unpackEncodedString(DFA191_specialS);
	static final short[][] DFA191_transition;

	static {
		int numStates = DFA191_transitionS.length;
		DFA191_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA191_transition[i] = DFA.unpackEncodedString(DFA191_transitionS[i]);
		}
	}

	protected class DFA191 extends DFA {

		public DFA191(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 191;
			this.eot = DFA191_eot;
			this.eof = DFA191_eof;
			this.min = DFA191_min;
			this.max = DFA191_max;
			this.accept = DFA191_accept;
			this.special = DFA191_special;
			this.transition = DFA191_transition;
		}
		@Override
		public String getDescription() {
			return "729:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA213_eotS =
		"\4\uffff";
	static final String DFA213_eofS =
		"\2\3\2\uffff";
	static final String DFA213_minS =
		"\2\6\2\uffff";
	static final String DFA213_maxS =
		"\2\u0092\2\uffff";
	static final String DFA213_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA213_specialS =
		"\4\uffff}>";
	static final String[] DFA213_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff\1\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\11\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA213_eot = DFA.unpackEncodedString(DFA213_eotS);
	static final short[] DFA213_eof = DFA.unpackEncodedString(DFA213_eofS);
	static final char[] DFA213_min = DFA.unpackEncodedStringToUnsignedChars(DFA213_minS);
	static final char[] DFA213_max = DFA.unpackEncodedStringToUnsignedChars(DFA213_maxS);
	static final short[] DFA213_accept = DFA.unpackEncodedString(DFA213_acceptS);
	static final short[] DFA213_special = DFA.unpackEncodedString(DFA213_specialS);
	static final short[][] DFA213_transition;

	static {
		int numStates = DFA213_transitionS.length;
		DFA213_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA213_transition[i] = DFA.unpackEncodedString(DFA213_transitionS[i]);
		}
	}

	protected class DFA213 extends DFA {

		public DFA213(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 213;
			this.eot = DFA213_eot;
			this.eof = DFA213_eof;
			this.min = DFA213_min;
			this.max = DFA213_max;
			this.accept = DFA213_accept;
			this.special = DFA213_special;
			this.transition = DFA213_transition;
		}
		@Override
		public String getDescription() {
			return "843:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA225_eotS =
		"\4\uffff";
	static final String DFA225_eofS =
		"\1\3\3\uffff";
	static final String DFA225_minS =
		"\2\6\2\uffff";
	static final String DFA225_maxS =
		"\2\u0092\2\uffff";
	static final String DFA225_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA225_specialS =
		"\4\uffff}>";
	static final String[] DFA225_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\1\3\1\2\1\3\6\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA225_eot = DFA.unpackEncodedString(DFA225_eotS);
	static final short[] DFA225_eof = DFA.unpackEncodedString(DFA225_eofS);
	static final char[] DFA225_min = DFA.unpackEncodedStringToUnsignedChars(DFA225_minS);
	static final char[] DFA225_max = DFA.unpackEncodedStringToUnsignedChars(DFA225_maxS);
	static final short[] DFA225_accept = DFA.unpackEncodedString(DFA225_acceptS);
	static final short[] DFA225_special = DFA.unpackEncodedString(DFA225_specialS);
	static final short[][] DFA225_transition;

	static {
		int numStates = DFA225_transitionS.length;
		DFA225_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA225_transition[i] = DFA.unpackEncodedString(DFA225_transitionS[i]);
		}
	}

	protected class DFA225 extends DFA {

		public DFA225(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 225;
			this.eot = DFA225_eot;
			this.eof = DFA225_eof;
			this.min = DFA225_min;
			this.max = DFA225_max;
			this.accept = DFA225_accept;
			this.special = DFA225_special;
			this.transition = DFA225_transition;
		}
		@Override
		public String getDescription() {
			return "857:48: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA235_eotS =
		"\74\uffff";
	static final String DFA235_eofS =
		"\1\2\73\uffff";
	static final String DFA235_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\4\0\1\uffff\17\0\1\uffff\1\0\3\uffff\6\0"+
		"\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA235_maxS =
		"\1\u0092\1\0\4\uffff\1\0\1\uffff\4\0\1\uffff\17\0\1\uffff\1\0\3\uffff"+
		"\6\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA235_acceptS =
		"\2\uffff\1\2\47\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA235_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\uffff\1\7\1\10\1\11\1\12"+
		"\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\uffff\1\26\3"+
		"\uffff\1\27\1\30\1\31\1\32\1\33\1\34\2\uffff\1\35\1\uffff\1\36\20\uffff}>";
	static final String[] DFA235_transitionS = {
			"\1\62\1\12\1\35\2\uffff\5\46\3\uffff\1\46\1\2\1\51\1\1\1\uffff\1\46\5"+
			"\uffff\1\2\1\66\1\2\1\uffff\1\57\3\uffff\1\61\1\uffff\1\41\1\64\1\uffff"+
			"\1\20\1\2\2\uffff\1\10\1\16\2\uffff\1\15\1\2\1\30\5\uffff\2\2\3\46\1"+
			"\56\1\uffff\1\6\1\71\5\uffff\1\44\1\17\1\42\5\uffff\1\46\1\1\4\uffff"+
			"\1\54\3\uffff\1\32\1\55\1\73\1\2\1\33\2\uffff\1\2\1\uffff\1\60\1\65\3"+
			"\46\1\2\1\uffff\1\31\1\27\1\21\1\uffff\1\25\1\46\2\uffff\1\45\1\2\1\24"+
			"\1\46\1\uffff\1\23\1\13\1\11\1\uffff\1\46\1\22\1\21\1\26\1\2\1\52\1\2"+
			"\1\67\1\uffff\1\53\1\63\5\46\2\uffff\1\72\3\uffff\1\43\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA235_eot = DFA.unpackEncodedString(DFA235_eotS);
	static final short[] DFA235_eof = DFA.unpackEncodedString(DFA235_eofS);
	static final char[] DFA235_min = DFA.unpackEncodedStringToUnsignedChars(DFA235_minS);
	static final char[] DFA235_max = DFA.unpackEncodedStringToUnsignedChars(DFA235_maxS);
	static final short[] DFA235_accept = DFA.unpackEncodedString(DFA235_acceptS);
	static final short[] DFA235_special = DFA.unpackEncodedString(DFA235_specialS);
	static final short[][] DFA235_transition;

	static {
		int numStates = DFA235_transitionS.length;
		DFA235_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA235_transition[i] = DFA.unpackEncodedString(DFA235_transitionS[i]);
		}
	}

	protected class DFA235 extends DFA {

		public DFA235(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 235;
			this.eot = DFA235_eot;
			this.eof = DFA235_eof;
			this.min = DFA235_min;
			this.max = DFA235_max;
			this.accept = DFA235_accept;
			this.special = DFA235_special;
			this.transition = DFA235_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 924:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA235_0 = input.LA(1);
						 
						int index235_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA235_0==COMMENT||LA235_0==NL||LA235_0==WS) ) {s = 1;}
						else if ( (LA235_0==EOF||LA235_0==COLON||LA235_0==DCOLON||LA235_0==DOT||LA235_0==GREATER||LA235_0==IMPORTANT_SYM||(LA235_0 >= LBRACE && LA235_0 <= LBRACKET)||LA235_0==PIPE||LA235_0==RBRACE||LA235_0==RPAREN||LA235_0==SASS_EXTEND_ONLY_SELECTOR||LA235_0==SEMI||LA235_0==STAR) ) {s = 2;}
						else if ( (LA235_0==LESS_AND) ) {s = 6;}
						else if ( (LA235_0==HASH) ) {s = 8;}
						else if ( (LA235_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA235_0==AT_IDENT) ) {s = 10;}
						else if ( (LA235_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA235_0==IDENT) ) {s = 13;}
						else if ( (LA235_0==HASH_SYMBOL) ) {s = 14;}
						else if ( (LA235_0==MINUS) ) {s = 15;}
						else if ( (LA235_0==GEN) ) {s = 16;}
						else if ( (LA235_0==SASS_DEBUG||LA235_0==SASS_WARN) ) {s = 17;}
						else if ( (LA235_0==SASS_VAR) ) {s = 18;}
						else if ( (LA235_0==SASS_IF) ) {s = 19;}
						else if ( (LA235_0==SASS_FOR) ) {s = 20;}
						else if ( (LA235_0==SASS_EACH) ) {s = 21;}
						else if ( (LA235_0==SASS_WHILE) ) {s = 22;}
						else if ( (LA235_0==SASS_CONTENT) ) {s = 23;}
						else if ( (LA235_0==IMPORT_SYM) ) {s = 24;}
						else if ( (LA235_0==SASS_AT_ROOT) ) {s = 25;}
						else if ( (LA235_0==PAGE_SYM) ) {s = 26;}
						else if ( (LA235_0==PLUS) ) {s = 27;}
						else if ( (LA235_0==AT_SIGN) ) {s = 29;}
						else if ( (LA235_0==FONT_FACE_SYM) ) {s = 33;}
						else if ( (LA235_0==MOZ_DOCUMENT_SYM) ) {s = 34;}
						else if ( (LA235_0==WEBKIT_KEYFRAMES_SYM) ) {s = 35;}
						else if ( (LA235_0==MEDIA_SYM) ) {s = 36;}
						else if ( (LA235_0==SASS_EXTEND) ) {s = 37;}
						else if ( ((LA235_0 >= BOTTOMCENTER_SYM && LA235_0 <= BOTTOMRIGHT_SYM)||LA235_0==CHARSET_SYM||LA235_0==COUNTER_STYLE_SYM||(LA235_0 >= LEFTBOTTOM_SYM && LA235_0 <= LEFTTOP_SYM)||LA235_0==NAMESPACE_SYM||(LA235_0 >= RIGHTBOTTOM_SYM && LA235_0 <= RIGHTTOP_SYM)||LA235_0==SASS_ELSE||LA235_0==SASS_FUNCTION||LA235_0==SASS_RETURN||(LA235_0 >= TOPCENTER_SYM && LA235_0 <= TOPRIGHT_SYM)) ) {s = 38;}
						else if ( (LA235_0==COMMA) ) {s = 41;}
						else if ( (LA235_0==SOLIDUS) && (synpred30_Css3())) {s = 42;}
						else if ( (LA235_0==TILDE) ) {s = 43;}
						else if ( (LA235_0==NUMBER) && (synpred30_Css3())) {s = 44;}
						else if ( (LA235_0==PERCENTAGE) && (synpred30_Css3())) {s = 45;}
						else if ( (LA235_0==LENGTH) && (synpred30_Css3())) {s = 46;}
						else if ( (LA235_0==EMS) && (synpred30_Css3())) {s = 47;}
						else if ( (LA235_0==REM) && (synpred30_Css3())) {s = 48;}
						else if ( (LA235_0==EXS) && (synpred30_Css3())) {s = 49;}
						else if ( (LA235_0==ANGLE) && (synpred30_Css3())) {s = 50;}
						else if ( (LA235_0==TIME) && (synpred30_Css3())) {s = 51;}
						else if ( (LA235_0==FREQ) && (synpred30_Css3())) {s = 52;}
						else if ( (LA235_0==RESOLUTION) && (synpred30_Css3())) {s = 53;}
						else if ( (LA235_0==DIMENSION) && (synpred30_Css3())) {s = 54;}
						else if ( (LA235_0==STRING) && (synpred30_Css3())) {s = 55;}
						else if ( (LA235_0==LESS_JS_STRING) && (synpred30_Css3())) {s = 57;}
						else if ( (LA235_0==URI) && (synpred30_Css3())) {s = 58;}
						else if ( (LA235_0==PERCENTAGE_SYMBOL) && (synpred30_Css3())) {s = 59;}
						 
						input.seek(index235_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA235_1 = input.LA(1);
						 
						int index235_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA235_6 = input.LA(1);
						 
						int index235_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred30_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_6);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA235_8 = input.LA(1);
						 
						int index235_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA235_9 = input.LA(1);
						 
						int index235_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_9);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA235_10 = input.LA(1);
						 
						int index235_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_10);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA235_11 = input.LA(1);
						 
						int index235_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_11);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA235_13 = input.LA(1);
						 
						int index235_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_13);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA235_14 = input.LA(1);
						 
						int index235_14 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred30_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_14);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA235_15 = input.LA(1);
						 
						int index235_15 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index235_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA235_16 = input.LA(1);
						 
						int index235_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA235_17 = input.LA(1);
						 
						int index235_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA235_18 = input.LA(1);
						 
						int index235_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_18);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA235_19 = input.LA(1);
						 
						int index235_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_19);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA235_20 = input.LA(1);
						 
						int index235_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_20);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA235_21 = input.LA(1);
						 
						int index235_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA235_22 = input.LA(1);
						 
						int index235_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA235_23 = input.LA(1);
						 
						int index235_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA235_24 = input.LA(1);
						 
						int index235_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index235_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA235_25 = input.LA(1);
						 
						int index235_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_25);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA235_26 = input.LA(1);
						 
						int index235_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA235_27 = input.LA(1);
						 
						int index235_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_27);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA235_29 = input.LA(1);
						 
						int index235_29 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index235_29);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA235_33 = input.LA(1);
						 
						int index235_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_33);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA235_34 = input.LA(1);
						 
						int index235_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_34);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA235_35 = input.LA(1);
						 
						int index235_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA235_36 = input.LA(1);
						 
						int index235_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA235_37 = input.LA(1);
						 
						int index235_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index235_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA235_38 = input.LA(1);
						 
						int index235_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred30_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 59;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 2;}
						 
						input.seek(index235_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA235_41 = input.LA(1);
						 
						int index235_41 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_41);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA235_43 = input.LA(1);
						 
						int index235_43 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred30_Css3()) ) {s = 59;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index235_43);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 235, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA234_eotS =
		"\5\uffff";
	static final String DFA234_eofS =
		"\5\uffff";
	static final String DFA234_minS =
		"\2\5\3\uffff";
	static final String DFA234_maxS =
		"\2\u0092\3\uffff";
	static final String DFA234_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA234_specialS =
		"\5\uffff}>";
	static final String[] DFA234_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA234_eot = DFA.unpackEncodedString(DFA234_eotS);
	static final short[] DFA234_eof = DFA.unpackEncodedString(DFA234_eofS);
	static final char[] DFA234_min = DFA.unpackEncodedStringToUnsignedChars(DFA234_minS);
	static final char[] DFA234_max = DFA.unpackEncodedStringToUnsignedChars(DFA234_maxS);
	static final short[] DFA234_accept = DFA.unpackEncodedString(DFA234_acceptS);
	static final short[] DFA234_special = DFA.unpackEncodedString(DFA234_specialS);
	static final short[][] DFA234_transition;

	static {
		int numStates = DFA234_transitionS.length;
		DFA234_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA234_transition[i] = DFA.unpackEncodedString(DFA234_transitionS[i]);
		}
	}

	protected class DFA234 extends DFA {

		public DFA234(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 234;
			this.eot = DFA234_eot;
			this.eof = DFA234_eof;
			this.min = DFA234_min;
			this.max = DFA234_max;
			this.accept = DFA234_accept;
			this.special = DFA234_special;
			this.transition = DFA234_transition;
		}
		@Override
		public String getDescription() {
			return "924:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA247_eotS =
		"\4\uffff";
	static final String DFA247_eofS =
		"\4\uffff";
	static final String DFA247_minS =
		"\2\24\2\uffff";
	static final String DFA247_maxS =
		"\2\u0092\2\uffff";
	static final String DFA247_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA247_specialS =
		"\4\uffff}>";
	static final String[] DFA247_transitionS = {
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"\1\3\1\1\73\uffff\1\1\26\uffff\1\2\26\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA247_eot = DFA.unpackEncodedString(DFA247_eotS);
	static final short[] DFA247_eof = DFA.unpackEncodedString(DFA247_eofS);
	static final char[] DFA247_min = DFA.unpackEncodedStringToUnsignedChars(DFA247_minS);
	static final char[] DFA247_max = DFA.unpackEncodedStringToUnsignedChars(DFA247_maxS);
	static final short[] DFA247_accept = DFA.unpackEncodedString(DFA247_acceptS);
	static final short[] DFA247_special = DFA.unpackEncodedString(DFA247_specialS);
	static final short[][] DFA247_transition;

	static {
		int numStates = DFA247_transitionS.length;
		DFA247_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA247_transition[i] = DFA.unpackEncodedString(DFA247_transitionS[i]);
		}
	}

	protected class DFA247 extends DFA {

		public DFA247(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 247;
			this.eot = DFA247_eot;
			this.eof = DFA247_eof;
			this.min = DFA247_min;
			this.max = DFA247_max;
			this.accept = DFA247_accept;
			this.special = DFA247_special;
			this.transition = DFA247_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 989:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA257_eotS =
		"\43\uffff";
	static final String DFA257_eofS =
		"\43\uffff";
	static final String DFA257_minS =
		"\2\5\41\uffff";
	static final String DFA257_maxS =
		"\2\u0092\41\uffff";
	static final String DFA257_acceptS =
		"\2\uffff\1\2\40\1";
	static final String DFA257_specialS =
		"\1\0\1\1\41\uffff}>";
	static final String[] DFA257_transitionS = {
			"\1\14\1\27\1\33\2\uffff\5\27\3\uffff\1\27\1\uffff\1\2\1\1\1\uffff\1\27"+
			"\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\27\1\16\1\uffff\1\24"+
			"\3\uffff\1\26\1\32\2\uffff\1\5\1\uffff\1\27\7\uffff\3\27\1\10\1\uffff"+
			"\1\31\1\23\5\uffff\1\27\1\4\1\27\5\uffff\1\27\1\1\4\uffff\1\6\3\uffff"+
			"\1\27\1\7\1\34\1\uffff\1\4\4\uffff\1\12\1\17\3\27\1\2\1\uffff\3\27\1"+
			"\uffff\2\27\2\uffff\1\27\1\uffff\2\27\1\uffff\3\27\1\uffff\1\27\1\30"+
			"\2\27\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\27\2\uffff\1\25\3\uffff"+
			"\1\27\1\1",
			"\1\14\1\35\1\41\2\uffff\5\35\3\uffff\1\35\1\uffff\1\2\1\1\1\uffff\1"+
			"\35\6\uffff\1\20\2\uffff\1\11\3\uffff\1\13\1\uffff\1\35\1\16\1\uffff"+
			"\1\24\3\uffff\1\26\1\40\2\uffff\1\5\1\uffff\1\35\7\uffff\3\35\1\10\1"+
			"\uffff\1\37\1\23\5\uffff\1\35\1\4\1\35\5\uffff\1\35\1\1\4\uffff\1\6\3"+
			"\uffff\1\35\1\7\1\42\1\uffff\1\4\4\uffff\1\12\1\17\3\35\1\2\1\uffff\3"+
			"\35\1\uffff\2\35\2\uffff\1\35\1\uffff\2\35\1\uffff\3\35\1\uffff\1\35"+
			"\1\36\2\35\1\2\1\3\1\uffff\1\21\1\uffff\1\22\1\15\5\35\2\uffff\1\25\3"+
			"\uffff\1\35\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA257_eot = DFA.unpackEncodedString(DFA257_eotS);
	static final short[] DFA257_eof = DFA.unpackEncodedString(DFA257_eofS);
	static final char[] DFA257_min = DFA.unpackEncodedStringToUnsignedChars(DFA257_minS);
	static final char[] DFA257_max = DFA.unpackEncodedStringToUnsignedChars(DFA257_maxS);
	static final short[] DFA257_accept = DFA.unpackEncodedString(DFA257_acceptS);
	static final short[] DFA257_special = DFA.unpackEncodedString(DFA257_specialS);
	static final short[][] DFA257_transition;

	static {
		int numStates = DFA257_transitionS.length;
		DFA257_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA257_transition[i] = DFA.unpackEncodedString(DFA257_transitionS[i]);
		}
	}

	protected class DFA257 extends DFA {

		public DFA257(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 257;
			this.eot = DFA257_eot;
			this.eof = DFA257_eof;
			this.min = DFA257_min;
			this.max = DFA257_max;
			this.accept = DFA257_accept;
			this.special = DFA257_special;
			this.transition = DFA257_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1007:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA257_0 = input.LA(1);
						 
						int index257_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {s = 1;}
						else if ( (LA257_0==COMMA||LA257_0==RPAREN||LA257_0==SEMI) ) {s = 2;}
						else if ( (LA257_0==SOLIDUS) && (synpred34_Css3())) {s = 3;}
						else if ( (LA257_0==MINUS||LA257_0==PLUS) && (synpred34_Css3())) {s = 4;}
						else if ( (LA257_0==IDENT) && (synpred34_Css3())) {s = 5;}
						else if ( (LA257_0==NUMBER) && (synpred34_Css3())) {s = 6;}
						else if ( (LA257_0==PERCENTAGE) && (synpred34_Css3())) {s = 7;}
						else if ( (LA257_0==LENGTH) && (synpred34_Css3())) {s = 8;}
						else if ( (LA257_0==EMS) && (synpred34_Css3())) {s = 9;}
						else if ( (LA257_0==REM) && (synpred34_Css3())) {s = 10;}
						else if ( (LA257_0==EXS) && (synpred34_Css3())) {s = 11;}
						else if ( (LA257_0==ANGLE) && (synpred34_Css3())) {s = 12;}
						else if ( (LA257_0==TIME) && (synpred34_Css3())) {s = 13;}
						else if ( (LA257_0==FREQ) && (synpred34_Css3())) {s = 14;}
						else if ( (LA257_0==RESOLUTION) && (synpred34_Css3())) {s = 15;}
						else if ( (LA257_0==DIMENSION) && (synpred34_Css3())) {s = 16;}
						else if ( (LA257_0==STRING) && (synpred34_Css3())) {s = 17;}
						else if ( (LA257_0==TILDE) && (synpred34_Css3())) {s = 18;}
						else if ( (LA257_0==LESS_JS_STRING) && (synpred34_Css3())) {s = 19;}
						else if ( (LA257_0==GEN) && (synpred34_Css3())) {s = 20;}
						else if ( (LA257_0==URI) && (synpred34_Css3())) {s = 21;}
						else if ( (LA257_0==HASH) && (synpred34_Css3())) {s = 22;}
						else if ( (LA257_0==AT_IDENT||(LA257_0 >= BOTTOMCENTER_SYM && LA257_0 <= BOTTOMRIGHT_SYM)||LA257_0==CHARSET_SYM||LA257_0==COUNTER_STYLE_SYM||LA257_0==FONT_FACE_SYM||LA257_0==IMPORT_SYM||(LA257_0 >= LEFTBOTTOM_SYM && LA257_0 <= LEFTTOP_SYM)||LA257_0==MEDIA_SYM||LA257_0==MOZ_DOCUMENT_SYM||LA257_0==NAMESPACE_SYM||LA257_0==PAGE_SYM||(LA257_0 >= RIGHTBOTTOM_SYM && LA257_0 <= RIGHTTOP_SYM)||(LA257_0 >= SASS_AT_ROOT && LA257_0 <= SASS_DEBUG)||(LA257_0 >= SASS_EACH && LA257_0 <= SASS_ELSE)||LA257_0==SASS_EXTEND||(LA257_0 >= SASS_FOR && LA257_0 <= SASS_FUNCTION)||(LA257_0 >= SASS_IF && LA257_0 <= SASS_MIXIN)||LA257_0==SASS_RETURN||(LA257_0 >= SASS_WARN && LA257_0 <= SASS_WHILE)||(LA257_0 >= TOPCENTER_SYM && LA257_0 <= TOPRIGHT_SYM)||LA257_0==WEBKIT_KEYFRAMES_SYM) && (synpred34_Css3())) {s = 23;}
						else if ( (LA257_0==SASS_VAR) && (synpred34_Css3())) {s = 24;}
						else if ( (LA257_0==LESS_AND) && (synpred34_Css3())) {s = 25;}
						else if ( (LA257_0==HASH_SYMBOL) && (synpred34_Css3())) {s = 26;}
						else if ( (LA257_0==AT_SIGN) && (synpred34_Css3())) {s = 27;}
						else if ( (LA257_0==PERCENTAGE_SYMBOL) && (synpred34_Css3())) {s = 28;}
						 
						input.seek(index257_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA257_1 = input.LA(1);
						 
						int index257_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA257_1==COMMA||LA257_1==RPAREN||LA257_1==SEMI) ) {s = 2;}
						else if ( (LA257_1==COMMENT||LA257_1==NL||LA257_1==WS) ) {s = 1;}
						else if ( (LA257_1==MINUS||LA257_1==PLUS) && (synpred34_Css3())) {s = 4;}
						else if ( (LA257_1==IDENT) && (synpred34_Css3())) {s = 5;}
						else if ( (LA257_1==NUMBER) && (synpred34_Css3())) {s = 6;}
						else if ( (LA257_1==PERCENTAGE) && (synpred34_Css3())) {s = 7;}
						else if ( (LA257_1==LENGTH) && (synpred34_Css3())) {s = 8;}
						else if ( (LA257_1==EMS) && (synpred34_Css3())) {s = 9;}
						else if ( (LA257_1==REM) && (synpred34_Css3())) {s = 10;}
						else if ( (LA257_1==EXS) && (synpred34_Css3())) {s = 11;}
						else if ( (LA257_1==ANGLE) && (synpred34_Css3())) {s = 12;}
						else if ( (LA257_1==TIME) && (synpred34_Css3())) {s = 13;}
						else if ( (LA257_1==FREQ) && (synpred34_Css3())) {s = 14;}
						else if ( (LA257_1==RESOLUTION) && (synpred34_Css3())) {s = 15;}
						else if ( (LA257_1==DIMENSION) && (synpred34_Css3())) {s = 16;}
						else if ( (LA257_1==STRING) && (synpred34_Css3())) {s = 17;}
						else if ( (LA257_1==TILDE) && (synpred34_Css3())) {s = 18;}
						else if ( (LA257_1==LESS_JS_STRING) && (synpred34_Css3())) {s = 19;}
						else if ( (LA257_1==GEN) && (synpred34_Css3())) {s = 20;}
						else if ( (LA257_1==URI) && (synpred34_Css3())) {s = 21;}
						else if ( (LA257_1==HASH) && (synpred34_Css3())) {s = 22;}
						else if ( (LA257_1==AT_IDENT||(LA257_1 >= BOTTOMCENTER_SYM && LA257_1 <= BOTTOMRIGHT_SYM)||LA257_1==CHARSET_SYM||LA257_1==COUNTER_STYLE_SYM||LA257_1==FONT_FACE_SYM||LA257_1==IMPORT_SYM||(LA257_1 >= LEFTBOTTOM_SYM && LA257_1 <= LEFTTOP_SYM)||LA257_1==MEDIA_SYM||LA257_1==MOZ_DOCUMENT_SYM||LA257_1==NAMESPACE_SYM||LA257_1==PAGE_SYM||(LA257_1 >= RIGHTBOTTOM_SYM && LA257_1 <= RIGHTTOP_SYM)||(LA257_1 >= SASS_AT_ROOT && LA257_1 <= SASS_DEBUG)||(LA257_1 >= SASS_EACH && LA257_1 <= SASS_ELSE)||LA257_1==SASS_EXTEND||(LA257_1 >= SASS_FOR && LA257_1 <= SASS_FUNCTION)||(LA257_1 >= SASS_IF && LA257_1 <= SASS_MIXIN)||LA257_1==SASS_RETURN||(LA257_1 >= SASS_WARN && LA257_1 <= SASS_WHILE)||(LA257_1 >= TOPCENTER_SYM && LA257_1 <= TOPRIGHT_SYM)||LA257_1==WEBKIT_KEYFRAMES_SYM) && (synpred34_Css3())) {s = 29;}
						else if ( (LA257_1==SASS_VAR) && (synpred34_Css3())) {s = 30;}
						else if ( (LA257_1==LESS_AND) && (synpred34_Css3())) {s = 31;}
						else if ( (LA257_1==HASH_SYMBOL) && (synpred34_Css3())) {s = 32;}
						else if ( (LA257_1==AT_SIGN) && (synpred34_Css3())) {s = 33;}
						else if ( (LA257_1==PERCENTAGE_SYMBOL) && (synpred34_Css3())) {s = 34;}
						else if ( (LA257_1==SOLIDUS) && (synpred34_Css3())) {s = 3;}
						 
						input.seek(index257_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 257, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA256_eotS =
		"\5\uffff";
	static final String DFA256_eofS =
		"\5\uffff";
	static final String DFA256_minS =
		"\2\5\3\uffff";
	static final String DFA256_maxS =
		"\2\u0092\3\uffff";
	static final String DFA256_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA256_specialS =
		"\5\uffff}>";
	static final String[] DFA256_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA256_eot = DFA.unpackEncodedString(DFA256_eotS);
	static final short[] DFA256_eof = DFA.unpackEncodedString(DFA256_eofS);
	static final char[] DFA256_min = DFA.unpackEncodedStringToUnsignedChars(DFA256_minS);
	static final char[] DFA256_max = DFA.unpackEncodedStringToUnsignedChars(DFA256_maxS);
	static final short[] DFA256_accept = DFA.unpackEncodedString(DFA256_acceptS);
	static final short[] DFA256_special = DFA.unpackEncodedString(DFA256_specialS);
	static final short[][] DFA256_transition;

	static {
		int numStates = DFA256_transitionS.length;
		DFA256_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA256_transition[i] = DFA.unpackEncodedString(DFA256_transitionS[i]);
		}
	}

	protected class DFA256 extends DFA {

		public DFA256(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 256;
			this.eot = DFA256_eot;
			this.eof = DFA256_eof;
			this.min = DFA256_min;
			this.max = DFA256_max;
			this.accept = DFA256_accept;
			this.special = DFA256_special;
			this.transition = DFA256_transition;
		}
		@Override
		public String getDescription() {
			return "1007:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA266_eotS =
		"\5\uffff";
	static final String DFA266_eofS =
		"\2\2\3\uffff";
	static final String DFA266_minS =
		"\2\6\3\uffff";
	static final String DFA266_maxS =
		"\2\u0092\3\uffff";
	static final String DFA266_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA266_specialS =
		"\5\uffff}>";
	static final String[] DFA266_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\2\uffff\4\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\3\2\2\1\uffff\5\2\1\4\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA266_eot = DFA.unpackEncodedString(DFA266_eotS);
	static final short[] DFA266_eof = DFA.unpackEncodedString(DFA266_eofS);
	static final char[] DFA266_min = DFA.unpackEncodedStringToUnsignedChars(DFA266_minS);
	static final char[] DFA266_max = DFA.unpackEncodedStringToUnsignedChars(DFA266_maxS);
	static final short[] DFA266_accept = DFA.unpackEncodedString(DFA266_acceptS);
	static final short[] DFA266_special = DFA.unpackEncodedString(DFA266_specialS);
	static final short[][] DFA266_transition;

	static {
		int numStates = DFA266_transitionS.length;
		DFA266_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA266_transition[i] = DFA.unpackEncodedString(DFA266_transitionS[i]);
		}
	}

	protected class DFA266 extends DFA {

		public DFA266(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 266;
			this.eot = DFA266_eot;
			this.eof = DFA266_eof;
			this.min = DFA266_min;
			this.max = DFA266_max;
			this.accept = DFA266_accept;
			this.special = DFA266_special;
			this.transition = DFA266_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1026:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA271_eotS =
		"\4\uffff";
	static final String DFA271_eofS =
		"\2\2\2\uffff";
	static final String DFA271_minS =
		"\2\6\2\uffff";
	static final String DFA271_maxS =
		"\2\u0092\2\uffff";
	static final String DFA271_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA271_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA271_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\2\uffff\10\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\5\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\6\2\1\uffff\11\2\1\uffff\5\2\1\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA271_eot = DFA.unpackEncodedString(DFA271_eotS);
	static final short[] DFA271_eof = DFA.unpackEncodedString(DFA271_eofS);
	static final char[] DFA271_min = DFA.unpackEncodedStringToUnsignedChars(DFA271_minS);
	static final char[] DFA271_max = DFA.unpackEncodedStringToUnsignedChars(DFA271_maxS);
	static final short[] DFA271_accept = DFA.unpackEncodedString(DFA271_acceptS);
	static final short[] DFA271_special = DFA.unpackEncodedString(DFA271_specialS);
	static final short[][] DFA271_transition;

	static {
		int numStates = DFA271_transitionS.length;
		DFA271_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA271_transition[i] = DFA.unpackEncodedString(DFA271_transitionS[i]);
		}
	}

	protected class DFA271 extends DFA {

		public DFA271(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 271;
			this.eot = DFA271_eot;
			this.eof = DFA271_eof;
			this.min = DFA271_min;
			this.max = DFA271_max;
			this.accept = DFA271_accept;
			this.special = DFA271_special;
			this.transition = DFA271_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1042:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA271_1 = input.LA(1);
						 
						int index271_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA271_1==EOF||(LA271_1 >= AT_IDENT && LA271_1 <= AT_SIGN)||(LA271_1 >= BOTTOMCENTER_SYM && LA271_1 <= BOTTOMRIGHT_SYM)||(LA271_1 >= CHARSET_SYM && LA271_1 <= COLON)||LA271_1==COUNTER_STYLE_SYM||LA271_1==DCOLON||LA271_1==DOT||LA271_1==FONT_FACE_SYM||(LA271_1 >= GEN && LA271_1 <= GREATER)||(LA271_1 >= HASH && LA271_1 <= HASH_SYMBOL)||LA271_1==IDENT||LA271_1==IMPORT_SYM||(LA271_1 >= LBRACE && LA271_1 <= LEFTTOP_SYM)||LA271_1==LESS_AND||(LA271_1 >= MEDIA_SYM && LA271_1 <= MOZ_DOCUMENT_SYM)||LA271_1==NAMESPACE_SYM||LA271_1==PAGE_SYM||(LA271_1 >= PIPE && LA271_1 <= PLUS)||LA271_1==RBRACE||(LA271_1 >= RIGHTBOTTOM_SYM && LA271_1 <= RPAREN)||(LA271_1 >= SASS_AT_ROOT && LA271_1 <= SASS_ELSE)||(LA271_1 >= SASS_ERROR && LA271_1 <= SASS_MIXIN)||(LA271_1 >= SASS_RETURN && LA271_1 <= SEMI)||LA271_1==STAR||LA271_1==TILDE||(LA271_1 >= TOPCENTER_SYM && LA271_1 <= TOPRIGHT_SYM)||LA271_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA271_1==COMMENT||LA271_1==NL||LA271_1==WS) ) {s = 1;}
						else if ( (LA271_1==COMMA) && (synpred36_Css3())) {s = 3;}
						 
						input.seek(index271_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA271_0 = input.LA(1);
						 
						int index271_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {s = 1;}
						else if ( (LA271_0==EOF||(LA271_0 >= AT_IDENT && LA271_0 <= AT_SIGN)||(LA271_0 >= BOTTOMCENTER_SYM && LA271_0 <= BOTTOMRIGHT_SYM)||(LA271_0 >= CHARSET_SYM && LA271_0 <= COLON)||LA271_0==COUNTER_STYLE_SYM||LA271_0==DCOLON||LA271_0==DOT||LA271_0==FONT_FACE_SYM||(LA271_0 >= GEN && LA271_0 <= GREATER)||(LA271_0 >= HASH && LA271_0 <= HASH_SYMBOL)||LA271_0==IDENT||LA271_0==IMPORT_SYM||(LA271_0 >= LBRACE && LA271_0 <= LEFTTOP_SYM)||LA271_0==LESS_AND||(LA271_0 >= MEDIA_SYM && LA271_0 <= MOZ_DOCUMENT_SYM)||LA271_0==NAMESPACE_SYM||LA271_0==PAGE_SYM||(LA271_0 >= PIPE && LA271_0 <= PLUS)||LA271_0==RBRACE||(LA271_0 >= RIGHTBOTTOM_SYM && LA271_0 <= RPAREN)||(LA271_0 >= SASS_AT_ROOT && LA271_0 <= SASS_ELSE)||(LA271_0 >= SASS_EXTEND && LA271_0 <= SASS_MIXIN)||(LA271_0 >= SASS_RETURN && LA271_0 <= SEMI)||LA271_0==STAR||LA271_0==TILDE||(LA271_0 >= TOPCENTER_SYM && LA271_0 <= TOPRIGHT_SYM)||LA271_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA271_0==COMMA) && (synpred36_Css3())) {s = 3;}
						 
						input.seek(index271_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 271, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA277_eotS =
		"\110\uffff";
	static final String DFA277_eofS =
		"\1\2\107\uffff";
	static final String DFA277_minS =
		"\1\5\1\0\1\uffff\1\0\1\uffff\7\0\2\uffff\1\0\1\uffff\4\0\1\uffff\11\0"+
		"\1\uffff\1\0\3\uffff\6\0\1\uffff\2\0\11\uffff\1\0\2\uffff\1\0\17\uffff";
	static final String DFA277_maxS =
		"\1\u0092\1\0\1\uffff\1\0\1\uffff\7\0\2\uffff\1\0\1\uffff\4\0\1\uffff\11"+
		"\0\1\uffff\1\0\3\uffff\6\0\1\uffff\2\0\11\uffff\1\0\2\uffff\1\0\17\uffff";
	static final String DFA277_acceptS =
		"\2\uffff\1\3\56\uffff\4\1\1\uffff\1\1\1\2\1\uffff\17\2";
	static final String DFA277_specialS =
		"\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff\1\12"+
		"\1\uffff\1\13\1\14\1\15\1\16\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
		"\1\26\1\27\1\uffff\1\30\3\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff"+
		"\1\37\1\40\11\uffff\1\41\2\uffff\1\42\17\uffff}>";
	static final String[] DFA277_transitionS = {
			"\1\77\1\21\1\37\2\uffff\5\53\3\uffff\1\53\2\2\1\1\1\uffff\1\50\1\2\1"+
			"\61\1\62\2\uffff\1\2\1\103\1\2\1\uffff\1\74\3\uffff\1\76\1\uffff\1\43"+
			"\1\101\1\uffff\1\10\1\35\1\66\1\uffff\1\20\1\6\2\uffff\1\5\1\3\1\32\5"+
			"\uffff\2\2\3\53\1\73\1\63\1\16\1\104\1\64\1\2\1\uffff\1\107\1\uffff\1"+
			"\46\1\7\1\44\5\uffff\1\53\1\1\3\uffff\1\67\1\71\3\uffff\1\34\1\72\1\106"+
			"\1\2\1\65\2\uffff\1\2\1\uffff\1\75\1\102\3\53\1\2\1\uffff\1\33\1\31\1"+
			"\23\1\2\1\27\1\53\2\uffff\1\47\1\2\1\26\1\52\1\2\1\25\1\22\1\11\1\uffff"+
			"\1\53\1\12\1\23\1\30\1\2\1\uffff\1\2\1\13\1\uffff\1\70\1\100\5\53\2\uffff"+
			"\1\105\3\uffff\1\45\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA277_eot = DFA.unpackEncodedString(DFA277_eotS);
	static final short[] DFA277_eof = DFA.unpackEncodedString(DFA277_eofS);
	static final char[] DFA277_min = DFA.unpackEncodedStringToUnsignedChars(DFA277_minS);
	static final char[] DFA277_max = DFA.unpackEncodedStringToUnsignedChars(DFA277_maxS);
	static final short[] DFA277_accept = DFA.unpackEncodedString(DFA277_acceptS);
	static final short[] DFA277_special = DFA.unpackEncodedString(DFA277_specialS);
	static final short[][] DFA277_transition;

	static {
		int numStates = DFA277_transitionS.length;
		DFA277_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA277_transition[i] = DFA.unpackEncodedString(DFA277_transitionS[i]);
		}
	}

	protected class DFA277 extends DFA {

		public DFA277(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 277;
			this.eot = DFA277_eot;
			this.eof = DFA277_eof;
			this.min = DFA277_min;
			this.max = DFA277_max;
			this.accept = DFA277_accept;
			this.special = DFA277_special;
			this.transition = DFA277_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1059:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA277_0 = input.LA(1);
						 
						int index277_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA277_0==COMMENT||LA277_0==NL||LA277_0==WS) ) {s = 1;}
						else if ( (LA277_0==EOF||(LA277_0 >= COLON && LA277_0 <= COMMA)||LA277_0==CP_DOTS||LA277_0==DCOLON||LA277_0==DOT||(LA277_0 >= LBRACE && LA277_0 <= LBRACKET)||LA277_0==LESS_REST||LA277_0==PIPE||LA277_0==RBRACE||LA277_0==RPAREN||LA277_0==SASS_DEFAULT||LA277_0==SASS_EXTEND_ONLY_SELECTOR||LA277_0==SASS_GLOBAL||LA277_0==SEMI||LA277_0==STAR) ) {s = 2;}
						else if ( (LA277_0==IMPORTANT_SYM) ) {s = 3;}
						else if ( (LA277_0==IDENT) ) {s = 5;}
						else if ( (LA277_0==HASH_SYMBOL) ) {s = 6;}
						else if ( (LA277_0==MINUS) ) {s = 7;}
						else if ( (LA277_0==GEN) ) {s = 8;}
						else if ( (LA277_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA277_0==SASS_VAR) ) {s = 10;}
						else if ( (LA277_0==STRING) ) {s = 11;}
						else if ( (LA277_0==LESS_AND) ) {s = 14;}
						else if ( (LA277_0==HASH) ) {s = 16;}
						else if ( (LA277_0==AT_IDENT) ) {s = 17;}
						else if ( (LA277_0==SASS_INCLUDE) ) {s = 18;}
						else if ( (LA277_0==SASS_DEBUG||LA277_0==SASS_WARN) ) {s = 19;}
						else if ( (LA277_0==SASS_IF) ) {s = 21;}
						else if ( (LA277_0==SASS_FOR) ) {s = 22;}
						else if ( (LA277_0==SASS_EACH) ) {s = 23;}
						else if ( (LA277_0==SASS_WHILE) ) {s = 24;}
						else if ( (LA277_0==SASS_CONTENT) ) {s = 25;}
						else if ( (LA277_0==IMPORT_SYM) ) {s = 26;}
						else if ( (LA277_0==SASS_AT_ROOT) ) {s = 27;}
						else if ( (LA277_0==PAGE_SYM) ) {s = 28;}
						else if ( (LA277_0==GREATER) ) {s = 29;}
						else if ( (LA277_0==AT_SIGN) ) {s = 31;}
						else if ( (LA277_0==FONT_FACE_SYM) ) {s = 35;}
						else if ( (LA277_0==MOZ_DOCUMENT_SYM) ) {s = 36;}
						else if ( (LA277_0==WEBKIT_KEYFRAMES_SYM) ) {s = 37;}
						else if ( (LA277_0==MEDIA_SYM) ) {s = 38;}
						else if ( (LA277_0==SASS_EXTEND) ) {s = 39;}
						else if ( (LA277_0==COUNTER_STYLE_SYM) ) {s = 40;}
						else if ( (LA277_0==SASS_FUNCTION) ) {s = 42;}
						else if ( ((LA277_0 >= BOTTOMCENTER_SYM && LA277_0 <= BOTTOMRIGHT_SYM)||LA277_0==CHARSET_SYM||(LA277_0 >= LEFTBOTTOM_SYM && LA277_0 <= LEFTTOP_SYM)||LA277_0==NAMESPACE_SYM||(LA277_0 >= RIGHTBOTTOM_SYM && LA277_0 <= RIGHTTOP_SYM)||LA277_0==SASS_ELSE||LA277_0==SASS_RETURN||(LA277_0 >= TOPCENTER_SYM && LA277_0 <= TOPRIGHT_SYM)) ) {s = 43;}
						else if ( (LA277_0==CP_EQ) && (synpred38_Css3())) {s = 49;}
						else if ( (LA277_0==CP_NOT_EQ) && (synpred38_Css3())) {s = 50;}
						else if ( (LA277_0==LESS) && (synpred38_Css3())) {s = 51;}
						else if ( (LA277_0==LESS_OR_EQ) && (synpred38_Css3())) {s = 52;}
						else if ( (LA277_0==PLUS) ) {s = 53;}
						else if ( (LA277_0==GREATER_OR_EQ) && (synpred38_Css3())) {s = 54;}
						else if ( (LA277_0==NOT) && (synpred39_Css3())) {s = 55;}
						else if ( (LA277_0==TILDE) ) {s = 56;}
						else if ( (LA277_0==NUMBER) && (synpred39_Css3())) {s = 57;}
						else if ( (LA277_0==PERCENTAGE) && (synpred39_Css3())) {s = 58;}
						else if ( (LA277_0==LENGTH) && (synpred39_Css3())) {s = 59;}
						else if ( (LA277_0==EMS) && (synpred39_Css3())) {s = 60;}
						else if ( (LA277_0==REM) && (synpred39_Css3())) {s = 61;}
						else if ( (LA277_0==EXS) && (synpred39_Css3())) {s = 62;}
						else if ( (LA277_0==ANGLE) && (synpred39_Css3())) {s = 63;}
						else if ( (LA277_0==TIME) && (synpred39_Css3())) {s = 64;}
						else if ( (LA277_0==FREQ) && (synpred39_Css3())) {s = 65;}
						else if ( (LA277_0==RESOLUTION) && (synpred39_Css3())) {s = 66;}
						else if ( (LA277_0==DIMENSION) && (synpred39_Css3())) {s = 67;}
						else if ( (LA277_0==LESS_JS_STRING) && (synpred39_Css3())) {s = 68;}
						else if ( (LA277_0==URI) && (synpred39_Css3())) {s = 69;}
						else if ( (LA277_0==PERCENTAGE_SYMBOL) && (synpred39_Css3())) {s = 70;}
						else if ( (LA277_0==LPAREN) && (synpred39_Css3())) {s = 71;}
						 
						input.seek(index277_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA277_1 = input.LA(1);
						 
						int index277_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 54;}
						else if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA277_3 = input.LA(1);
						 
						int index277_3 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_3);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA277_5 = input.LA(1);
						 
						int index277_5 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred38_Css3()&&(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")))) ) {s = 54;}
						else if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA277_6 = input.LA(1);
						 
						int index277_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA277_7 = input.LA(1);
						 
						int index277_7 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index277_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA277_8 = input.LA(1);
						 
						int index277_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA277_9 = input.LA(1);
						 
						int index277_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA277_10 = input.LA(1);
						 
						int index277_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred39_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 71;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 2;}
						 
						input.seek(index277_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA277_11 = input.LA(1);
						 
						int index277_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA277_14 = input.LA(1);
						 
						int index277_14 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_14);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA277_16 = input.LA(1);
						 
						int index277_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_16);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA277_17 = input.LA(1);
						 
						int index277_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_17);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA277_18 = input.LA(1);
						 
						int index277_18 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( ((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_18);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA277_19 = input.LA(1);
						 
						int index277_19 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_19);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA277_21 = input.LA(1);
						 
						int index277_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_21);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA277_22 = input.LA(1);
						 
						int index277_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_22);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA277_23 = input.LA(1);
						 
						int index277_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_23);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA277_24 = input.LA(1);
						 
						int index277_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_24);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA277_25 = input.LA(1);
						 
						int index277_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_25);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA277_26 = input.LA(1);
						 
						int index277_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")))) ) {s = 2;}
						 
						input.seek(index277_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA277_27 = input.LA(1);
						 
						int index277_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_27);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA277_28 = input.LA(1);
						 
						int index277_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_28);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA277_29 = input.LA(1);
						 
						int index277_29 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 54;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_29);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA277_31 = input.LA(1);
						 
						int index277_31 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred39_Css3())) ) {s = 71;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index277_31);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA277_35 = input.LA(1);
						 
						int index277_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_35);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA277_36 = input.LA(1);
						 
						int index277_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_36);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA277_37 = input.LA(1);
						 
						int index277_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_37);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA277_38 = input.LA(1);
						 
						int index277_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_38);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA277_39 = input.LA(1);
						 
						int index277_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_39);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA277_40 = input.LA(1);
						 
						int index277_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_40);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA277_42 = input.LA(1);
						 
						int index277_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 2;}
						 
						input.seek(index277_42);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA277_43 = input.LA(1);
						 
						int index277_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {s = 71;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 2;}
						 
						input.seek(index277_43);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA277_53 = input.LA(1);
						 
						int index277_53 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_53);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA277_56 = input.LA(1);
						 
						int index277_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred39_Css3()) ) {s = 71;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index277_56);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 277, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA291_eotS =
		"\111\uffff";
	static final String DFA291_eofS =
		"\1\2\110\uffff";
	static final String DFA291_minS =
		"\1\5\1\0\13\uffff\1\0\31\uffff\1\0\5\uffff\1\0\33\uffff";
	static final String DFA291_maxS =
		"\1\u0092\1\0\13\uffff\1\0\31\uffff\1\0\5\uffff\1\0\33\uffff";
	static final String DFA291_acceptS =
		"\2\uffff\1\2\105\uffff\1\1";
	static final String DFA291_specialS =
		"\1\0\1\1\13\uffff\1\2\31\uffff\1\3\5\uffff\1\4\33\uffff}>";
	static final String[] DFA291_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\1\1\uffff\4\2\2\uffff\3\2\1\uffff\1\2"+
			"\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\1\3\uffff\2\2\3"+
			"\uffff\4\2\1\47\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\10\2\1\uffff"+
			"\5\2\1\110\1\55\1\2\1\uffff\7\2\2\uffff\1\2\3\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA291_eot = DFA.unpackEncodedString(DFA291_eotS);
	static final short[] DFA291_eof = DFA.unpackEncodedString(DFA291_eofS);
	static final char[] DFA291_min = DFA.unpackEncodedStringToUnsignedChars(DFA291_minS);
	static final char[] DFA291_max = DFA.unpackEncodedStringToUnsignedChars(DFA291_maxS);
	static final short[] DFA291_accept = DFA.unpackEncodedString(DFA291_acceptS);
	static final short[] DFA291_special = DFA.unpackEncodedString(DFA291_specialS);
	static final short[][] DFA291_transition;

	static {
		int numStates = DFA291_transitionS.length;
		DFA291_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA291_transition[i] = DFA.unpackEncodedString(DFA291_transitionS[i]);
		}
	}

	protected class DFA291 extends DFA {

		public DFA291(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 291;
			this.eot = DFA291_eot;
			this.eof = DFA291_eof;
			this.min = DFA291_min;
			this.max = DFA291_max;
			this.accept = DFA291_accept;
			this.special = DFA291_special;
			this.transition = DFA291_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1101:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA291_0 = input.LA(1);
						 
						int index291_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {s = 1;}
						else if ( (LA291_0==EOF||(LA291_0 >= ANGLE && LA291_0 <= AT_SIGN)||(LA291_0 >= BOTTOMCENTER_SYM && LA291_0 <= BOTTOMRIGHT_SYM)||(LA291_0 >= CHARSET_SYM && LA291_0 <= COMMA)||(LA291_0 >= COUNTER_STYLE_SYM && LA291_0 <= CP_NOT_EQ)||(LA291_0 >= DCOLON && LA291_0 <= DOT)||LA291_0==EMS||LA291_0==EXS||(LA291_0 >= FONT_FACE_SYM && LA291_0 <= FREQ)||(LA291_0 >= GEN && LA291_0 <= GREATER_OR_EQ)||(LA291_0 >= HASH && LA291_0 <= HASH_SYMBOL)||(LA291_0 >= IDENT && LA291_0 <= IMPORT_SYM)||(LA291_0 >= LBRACE && LA291_0 <= LESS_REST)||LA291_0==LPAREN||LA291_0==MEDIA_SYM||LA291_0==MOZ_DOCUMENT_SYM||LA291_0==NAMESPACE_SYM||(LA291_0 >= NOT && LA291_0 <= NUMBER)||(LA291_0 >= PAGE_SYM && LA291_0 <= PIPE)||LA291_0==RBRACE||(LA291_0 >= REM && LA291_0 <= RPAREN)||(LA291_0 >= SASS_AT_ROOT && LA291_0 <= SASS_ELSE)||(LA291_0 >= SASS_EXTEND && LA291_0 <= SASS_MIXIN)||(LA291_0 >= SASS_RETURN && LA291_0 <= SEMI)||LA291_0==STRING||(LA291_0 >= TILDE && LA291_0 <= TOPRIGHT_SYM)||LA291_0==URI||LA291_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA291_0==MINUS) ) {s = 13;}
						else if ( (LA291_0==PLUS) ) {s = 39;}
						else if ( (LA291_0==STAR) ) {s = 45;}
						else if ( (LA291_0==SOLIDUS) && (synpred41_Css3())) {s = 72;}
						 
						input.seek(index291_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA291_1 = input.LA(1);
						 
						int index291_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index291_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA291_13 = input.LA(1);
						 
						int index291_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index291_13);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA291_39 = input.LA(1);
						 
						int index291_39 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index291_39);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA291_45 = input.LA(1);
						 
						int index291_45 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred41_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index291_45);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 291, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA296_eotS =
		"\6\uffff";
	static final String DFA296_eofS =
		"\6\uffff";
	static final String DFA296_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA296_maxS =
		"\1\u0091\1\u0092\3\uffff\1\u0092";
	static final String DFA296_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA296_specialS =
		"\6\uffff}>";
	static final String[] DFA296_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\3\1\2\7\uffff"+
			"\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff\7\2\2\uffff"+
			"\1\2\3\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\4\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\4\2\3\uffff\1\2\1\uffff"+
			"\7\2\2\uffff\1\2\3\uffff\1\2\1\5"
	};

	static final short[] DFA296_eot = DFA.unpackEncodedString(DFA296_eotS);
	static final short[] DFA296_eof = DFA.unpackEncodedString(DFA296_eofS);
	static final char[] DFA296_min = DFA.unpackEncodedStringToUnsignedChars(DFA296_minS);
	static final char[] DFA296_max = DFA.unpackEncodedStringToUnsignedChars(DFA296_maxS);
	static final short[] DFA296_accept = DFA.unpackEncodedString(DFA296_acceptS);
	static final short[] DFA296_special = DFA.unpackEncodedString(DFA296_specialS);
	static final short[][] DFA296_transition;

	static {
		int numStates = DFA296_transitionS.length;
		DFA296_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA296_transition[i] = DFA.unpackEncodedString(DFA296_transitionS[i]);
		}
	}

	protected class DFA296 extends DFA {

		public DFA296(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 296;
			this.eot = DFA296_eot;
			this.eof = DFA296_eof;
			this.min = DFA296_min;
			this.max = DFA296_max;
			this.accept = DFA296_accept;
			this.special = DFA296_special;
			this.transition = DFA296_transition;
		}
		@Override
		public String getDescription() {
			return "1106:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA303_eotS =
		"\4\uffff";
	static final String DFA303_eofS =
		"\4\uffff";
	static final String DFA303_minS =
		"\2\25\2\uffff";
	static final String DFA303_maxS =
		"\2\u0092\2\uffff";
	static final String DFA303_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA303_specialS =
		"\4\uffff}>";
	static final String[] DFA303_transitionS = {
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"\1\1\34\uffff\1\2\7\uffff\1\3\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA303_eot = DFA.unpackEncodedString(DFA303_eotS);
	static final short[] DFA303_eof = DFA.unpackEncodedString(DFA303_eofS);
	static final char[] DFA303_min = DFA.unpackEncodedStringToUnsignedChars(DFA303_minS);
	static final char[] DFA303_max = DFA.unpackEncodedStringToUnsignedChars(DFA303_maxS);
	static final short[] DFA303_accept = DFA.unpackEncodedString(DFA303_acceptS);
	static final short[] DFA303_special = DFA.unpackEncodedString(DFA303_specialS);
	static final short[][] DFA303_transition;

	static {
		int numStates = DFA303_transitionS.length;
		DFA303_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA303_transition[i] = DFA.unpackEncodedString(DFA303_transitionS[i]);
		}
	}

	protected class DFA303 extends DFA {

		public DFA303(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 303;
			this.eot = DFA303_eot;
			this.eof = DFA303_eof;
			this.min = DFA303_min;
			this.max = DFA303_max;
			this.accept = DFA303_accept;
			this.special = DFA303_special;
			this.transition = DFA303_transition;
		}
		@Override
		public String getDescription() {
			return "1122:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA307_eotS =
		"\4\uffff";
	static final String DFA307_eofS =
		"\4\uffff";
	static final String DFA307_minS =
		"\2\25\2\uffff";
	static final String DFA307_maxS =
		"\2\u0092\2\uffff";
	static final String DFA307_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA307_specialS =
		"\4\uffff}>";
	static final String[] DFA307_transitionS = {
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"\1\1\44\uffff\1\3\13\uffff\1\2\12\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA307_eot = DFA.unpackEncodedString(DFA307_eotS);
	static final short[] DFA307_eof = DFA.unpackEncodedString(DFA307_eofS);
	static final char[] DFA307_min = DFA.unpackEncodedStringToUnsignedChars(DFA307_minS);
	static final char[] DFA307_max = DFA.unpackEncodedStringToUnsignedChars(DFA307_maxS);
	static final short[] DFA307_accept = DFA.unpackEncodedString(DFA307_acceptS);
	static final short[] DFA307_special = DFA.unpackEncodedString(DFA307_specialS);
	static final short[][] DFA307_transition;

	static {
		int numStates = DFA307_transitionS.length;
		DFA307_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA307_transition[i] = DFA.unpackEncodedString(DFA307_transitionS[i]);
		}
	}

	protected class DFA307 extends DFA {

		public DFA307(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 307;
			this.eot = DFA307_eot;
			this.eof = DFA307_eof;
			this.min = DFA307_min;
			this.max = DFA307_max;
			this.accept = DFA307_accept;
			this.special = DFA307_special;
			this.transition = DFA307_transition;
		}
		@Override
		public String getDescription() {
			return "1124:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA318_eotS =
		"\4\uffff";
	static final String DFA318_eofS =
		"\2\3\2\uffff";
	static final String DFA318_minS =
		"\2\6\2\uffff";
	static final String DFA318_maxS =
		"\2\u0092\2\uffff";
	static final String DFA318_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA318_specialS =
		"\4\uffff}>";
	static final String[] DFA318_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\5\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA318_eot = DFA.unpackEncodedString(DFA318_eotS);
	static final short[] DFA318_eof = DFA.unpackEncodedString(DFA318_eofS);
	static final char[] DFA318_min = DFA.unpackEncodedStringToUnsignedChars(DFA318_minS);
	static final char[] DFA318_max = DFA.unpackEncodedStringToUnsignedChars(DFA318_maxS);
	static final short[] DFA318_accept = DFA.unpackEncodedString(DFA318_acceptS);
	static final short[] DFA318_special = DFA.unpackEncodedString(DFA318_specialS);
	static final short[][] DFA318_transition;

	static {
		int numStates = DFA318_transitionS.length;
		DFA318_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA318_transition[i] = DFA.unpackEncodedString(DFA318_transitionS[i]);
		}
	}

	protected class DFA318 extends DFA {

		public DFA318(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 318;
			this.eot = DFA318_eot;
			this.eof = DFA318_eof;
			this.min = DFA318_min;
			this.max = DFA318_max;
			this.accept = DFA318_accept;
			this.special = DFA318_special;
			this.transition = DFA318_transition;
		}
		@Override
		public String getDescription() {
			return "1136:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA320_eotS =
		"\4\uffff";
	static final String DFA320_eofS =
		"\2\3\2\uffff";
	static final String DFA320_minS =
		"\2\6\2\uffff";
	static final String DFA320_maxS =
		"\2\u0092\2\uffff";
	static final String DFA320_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA320_specialS =
		"\4\uffff}>";
	static final String[] DFA320_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\2\uffff\3\3\5\uffff\1\2\4\3"+
			"\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff\5\3\1\uffff\3\3\1\uffff"+
			"\5\3\1\uffff\1\3\2\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA320_eot = DFA.unpackEncodedString(DFA320_eotS);
	static final short[] DFA320_eof = DFA.unpackEncodedString(DFA320_eofS);
	static final char[] DFA320_min = DFA.unpackEncodedStringToUnsignedChars(DFA320_minS);
	static final char[] DFA320_max = DFA.unpackEncodedStringToUnsignedChars(DFA320_maxS);
	static final short[] DFA320_accept = DFA.unpackEncodedString(DFA320_acceptS);
	static final short[] DFA320_special = DFA.unpackEncodedString(DFA320_specialS);
	static final short[][] DFA320_transition;

	static {
		int numStates = DFA320_transitionS.length;
		DFA320_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA320_transition[i] = DFA.unpackEncodedString(DFA320_transitionS[i]);
		}
	}

	protected class DFA320 extends DFA {

		public DFA320(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 320;
			this.eot = DFA320_eot;
			this.eof = DFA320_eof;
			this.min = DFA320_min;
			this.max = DFA320_max;
			this.accept = DFA320_accept;
			this.special = DFA320_special;
			this.transition = DFA320_transition;
		}
		@Override
		public String getDescription() {
			return "1136:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA332_eotS =
		"\7\uffff";
	static final String DFA332_eofS =
		"\7\uffff";
	static final String DFA332_minS =
		"\3\5\1\uffff\1\5\1\uffff\1\5";
	static final String DFA332_maxS =
		"\1\u0091\2\u0092\1\uffff\1\u0092\1\uffff\1\u0092";
	static final String DFA332_acceptS =
		"\3\uffff\1\2\1\uffff\1\1\1\uffff";
	static final String DFA332_specialS =
		"\7\uffff}>";
	static final String[] DFA332_transitionS = {
			"\1\3\1\1\1\3\2\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\1\1\1\3\1\uffff\1\3\3\uffff\2\3\2\uffff\2\3"+
			"\1\1\5\uffff\1\3\1\uffff\3\1\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\1"+
			"\1\3\1\1\5\uffff\1\1\4\uffff\2\3\3\uffff\1\1\2\3\1\uffff\1\3\4\uffff"+
			"\2\3\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\2\1\1\uffff\3\1"+
			"\1\uffff\1\1\1\2\2\1\3\uffff\1\3\1\uffff\2\3\5\1\2\uffff\1\3\3\uffff"+
			"\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\4\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\4\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\4",
			"",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\5\1\3\1\6\1\uffff\4\3\3\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\7\uffff"+
			"\10\3\2\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\6\3\uffff\2\3\3\uffff\3\3"+
			"\1\uffff\1\3\4\uffff\6\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\10\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\6"
	};

	static final short[] DFA332_eot = DFA.unpackEncodedString(DFA332_eotS);
	static final short[] DFA332_eof = DFA.unpackEncodedString(DFA332_eofS);
	static final char[] DFA332_min = DFA.unpackEncodedStringToUnsignedChars(DFA332_minS);
	static final char[] DFA332_max = DFA.unpackEncodedStringToUnsignedChars(DFA332_maxS);
	static final short[] DFA332_accept = DFA.unpackEncodedString(DFA332_acceptS);
	static final short[] DFA332_special = DFA.unpackEncodedString(DFA332_specialS);
	static final short[][] DFA332_transition;

	static {
		int numStates = DFA332_transitionS.length;
		DFA332_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA332_transition[i] = DFA.unpackEncodedString(DFA332_transitionS[i]);
		}
	}

	protected class DFA332 extends DFA {

		public DFA332(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 332;
			this.eot = DFA332_eot;
			this.eof = DFA332_eof;
			this.min = DFA332_min;
			this.max = DFA332_max;
			this.accept = DFA332_accept;
			this.special = DFA332_special;
			this.transition = DFA332_transition;
		}
		@Override
		public String getDescription() {
			return "1162:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA335_eotS =
		"\5\uffff";
	static final String DFA335_eofS =
		"\5\uffff";
	static final String DFA335_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA335_maxS =
		"\1\177\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA335_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA335_specialS =
		"\5\uffff}>";
	static final String[] DFA335_transitionS = {
			"\1\1\3\uffff\1\2\53\uffff\1\2\43\uffff\1\2\26\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\12\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\7\uffff\5\4\6\uffff"+
			"\1\4\1\3",
			""
	};

	static final short[] DFA335_eot = DFA.unpackEncodedString(DFA335_eotS);
	static final short[] DFA335_eof = DFA.unpackEncodedString(DFA335_eofS);
	static final char[] DFA335_min = DFA.unpackEncodedStringToUnsignedChars(DFA335_minS);
	static final char[] DFA335_max = DFA.unpackEncodedStringToUnsignedChars(DFA335_maxS);
	static final short[] DFA335_accept = DFA.unpackEncodedString(DFA335_acceptS);
	static final short[] DFA335_special = DFA.unpackEncodedString(DFA335_specialS);
	static final short[][] DFA335_transition;

	static {
		int numStates = DFA335_transitionS.length;
		DFA335_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA335_transition[i] = DFA.unpackEncodedString(DFA335_transitionS[i]);
		}
	}

	protected class DFA335 extends DFA {

		public DFA335(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 335;
			this.eot = DFA335_eot;
			this.eof = DFA335_eof;
			this.min = DFA335_min;
			this.max = DFA335_max;
			this.accept = DFA335_accept;
			this.special = DFA335_special;
			this.transition = DFA335_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1177:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA351_eotS =
		"\4\uffff";
	static final String DFA351_eofS =
		"\4\uffff";
	static final String DFA351_minS =
		"\2\24\2\uffff";
	static final String DFA351_maxS =
		"\2\u0092\2\uffff";
	static final String DFA351_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA351_specialS =
		"\4\uffff}>";
	static final String[] DFA351_transitionS = {
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\1\1\34\uffff\1\3\7\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA351_eot = DFA.unpackEncodedString(DFA351_eotS);
	static final short[] DFA351_eof = DFA.unpackEncodedString(DFA351_eofS);
	static final char[] DFA351_min = DFA.unpackEncodedStringToUnsignedChars(DFA351_minS);
	static final char[] DFA351_max = DFA.unpackEncodedStringToUnsignedChars(DFA351_maxS);
	static final short[] DFA351_accept = DFA.unpackEncodedString(DFA351_acceptS);
	static final short[] DFA351_special = DFA.unpackEncodedString(DFA351_specialS);
	static final short[][] DFA351_transition;

	static {
		int numStates = DFA351_transitionS.length;
		DFA351_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA351_transition[i] = DFA.unpackEncodedString(DFA351_transitionS[i]);
		}
	}

	protected class DFA351 extends DFA {

		public DFA351(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 351;
			this.eot = DFA351_eot;
			this.eof = DFA351_eof;
			this.min = DFA351_min;
			this.max = DFA351_max;
			this.accept = DFA351_accept;
			this.special = DFA351_special;
			this.transition = DFA351_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1193:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA363_eotS =
		"\13\uffff";
	static final String DFA363_eofS =
		"\13\uffff";
	static final String DFA363_minS =
		"\1\7\1\72\2\uffff\4\25\2\0\1\uffff";
	static final String DFA363_maxS =
		"\1\u0092\1\72\2\uffff\4\u0092\2\0\1\uffff";
	static final String DFA363_acceptS =
		"\2\uffff\1\2\1\3\6\uffff\1\1";
	static final String DFA363_specialS =
		"\10\uffff\1\0\1\1\1\uffff}>";
	static final String[] DFA363_transitionS = {
			"\1\1\13\uffff\3\3\7\uffff\1\3\1\2\1\3\13\uffff\1\3\2\uffff\2\3\2\uffff"+
			"\1\2\7\uffff\2\3\3\uffff\1\2\1\uffff\1\3\7\uffff\1\2\7\uffff\1\3\14\uffff"+
			"\1\3\2\uffff\1\3\6\uffff\1\3\12\uffff\1\3\13\uffff\1\3\4\uffff\1\3\15"+
			"\uffff\1\3",
			"\1\4",
			"",
			"",
			"\1\5\34\uffff\1\6\36\uffff\1\5\100\uffff\1\5",
			"\1\5\34\uffff\1\6\36\uffff\1\5\100\uffff\1\5",
			"\1\7\73\uffff\1\7\17\uffff\1\10\60\uffff\1\7",
			"\1\7\73\uffff\1\7\17\uffff\1\11\60\uffff\1\7",
			"\1\uffff",
			"\1\uffff",
			""
	};

	static final short[] DFA363_eot = DFA.unpackEncodedString(DFA363_eotS);
	static final short[] DFA363_eof = DFA.unpackEncodedString(DFA363_eofS);
	static final char[] DFA363_min = DFA.unpackEncodedStringToUnsignedChars(DFA363_minS);
	static final char[] DFA363_max = DFA.unpackEncodedStringToUnsignedChars(DFA363_maxS);
	static final short[] DFA363_accept = DFA.unpackEncodedString(DFA363_acceptS);
	static final short[] DFA363_special = DFA.unpackEncodedString(DFA363_specialS);
	static final short[][] DFA363_transition;

	static {
		int numStates = DFA363_transitionS.length;
		DFA363_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA363_transition[i] = DFA.unpackEncodedString(DFA363_transitionS[i]);
		}
	}

	protected class DFA363 extends DFA {

		public DFA363(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 363;
			this.eot = DFA363_eot;
			this.eof = DFA363_eof;
			this.min = DFA363_min;
			this.max = DFA363_max;
			this.accept = DFA363_accept;
			this.special = DFA363_special;
			this.transition = DFA363_transition;
		}
		@Override
		public String getDescription() {
			return "1226:33: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA363_8 = input.LA(1);
						 
						int index363_8 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(isLessSource(),"isLessSource()"),""))) ) {s = 10;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 3;}
						 
						input.seek(index363_8);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA363_9 = input.LA(1);
						 
						int index363_9 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(isLessSource(),"isLessSource()"),""))) ) {s = 10;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 3;}
						 
						input.seek(index363_9);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 363, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA375_eotS =
		"\4\uffff";
	static final String DFA375_eofS =
		"\4\uffff";
	static final String DFA375_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA375_maxS =
		"\2\u0092\2\uffff";
	static final String DFA375_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA375_specialS =
		"\4\uffff}>";
	static final String[] DFA375_transitionS = {
			"\1\1\73\uffff\1\1\17\uffff\1\2\35\uffff\1\2\22\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\1\2\1\uffff"+
			"\1\2\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\6\uffff"+
			"\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\5\2\1\uffff"+
			"\3\2\1\3\5\2\1\uffff\1\2\2\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA375_eot = DFA.unpackEncodedString(DFA375_eotS);
	static final short[] DFA375_eof = DFA.unpackEncodedString(DFA375_eofS);
	static final char[] DFA375_min = DFA.unpackEncodedStringToUnsignedChars(DFA375_minS);
	static final char[] DFA375_max = DFA.unpackEncodedStringToUnsignedChars(DFA375_maxS);
	static final short[] DFA375_accept = DFA.unpackEncodedString(DFA375_acceptS);
	static final short[] DFA375_special = DFA.unpackEncodedString(DFA375_specialS);
	static final short[][] DFA375_transition;

	static {
		int numStates = DFA375_transitionS.length;
		DFA375_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA375_transition[i] = DFA.unpackEncodedString(DFA375_transitionS[i]);
		}
	}

	protected class DFA375 extends DFA {

		public DFA375(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 375;
			this.eot = DFA375_eot;
			this.eof = DFA375_eof;
			this.min = DFA375_min;
			this.max = DFA375_max;
			this.accept = DFA375_accept;
			this.special = DFA375_special;
			this.transition = DFA375_transition;
		}
		@Override
		public String getDescription() {
			return "1269:43: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA380_eotS =
		"\10\uffff";
	static final String DFA380_eofS =
		"\2\4\6\uffff";
	static final String DFA380_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA380_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA380_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA380_specialS =
		"\10\uffff}>";
	static final String[] DFA380_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4"+
			"\1\uffff\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff"+
			"\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA380_eot = DFA.unpackEncodedString(DFA380_eotS);
	static final short[] DFA380_eof = DFA.unpackEncodedString(DFA380_eofS);
	static final char[] DFA380_min = DFA.unpackEncodedStringToUnsignedChars(DFA380_minS);
	static final char[] DFA380_max = DFA.unpackEncodedStringToUnsignedChars(DFA380_maxS);
	static final short[] DFA380_accept = DFA.unpackEncodedString(DFA380_acceptS);
	static final short[] DFA380_special = DFA.unpackEncodedString(DFA380_specialS);
	static final short[][] DFA380_transition;

	static {
		int numStates = DFA380_transitionS.length;
		DFA380_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA380_transition[i] = DFA.unpackEncodedString(DFA380_transitionS[i]);
		}
	}

	protected class DFA380 extends DFA {

		public DFA380(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 380;
			this.eot = DFA380_eot;
			this.eof = DFA380_eof;
			this.min = DFA380_min;
			this.max = DFA380_max;
			this.accept = DFA380_accept;
			this.special = DFA380_special;
			this.transition = DFA380_transition;
		}
		@Override
		public String getDescription() {
			return "1294:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA388_eotS =
		"\5\uffff";
	static final String DFA388_eofS =
		"\5\uffff";
	static final String DFA388_minS =
		"\1\157\1\25\1\uffff\1\25\1\uffff";
	static final String DFA388_maxS =
		"\1\160\1\u0092\1\uffff\1\u0092\1\uffff";
	static final String DFA388_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA388_specialS =
		"\5\uffff}>";
	static final String[] DFA388_transitionS = {
			"\1\1\1\2",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\3\34\uffff\1\2\7\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			""
	};

	static final short[] DFA388_eot = DFA.unpackEncodedString(DFA388_eotS);
	static final short[] DFA388_eof = DFA.unpackEncodedString(DFA388_eofS);
	static final char[] DFA388_min = DFA.unpackEncodedStringToUnsignedChars(DFA388_minS);
	static final char[] DFA388_max = DFA.unpackEncodedStringToUnsignedChars(DFA388_maxS);
	static final short[] DFA388_accept = DFA.unpackEncodedString(DFA388_acceptS);
	static final short[] DFA388_special = DFA.unpackEncodedString(DFA388_specialS);
	static final short[][] DFA388_transition;

	static {
		int numStates = DFA388_transitionS.length;
		DFA388_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA388_transition[i] = DFA.unpackEncodedString(DFA388_transitionS[i]);
		}
	}

	protected class DFA388 extends DFA {

		public DFA388(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 388;
			this.eot = DFA388_eot;
			this.eof = DFA388_eof;
			this.min = DFA388_min;
			this.max = DFA388_max;
			this.accept = DFA388_accept;
			this.special = DFA388_special;
			this.transition = DFA388_transition;
		}
		@Override
		public String getDescription() {
			return "1297:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA387_eotS =
		"\10\uffff";
	static final String DFA387_eofS =
		"\2\4\6\uffff";
	static final String DFA387_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA387_maxS =
		"\3\u0092\2\uffff\3\u0092";
	static final String DFA387_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA387_specialS =
		"\10\uffff}>";
	static final String[] DFA387_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\4\4"+
			"\1\uffff\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff"+
			"\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\6\uffff"+
			"\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4"+
			"\2\uffff\1\4\3\uffff\3\4\2\uffff\3\4\1\uffff\1\4\1\5\1\3\5\4\1\uffff"+
			"\3\4\1\uffff\5\4\1\uffff\1\4\2\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7",
			"\1\4\1\uffff\1\6\34\uffff\1\3\7\uffff\1\3\26\uffff\1\6\100\uffff\1\6",
			"\1\4\1\uffff\1\7\34\uffff\1\3\7\uffff\1\3\26\uffff\1\7\100\uffff\1\7"
	};

	static final short[] DFA387_eot = DFA.unpackEncodedString(DFA387_eotS);
	static final short[] DFA387_eof = DFA.unpackEncodedString(DFA387_eofS);
	static final char[] DFA387_min = DFA.unpackEncodedStringToUnsignedChars(DFA387_minS);
	static final char[] DFA387_max = DFA.unpackEncodedStringToUnsignedChars(DFA387_maxS);
	static final short[] DFA387_accept = DFA.unpackEncodedString(DFA387_acceptS);
	static final short[] DFA387_special = DFA.unpackEncodedString(DFA387_specialS);
	static final short[][] DFA387_transition;

	static {
		int numStates = DFA387_transitionS.length;
		DFA387_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA387_transition[i] = DFA.unpackEncodedString(DFA387_transitionS[i]);
		}
	}

	protected class DFA387 extends DFA {

		public DFA387(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 387;
			this.eot = DFA387_eot;
			this.eof = DFA387_eof;
			this.min = DFA387_min;
			this.max = DFA387_max;
			this.accept = DFA387_accept;
			this.special = DFA387_special;
			this.transition = DFA387_transition;
		}
		@Override
		public String getDescription() {
			return "1301:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA393_eotS =
		"\4\uffff";
	static final String DFA393_eofS =
		"\4\uffff";
	static final String DFA393_minS =
		"\2\24\2\uffff";
	static final String DFA393_maxS =
		"\2\u0092\2\uffff";
	static final String DFA393_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA393_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA393_transitionS = {
			"\1\2\1\1\73\uffff\1\1\100\uffff\1\1",
			"\1\2\1\1\34\uffff\1\3\36\uffff\1\1\100\uffff\1\1",
			"",
			""
	};

	static final short[] DFA393_eot = DFA.unpackEncodedString(DFA393_eotS);
	static final short[] DFA393_eof = DFA.unpackEncodedString(DFA393_eofS);
	static final char[] DFA393_min = DFA.unpackEncodedStringToUnsignedChars(DFA393_minS);
	static final char[] DFA393_max = DFA.unpackEncodedStringToUnsignedChars(DFA393_maxS);
	static final short[] DFA393_accept = DFA.unpackEncodedString(DFA393_acceptS);
	static final short[] DFA393_special = DFA.unpackEncodedString(DFA393_specialS);
	static final short[][] DFA393_transition;

	static {
		int numStates = DFA393_transitionS.length;
		DFA393_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA393_transition[i] = DFA.unpackEncodedString(DFA393_transitionS[i]);
		}
	}

	protected class DFA393 extends DFA {

		public DFA393(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 393;
			this.eot = DFA393_eot;
			this.eof = DFA393_eof;
			this.min = DFA393_min;
			this.max = DFA393_max;
			this.accept = DFA393_accept;
			this.special = DFA393_special;
			this.transition = DFA393_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1321:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA393_1 = input.LA(1);
						 
						int index393_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA393_1==IDENT) ) {s = 3;}
						else if ( (LA393_1==COMMENT||LA393_1==NL||LA393_1==WS) ) {s = 1;}
						else if ( (LA393_1==COMMA) && (synpred45_Css3())) {s = 2;}
						 
						input.seek(index393_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA393_0 = input.LA(1);
						 
						int index393_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA393_0==COMMENT||LA393_0==NL||LA393_0==WS) ) {s = 1;}
						else if ( (LA393_0==COMMA) && (synpred45_Css3())) {s = 2;}
						 
						input.seek(index393_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 393, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA413_eotS =
		"\4\uffff";
	static final String DFA413_eofS =
		"\4\uffff";
	static final String DFA413_minS =
		"\2\25\2\uffff";
	static final String DFA413_maxS =
		"\2\u0092\2\uffff";
	static final String DFA413_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA413_specialS =
		"\4\uffff}>";
	static final String[] DFA413_transitionS = {
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"\1\1\35\uffff\1\2\35\uffff\1\1\55\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA413_eot = DFA.unpackEncodedString(DFA413_eotS);
	static final short[] DFA413_eof = DFA.unpackEncodedString(DFA413_eofS);
	static final char[] DFA413_min = DFA.unpackEncodedStringToUnsignedChars(DFA413_minS);
	static final char[] DFA413_max = DFA.unpackEncodedStringToUnsignedChars(DFA413_maxS);
	static final short[] DFA413_accept = DFA.unpackEncodedString(DFA413_acceptS);
	static final short[] DFA413_special = DFA.unpackEncodedString(DFA413_specialS);
	static final short[][] DFA413_transition;

	static {
		int numStates = DFA413_transitionS.length;
		DFA413_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA413_transition[i] = DFA.unpackEncodedString(DFA413_transitionS[i]);
		}
	}

	protected class DFA413 extends DFA {

		public DFA413(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 413;
			this.eot = DFA413_eot;
			this.eof = DFA413_eof;
			this.min = DFA413_min;
			this.max = DFA413_max;
			this.accept = DFA413_accept;
			this.special = DFA413_special;
			this.transition = DFA413_transition;
		}
		@Override
		public String getDescription() {
			return "417:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA432_eotS =
		"\6\uffff";
	static final String DFA432_eofS =
		"\6\uffff";
	static final String DFA432_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA432_maxS =
		"\1\u0084\1\u0092\1\uffff\1\u0092\2\uffff";
	static final String DFA432_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA432_specialS =
		"\6\uffff}>";
	static final String[] DFA432_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\1\2\1\uffff\1\2\12\uffff\2\2\2\uffff\2\2\2"+
			"\uffff\1\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff"+
			"\1\1\10\uffff\1\2\15\uffff\1\2\2\uffff\1\2",
			"\1\3\44\uffff\1\4\26\uffff\1\3\100\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\1\4\1\uffff\1\4\12\uffff\2\4\2"+
			"\uffff\2\4\2\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1"+
			"\4\7\uffff\1\3\13\uffff\2\4\24\uffff\1\4\15\uffff\1\4\2\uffff\1\4\15"+
			"\uffff\1\3",
			"",
			""
	};

	static final short[] DFA432_eot = DFA.unpackEncodedString(DFA432_eotS);
	static final short[] DFA432_eof = DFA.unpackEncodedString(DFA432_eofS);
	static final char[] DFA432_min = DFA.unpackEncodedStringToUnsignedChars(DFA432_minS);
	static final char[] DFA432_max = DFA.unpackEncodedStringToUnsignedChars(DFA432_maxS);
	static final short[] DFA432_accept = DFA.unpackEncodedString(DFA432_acceptS);
	static final short[] DFA432_special = DFA.unpackEncodedString(DFA432_specialS);
	static final short[][] DFA432_transition;

	static {
		int numStates = DFA432_transitionS.length;
		DFA432_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA432_transition[i] = DFA.unpackEncodedString(DFA432_transitionS[i]);
		}
	}

	protected class DFA432 extends DFA {

		public DFA432(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 432;
			this.eot = DFA432_eot;
			this.eof = DFA432_eof;
			this.min = DFA432_min;
			this.max = DFA432_max;
			this.accept = DFA432_accept;
			this.special = DFA432_special;
			this.transition = DFA432_transition;
		}
		@Override
		public String getDescription() {
			return "689:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA427_eotS =
		"\4\uffff";
	static final String DFA427_eofS =
		"\4\uffff";
	static final String DFA427_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA427_maxS =
		"\2\u0092\2\uffff";
	static final String DFA427_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA427_specialS =
		"\4\uffff}>";
	static final String[] DFA427_transitionS = {
			"\1\1\44\uffff\1\2\26\uffff\1\1\100\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\1\3\1\uffff\1\3\12\uffff\2\3\2"+
			"\uffff\2\3\2\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff"+
			"\1\1\13\uffff\2\3\24\uffff\1\3\15\uffff\1\3\2\uffff\1\3\15\uffff\1\1",
			"",
			""
	};

	static final short[] DFA427_eot = DFA.unpackEncodedString(DFA427_eotS);
	static final short[] DFA427_eof = DFA.unpackEncodedString(DFA427_eofS);
	static final char[] DFA427_min = DFA.unpackEncodedStringToUnsignedChars(DFA427_minS);
	static final char[] DFA427_max = DFA.unpackEncodedStringToUnsignedChars(DFA427_maxS);
	static final short[] DFA427_accept = DFA.unpackEncodedString(DFA427_acceptS);
	static final short[] DFA427_special = DFA.unpackEncodedString(DFA427_specialS);
	static final short[][] DFA427_transition;

	static {
		int numStates = DFA427_transitionS.length;
		DFA427_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA427_transition[i] = DFA.unpackEncodedString(DFA427_transitionS[i]);
		}
	}

	protected class DFA427 extends DFA {

		public DFA427(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 427;
			this.eot = DFA427_eot;
			this.eof = DFA427_eof;
			this.min = DFA427_min;
			this.max = DFA427_max;
			this.accept = DFA427_accept;
			this.special = DFA427_special;
			this.transition = DFA427_transition;
		}
		@Override
		public String getDescription() {
			return "689:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA441_eotS =
		"\5\uffff";
	static final String DFA441_eofS =
		"\5\uffff";
	static final String DFA441_minS =
		"\2\5\3\uffff";
	static final String DFA441_maxS =
		"\2\u0092\3\uffff";
	static final String DFA441_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA441_specialS =
		"\5\uffff}>";
	static final String[] DFA441_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff"+
			"\1\3\1\uffff\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff"+
			"\1\4\1\uffff\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA441_eot = DFA.unpackEncodedString(DFA441_eotS);
	static final short[] DFA441_eof = DFA.unpackEncodedString(DFA441_eofS);
	static final char[] DFA441_min = DFA.unpackEncodedStringToUnsignedChars(DFA441_minS);
	static final char[] DFA441_max = DFA.unpackEncodedStringToUnsignedChars(DFA441_maxS);
	static final short[] DFA441_accept = DFA.unpackEncodedString(DFA441_acceptS);
	static final short[] DFA441_special = DFA.unpackEncodedString(DFA441_specialS);
	static final short[][] DFA441_transition;

	static {
		int numStates = DFA441_transitionS.length;
		DFA441_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA441_transition[i] = DFA.unpackEncodedString(DFA441_transitionS[i]);
		}
	}

	protected class DFA441 extends DFA {

		public DFA441(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 441;
			this.eot = DFA441_eot;
			this.eof = DFA441_eof;
			this.min = DFA441_min;
			this.max = DFA441_max;
			this.accept = DFA441_accept;
			this.special = DFA441_special;
			this.transition = DFA441_transition;
		}
		@Override
		public String getDescription() {
			return "924:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA446_eotS =
		"\5\uffff";
	static final String DFA446_eofS =
		"\5\uffff";
	static final String DFA446_minS =
		"\2\5\3\uffff";
	static final String DFA446_maxS =
		"\2\u0092\3\uffff";
	static final String DFA446_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA446_specialS =
		"\5\uffff}>";
	static final String[] DFA446_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\7\uffff\4\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\2\3\1\uffff\3\3\1\uffff\4\3\1\uffff\1\2\1\uffff\1\3\1\uffff"+
			"\7\3\2\uffff\1\3\3\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\7\uffff\4\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\4\4\1\uffff\1\2\1\uffff\1\4\1\uffff"+
			"\7\4\2\uffff\1\4\3\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA446_eot = DFA.unpackEncodedString(DFA446_eotS);
	static final short[] DFA446_eof = DFA.unpackEncodedString(DFA446_eofS);
	static final char[] DFA446_min = DFA.unpackEncodedStringToUnsignedChars(DFA446_minS);
	static final char[] DFA446_max = DFA.unpackEncodedStringToUnsignedChars(DFA446_maxS);
	static final short[] DFA446_accept = DFA.unpackEncodedString(DFA446_acceptS);
	static final short[] DFA446_special = DFA.unpackEncodedString(DFA446_specialS);
	static final short[][] DFA446_transition;

	static {
		int numStates = DFA446_transitionS.length;
		DFA446_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA446_transition[i] = DFA.unpackEncodedString(DFA446_transitionS[i]);
		}
	}

	protected class DFA446 extends DFA {

		public DFA446(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 446;
			this.eot = DFA446_eot;
			this.eof = DFA446_eof;
			this.min = DFA446_min;
			this.max = DFA446_max;
			this.accept = DFA446_accept;
			this.special = DFA446_special;
			this.transition = DFA446_transition;
		}
		@Override
		public String getDescription() {
			return "1007:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet129 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_charSet_in_styleSheet139 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_styleSheet141 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_imports_in_styleSheet155 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet166 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_styleSheet177 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces202 = new BitSet(new long[]{0x0000000000200002L,0x0000000000030000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespaces204 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace220 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace222 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace226 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_namespace228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace233 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_namespace235 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_namespace238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_charSet287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_charSetValue_in_charSet290 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_charSet292 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_charSet295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports323 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports325 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_imports328 = new BitSet(new long[]{0x0010000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0010000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem356 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem358 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem361 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem371 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem407 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem412 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem415 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem418 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem423 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem435 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem462 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000002004L});
	public static final BitSet FOLLOW_LPAREN_in_importItem468 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem470 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem472 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000042004L});
	public static final BitSet FOLLOW_ws_in_importItem474 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002004L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem479 = new BitSet(new long[]{0x7014848000A47C42L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_importItem489 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media510 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_media512 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_media530 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_media538 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media545 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_media547 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_media550 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_mediaBody_in_media560 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_media567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody601 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody611 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody614 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody618 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody645 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_mediaBody647 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody666 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBody669 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody674 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem781 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem784 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem804 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem807 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem810 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem849 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem879 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem889 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem913 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem921 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem934 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList948 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList960 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList963 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004230540L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList965 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList968 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery987 = new BitSet(new long[]{0x0004840000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery989 = new BitSet(new long[]{0x0004840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery996 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1000 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1003 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1005 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1008 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1019 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1023 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1026 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1028 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1031 = new BitSet(new long[]{0x0004000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1044 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1060 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1072 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1076 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1100 = new BitSet(new long[]{0x7014848000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1102 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1105 = new BitSet(new long[]{0x0000000000280000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1107 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1110 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1134 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1137 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1139 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1158 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1178 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1210 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1248 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1258 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_body1261 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1265 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_SEMI_in_body1292 = new BitSet(new long[]{0x7814CC80A0AC7CC2L,0xFBBCDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_body1294 = new BitSet(new long[]{0x7814CC80A08C7CC2L,0xFBBCDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem1435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem1457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem1474 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem1486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem1509 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem1523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem1537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem1551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule1577 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule1585 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule1593 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule1601 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule1609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule1622 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule1626 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule1630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId1640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId1644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId1652 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId1656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule1672 = new BitSet(new long[]{0x7414808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1674 = new BitSet(new long[]{0x7414808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule1679 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule1681 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule1695 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule1706 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule1716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document1727 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1729 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1734 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1736 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document1742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000023800L,0x0000000000042000L});
	public static final BitSet FOLLOW_ws_in_moz_document1744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003800L,0x0000000000002000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document1747 = new BitSet(new long[]{0x0400000000300000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_moz_document1749 = new BitSet(new long[]{0x0400000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document1756 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBCDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_moz_document1758 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBCDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_body_in_moz_document1763 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document1768 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes1805 = new BitSet(new long[]{0x7014808000A47C40L,0x7BB4DCE004030500L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1807 = new BitSet(new long[]{0x7014808000847C40L,0x7BB4DCE004010500L,0x00000000000207C4L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes1810 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1812 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes1816 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1818 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes1825 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes1827 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes1834 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock1846 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1848 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock1852 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock1855 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock1858 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock1862 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock1866 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock1883 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock1885 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1902 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1908 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1912 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1918 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors1921 = new BitSet(new long[]{0x0004000000200000L,0x0000000008020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors1923 = new BitSet(new long[]{0x0004000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1930 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors1936 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors1940 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page1959 = new BitSet(new long[]{0x0404000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page1961 = new BitSet(new long[]{0x0404000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page1966 = new BitSet(new long[]{0x0400000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page1968 = new BitSet(new long[]{0x0400000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page1975 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page1977 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page1990 = new BitSet(new long[]{0x7014848000A47C40L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page1992 = new BitSet(new long[]{0x7014848000847C40L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2035 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2037 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2040 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_SEMI_in_page2046 = new BitSet(new long[]{0x7014848000A47C40L,0xFBB4DCE204030700L,0x00000000000607C2L});
	public static final BitSet FOLLOW_ws_in_page2048 = new BitSet(new long[]{0x7014848000847C40L,0xFBB4DCE204010700L,0x00000000000207C2L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2053 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_margin_in_page2055 = new BitSet(new long[]{0x0000000000200000L,0x8000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_page2058 = new BitSet(new long[]{0x0000000000000000L,0x8000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_page2073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2090 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2092 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2095 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2097 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2108 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_counterStyle2110 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2113 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2117 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2128 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2145 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fontFace2147 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace2158 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_fontFace2160 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace2163 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_fontFace2167 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace2178 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin2192 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_margin2194 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin2197 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_margin2199 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin2202 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_margin2204 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin2207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage2416 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage2418 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property2502 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property2510 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property2518 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property2528 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map2555 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map2557 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map2562 = new BitSet(new long[]{0x7014848000B47C40L,0x7BB4DDE004030700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map2564 = new BitSet(new long[]{0x7014848000947C40L,0x7BB4DDE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map2567 = new BitSet(new long[]{0x7014848000947C40L,0x7BB4DDE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map2586 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map2593 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2597 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map2600 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map2606 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map2609 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name2633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs2667 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004030700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2677 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2680 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004030700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2684 = new BitSet(new long[]{0x7014848000947C42L,0x7BB4DCE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs2711 = new BitSet(new long[]{0x7014848000B47C42L,0x7BB4DCE004030700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs2713 = new BitSet(new long[]{0x7014848000947C42L,0x7BB4DCE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_property_in_sass_map_pair2749 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair2751 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2754 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair2757 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2759 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair2762 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair2765 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair2768 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2810 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2813 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2815 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule2836 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_rule2840 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2842 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2847 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2851 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule2854 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2856 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule2859 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2861 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule2864 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule2882 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_rule2894 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule2901 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_rule2903 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_rule2906 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_rule2916 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule2923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations2957 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations2959 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations2965 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations2970 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations2974 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE064030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_declarations2976 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_ws_in_declarations2982 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0x7BBEDCE064010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declaration_in_declarations2985 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations2991 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declarations2995 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations2997 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_ws_in_declarations3003 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3015 = new BitSet(new long[]{0x0000000000200002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declarations3017 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration3046 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration3059 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration3071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration3134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3146 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration3185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration3197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3210 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3213 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration3233 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_declaration3236 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration3239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration3255 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration3265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration3275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration3285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration3295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration3305 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration3315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration3325 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration3333 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3367 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3370 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3373 = new BitSet(new long[]{0x0804CC00A0280080L,0x0008000060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup3375 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup3378 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup3385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector3406 = new BitSet(new long[]{0x0804C400A0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3408 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3413 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_ws_in_selector3419 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_combinator_in_selector3422 = new BitSet(new long[]{0x0804C400A0280080L,0x0008000020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_selector3424 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_selector3428 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector3431 = new BitSet(new long[]{0x0000080000200002L,0x0000000040020000L,0x0000000000040010L});
	public static final BitSet FOLLOW_combinator_in_selector3446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3498 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3504 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3518 = new BitSet(new long[]{0x0800C000A0080080L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3521 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3526 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3530 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence3536 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence3549 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3561 = new BitSet(new long[]{0x0800C000A0080080L,0x0008000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence3564 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence3571 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence3573 = new BitSet(new long[]{0x0800C000A0280082L,0x0008000000020002L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred3598 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred3602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred3606 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred3610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred3614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred3618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred3622 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred3628 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector3670 = new BitSet(new long[]{0x0004040000000000L,0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_elementName_in_typeSelector3674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix3689 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix3693 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix3697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent3729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent3743 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent3757 = new BitSet(new long[]{0x0004000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent3775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent3784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent3796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent3808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId3832 = new BitSet(new long[]{0x0004800000000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId3837 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId3859 = new BitSet(new long[]{0x0000000000000080L,0x0000000000008000L});
	public static final BitSet FOLLOW_NAME_in_cssId3875 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId3895 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass3946 = new BitSet(new long[]{0x0004840000000080L,0x0000000000200200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass3974 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass3990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass4006 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass4022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass4040 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute4106 = new BitSet(new long[]{0x0004000000200000L,0x0000000020020000L,0x0000000000040002L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute4113 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4116 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute4127 = new BitSet(new long[]{0x0020000410600200L,0x0000000401020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4129 = new BitSet(new long[]{0x0020000410400200L,0x0000000401000000L});
	public static final BitSet FOLLOW_set_in_slAttribute4163 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040004L});
	public static final BitSet FOLLOW_ws_in_slAttribute4343 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute4362 = new BitSet(new long[]{0x0000000000200000L,0x0000000400020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_slAttribute4380 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute4405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName4421 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo4493 = new BitSet(new long[]{0x0004840000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_set_in_pseudo4556 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4613 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4616 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DDF85C430706L,0x00000000000627F6L});
	public static final BitSet FOLLOW_ws_in_pseudo4618 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DDF85C410706L,0x00000000000227F6L});
	public static final BitSet FOLLOW_expression_in_pseudo4624 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4626 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo4632 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo4700 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo4738 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4743 = new BitSet(new long[]{0x0804C400A0280080L,0x0008010020020202L,0x0000000000040002L});
	public static final BitSet FOLLOW_ws_in_pseudo4745 = new BitSet(new long[]{0x0804C400A0080080L,0x0008010020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_pseudo4748 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo4795 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_pseudo4797 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo4800 = new BitSet(new long[]{0x0804CC00A0280080L,0x0008010060020202L,0x0000000000040012L});
	public static final BitSet FOLLOW_ws_in_pseudo4802 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008010060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo4805 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo4808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4846 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4849 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4851 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4854 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4856 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration4859 = new BitSet(new long[]{0x0008000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4862 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration4865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration4877 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004010700L,0x00000000000207C0L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration4880 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4882 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration4885 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration4887 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration4890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue4924 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue4932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue4954 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate5023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI5124 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio5169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression5186 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_expression5218 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_expression5223 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_expression5226 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_expression5228 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_expression5237 = new BitSet(new long[]{0xF014C5A240B47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_unaryOperator_in_term5262 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF81C430506L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_term5264 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF81C410506L,0x00000000000227F4L});
	public static final BitSet FOLLOW_function_in_term5293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term5306 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term5318 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term5330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term5342 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term5354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term5366 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term5378 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term5390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term5402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term5414 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term5426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term5438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term5455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term5467 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_term5469 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term5490 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term5505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term5517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term5529 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term5543 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term5557 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term5571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term5585 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term5599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol5626 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function5642 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_function5644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_function5649 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_function5651 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributes_in_function5678 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function5709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName5761 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName5763 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5767 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName5770 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName5772 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5796 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5799 = new BitSet(new long[]{0x0000000000100000L,0x8000000000000000L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes5803 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes5809 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5812 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes5815 = new BitSet(new long[]{0x0000000000300002L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttributes5819 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute5856 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5858 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute5861 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttribute5867 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute5870 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute5887 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute5899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5922 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName5925 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName5927 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName5947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue5970 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6002 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6007 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue6010 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue6012 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6021 = new BitSet(new long[]{0xF014C5A240A47CE2L,0x7BB4DCF85C430706L,0x00000000000627F5L});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue6042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor6056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6116 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6118 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6121 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6123 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration6148 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6150 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration6153 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6155 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration6158 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6162 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration6165 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration6171 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration6174 = new BitSet(new long[]{0x0000000000200002L,0x0040200000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_set_in_cp_variable6214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable6398 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6428 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6447 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list6450 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list6452 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list6455 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression6491 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_expression6493 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6496 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_expression6498 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression6501 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6517 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6541 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression6544 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6546 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6550 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6569 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression6572 = new BitSet(new long[]{0xF01CDDA246A47CE2L,0x7BB4DCF85C63074FL,0x00000000000627F4L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression6590 = new BitSet(new long[]{0x7014848000B47C40L,0x7BB4DDE004030700L,0x00000000000607C4L});
	public static final BitSet FOLLOW_ws_in_cp_expression6592 = new BitSet(new long[]{0x7014848000947C40L,0x7BB4DDE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression6595 = new BitSet(new long[]{0x7014848000947C40L,0x7BB4DDE004010700L,0x00000000000207C4L});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression6597 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression6600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator6621 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator6625 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator6630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator6634 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator6638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator6642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator6646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator6650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom6676 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6678 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom6709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom6725 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6727 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom6731 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom6733 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom6738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6770 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions6777 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions6779 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6813 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6855 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_cp_math_expression6858 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression6868 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression6871 = new BitSet(new long[]{0x0000000000200002L,0x0000000040020200L,0x0000000000040003L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom6904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom6912 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom6923 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6925 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom6931 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6933 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom6936 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom6938 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom6941 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration6981 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration6988 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration6990 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration6995 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration6998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7001 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7003 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7006 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7009 = new BitSet(new long[]{0x0404000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7014 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration7017 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration7041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7043 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration7045 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7048 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration7051 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7053 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration7056 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration7059 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration7073 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration7076 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call7112 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7114 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call7118 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call7122 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call7126 = new BitSet(new long[]{0x0000000020280002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call7134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7149 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7151 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7154 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call7182 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7184 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call7186 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call7192 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DDF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7194 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DDF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call7197 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call7200 = new BitSet(new long[]{0x0400000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call7205 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call7208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block7237 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE26C030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7239 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block7242 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE26C010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block7253 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block7268 = new BitSet(new long[]{0x0004000000200000L,0x0000080208020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block7270 = new BitSet(new long[]{0x0004000000000000L,0x0000080208000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block7282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name7303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7334 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args7338 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7346 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args7349 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000000L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args7355 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args7357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg7391 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7393 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg7396 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7398 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7401 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg7413 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg7421 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7468 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7472 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7482 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list7485 = new BitSet(new long[]{0x0000000001100002L,0x8000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7492 = new BitSet(new long[]{0x0000000001200002L,0x0000000000020010L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7500 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_set_in_cp_args_list7508 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list7533 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list7541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg7564 = new BitSet(new long[]{0x0000000000280002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7566 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg7571 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_cp_arg7573 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg7576 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_cp_arg7578 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg7591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded7614 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7616 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7619 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7622 = new BitSet(new long[]{0x0004000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded7626 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded7630 = new BitSet(new long[]{0x0000000000200000L,0x0000000000220040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded7633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200040L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded7636 = new BitSet(new long[]{0x0004000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_NOT_in_less_condition7662 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7664 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition7673 = new BitSet(new long[]{0x7014008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_condition7675 = new BitSet(new long[]{0x7014008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition7702 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition7706 = new BitSet(new long[]{0x0000180000200000L,0x0000010001020009L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_condition7709 = new BitSet(new long[]{0x0000180000000000L,0x0000010001000009L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition7713 = new BitSet(new long[]{0xF01CC5A240A47CE0L,0x7BB4DCF85C430746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_less_condition7715 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition7718 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition7736 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition7758 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7760 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition7763 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7765 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition7768 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition7770 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition7773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name7795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp7849 = new BitSet(new long[]{0x8004000040000082L,0x0000000000000200L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp7852 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation7895 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation7897 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7899 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation7902 = new BitSet(new long[]{0x0000000000200000L,0x0000000200020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation7904 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation7907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp7934 = new BitSet(new long[]{0x8004800040000002L,0x0000000000000200L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp7937 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var7984 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var7986 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var7988 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var7990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties8030 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8032 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties8035 = new BitSet(new long[]{0xF414C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8037 = new BitSet(new long[]{0xF414C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties8041 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8043 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties8048 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties8050 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties8053 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties8055 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties8058 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend8079 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8081 = new BitSet(new long[]{0x0804C400A0080080L,0x0008000020000202L,0x0000000000000002L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend8083 = new BitSet(new long[]{0x0000000000200002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_extend8086 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend8088 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector8111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug8132 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_debug8142 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug8144 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error8165 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_error8167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_STRING_in_sass_error8169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control8190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control8194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control8198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control8202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if8223 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_if8225 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if8228 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8230 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if8233 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_if8236 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if8239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8262 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8264 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else8281 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8283 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else8288 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else8295 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_sass_else8298 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else8301 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8303 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else8306 = new BitSet(new long[]{0x0000000000200002L,0x0001800000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_else8309 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else8312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression8335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for8356 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8358 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for8360 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8362 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8366 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8370 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8372 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8374 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for8378 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8382 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C410746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for8384 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_for8386 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for8389 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each8410 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8412 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each8414 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8416 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each8420 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8424 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each8426 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each8428 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each8431 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8452 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8464 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables8467 = new BitSet(new long[]{0x7010008000A47C40L,0x7BB4DCE004030500L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables8469 = new BitSet(new long[]{0x7010008000847C40L,0x7BB4DCE004010500L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables8472 = new BitSet(new long[]{0x0000000000300002L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while8497 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8499 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while8501 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_while8503 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while8506 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block8527 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_control_block8529 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block8532 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block8535 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration8577 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8579 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration8581 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration8586 = new BitSet(new long[]{0x7014008001A47C40L,0x7BB4DDE004030510L,0x00000000000607C0L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8588 = new BitSet(new long[]{0x7014008001847C40L,0x7BB4DDE004010510L,0x00000000000207C0L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration8591 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration8594 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8596 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration8599 = new BitSet(new long[]{0x7814CC80A0AC7CC0L,0xFBBEDCE264030702L,0x00000000000607D2L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration8601 = new BitSet(new long[]{0x7814CC80A08C7CC0L,0xFBBEDCE264010702L,0x00000000000207D2L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration8604 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration8607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name8628 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return8649 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return8651 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return8653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content8674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types8693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when8716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and8735 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or8753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only8771 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3365 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3429 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3432 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3483 = new BitSet(new long[]{0x7014848000847C40L,0x7BB4DCE004210540L,0x00000000000207C0L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css3605 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css3608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css3706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css3713 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css3715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css3720 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css3723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css3726 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css3734 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css3744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css3762 = new BitSet(new long[]{0x0008000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3765 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css3768 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css3772 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css3775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css3798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css3833 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0x7FFFFFFDFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_SEMI_in_synpred8_Css3845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred9_Css3953 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred9_Css3956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31252 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred10_Css31255 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred11_Css31330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred11_Css31337 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred11_Css31339 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_HASH_in_synpred11_Css31344 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31347 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred11_Css31350 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred11_Css31358 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0x7FFFFFFDFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred11_Css31370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred12_Css31396 = new BitSet(new long[]{0x0000000000200000L,0x8000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31398 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SEMI_in_synpred12_Css31401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred13_Css31420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred14_Css31448 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred14_Css31450 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred14_Css31453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred15_Css31470 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css32671 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred16_Css32674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred17_Css33043 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred18_Css33055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred19_Css33068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred20_Css33082 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33085 = new BitSet(new long[]{0x0804CC00A0080080L,0x0008000060000202L,0x0000000000000012L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred20_Css33087 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred20_Css33096 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred20_Css33100 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33102 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred20_Css33105 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33107 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred20_Css33110 = new BitSet(new long[]{0x0004000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33112 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred20_Css33115 = new BitSet(new long[]{0x0000000000200000L,0x0000010000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33117 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred20_Css33120 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred20_Css33125 = new BitSet(new long[]{0x0400000000200000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css33128 = new BitSet(new long[]{0x0400000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred20_Css33131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred21_Css33143 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred22_Css33160 = new BitSet(new long[]{0x0000000000280000L,0x0000000000020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css33162 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred22_Css33165 = new BitSet(new long[]{0xFBFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x00000000003FFFFFL});
	public static final BitSet FOLLOW_set_in_synpred22_Css33177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred23_Css33194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred24_Css33206 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred25_Css33227 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33510 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred26_Css33513 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred27_Css33546 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33553 = new BitSet(new long[]{0x0800C000A0080000L,0x0008000000000002L});
	public static final BitSet FOLLOW_esPred_in_synpred28_Css33556 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred29_Css33667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css35193 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css35198 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_operator_in_synpred30_Css35201 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css35203 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred30_Css35212 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred31_Css35285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000020040L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css35287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred31_Css35290 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred32_Css35843 = new BitSet(new long[]{0x0000000000280000L,0x0000000001020000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css35845 = new BitSet(new long[]{0x0000000000080000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_synpred32_Css35848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred33_Css35883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35977 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred34_Css35985 = new BitSet(new long[]{0xF014C5A240A47CE0L,0x7BB4DCF85C430706L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css35987 = new BitSet(new long[]{0xF014C5A240847CE0L,0x7BB4DCF85C410706L,0x00000000000227F4L});
	public static final BitSet FOLLOW_term_in_synpred34_Css35996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36436 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred36_Css36439 = new BitSet(new long[]{0xF41CC5A240A47CE0L,0x7BB4DCF85C630746L,0x00000000000627F4L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36441 = new BitSet(new long[]{0xF41CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_in_synpred36_Css36444 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred37_Css36511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36534 = new BitSet(new long[]{0x0004180006000000L,0x0000000000000009L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred38_Css36537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred39_Css36563 = new BitSet(new long[]{0xF01CC5A240847CE0L,0x7BB4DCF85C610746L,0x00000000000227F4L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred39_Css36566 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred40_Css36706 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred41_Css36839 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000200L,0x0000000000000003L});
	public static final BitSet FOLLOW_set_in_synpred41_Css36842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred42_Css37131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css37139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_LPAREN_in_synpred43_Css37142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred44_Css37258 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css38457 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred45_Css38460 = new BitSet(new long[]{0x0000000000000002L});
}
