# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

#IMPORTANT: we got messages per *.jar like:
#WARNING [org.netbeans.core.startup.InstalledFileLocatorImpl]: module org.netbeans.libs.clank in /opt/netbeans/cnd does not own modules/ext/org-clang-lex.jar at org.netbeans.LocaleVariants.findLogicalPath(LocaleVariants.java:271)
#release.external/*.jar used for code assistance
release.external/org-clang-arcmigrate.jar=modules/ext/org-clang-arcmigrate.jar
release.external/org-clang-ast.jar=modules/ext/org-clang-ast.jar
release.external/org-clang-basic.jar=modules/ext/org-clang-basic.jar
release.external/org-clang-codegen.jar=modules/ext/org-clang-codegen.jar
release.external/org-clang-driver.jar=modules/ext/org-clang-driver.jar
release.external/org-clang-frontend.jar=modules/ext/org-clang-frontend.jar
release.external/org-clang-frontendtool.jar=modules/ext/org-clang-frontendtool.jar
release.external/org-clang-lex.jar=modules/ext/org-clang-lex.jar
release.external/org-clang-parse.jar=modules/ext/org-clang-parse.jar
release.external/org-clang-rewrite.jar=modules/ext/org-clang-rewrite.jar
release.external/org-clang-sema.jar=modules/ext/org-clang-sema.jar
release.external/org-clang-serialization.jar=modules/ext/org-clang-serialization.jar
release.external/org-clang-staticanalyzer.jar=modules/ext/org-clang-staticanalyzer.jar
release.external/org-clang-tools-driver.jar=modules/ext/org-clang-tools-driver.jar
release.external/org-clang-tools-services.jar=modules/ext/org-clang-tools-services.jar
release.external/org-clank-java.jar=modules/ext/org-clank-java.jar
release.external/org-llvm-adtsupport.jar=modules/ext/org-llvm-adtsupport.jar
release.external/org-llvm-bitcode.jar=modules/ext/org-llvm-bitcode.jar
release.external/org-llvm-option.jar=modules/ext/org-llvm-option.jar
release.external/org-llvm-utils.jar=modules/ext/org-llvm-utils.jar

is.autoload=true
javac.compilerargs=-Xlint -Xlint:-serial
javac.source=1.7
sigtest.gen.fail.on.error=false

#properties below are used to provide code assistance for clank built from sputnik
file.reference.org-clang-arcmigrate.jar=external/org-clang-arcmigrate.jar
file.reference.org-clang-ast.jar=external/org-clang-ast.jar
file.reference.org-clang-basic.jar=external/org-clang-basic.jar
file.reference.org-clang-codegen.jar=external/org-clang-codegen.jar
file.reference.org-clang-driver.jar=external/org-clang-driver.jar
file.reference.org-clang-frontend.jar=external/org-clang-frontend.jar
file.reference.org-clang-frontendtool.jar=external/org-clang-frontendtool.jar
file.reference.org-clang-lex.jar=external/org-clang-lex.jar
file.reference.org-clang-parse.jar=external/org-clang-parse.jar
file.reference.org-clang-rewrite.jar=external/org-clang-rewrite.jar
file.reference.org-clang-sema.jar=external/org-clang-sema.jar
file.reference.org-clang-serialization.jar=external/org-clang-serialization.jar
file.reference.org-clang-staticanalyzer.jar=external/org-clang-staticanalyzer.jar
file.reference.org-clang-tools-driver.jar=external/org-clang-tools-driver.jar
file.reference.org-clang-tools-services.jar=external/org-clang-tools-services.jar
file.reference.org-clank-java.jar=external/org-clank-java.jar
file.reference.org-llvm-adtsupport.jar=external/org-llvm-adtsupport.jar
file.reference.org-llvm-bitcode.jar=external/org-llvm-bitcode.jar
file.reference.org-llvm-option.jar=external/org-llvm-option.jar
file.reference.org-llvm-utils.jar=external/org-llvm-utils.jar

javadoc.reference.org-clang-arcmigrate.jar=${sputnik}/modules/org.clang.arcmigrate/src
javadoc.reference.org-clang-ast.jar=${sputnik}/modules/org.clang.ast/src
javadoc.reference.org-clang-basic.jar=${sputnik}/modules/org.clang.basic/src
javadoc.reference.org-clang-codegen.jar=${sputnik}/modules/org.clang.codegen/src
javadoc.reference.org-clang-driver.jar=${sputnik}/modules/org.clang.driver/src
javadoc.reference.org-clang-frontend.jar=${sputnik}/modules/org.clang.frontend/src
javadoc.reference.org-clang-frontendtool.jar=${sputnik}/modules/org.clang.frontendtool/src
javadoc.reference.org-clang-lex.jar=${sputnik}/modules/org.clang.lex/src
javadoc.reference.org-clang-parse.jar=${sputnik}/modules/org.clang.parse/src
javadoc.reference.org-clang-rewrite.jar=${sputnik}/modules/org.clang.rewrite/src
javadoc.reference.org-clang-sema.jar=${sputnik}/modules/org.clang.sema/src
javadoc.reference.org-clang-serialization.jar=${sputnik}/modules/org.clang.serialization/src
javadoc.reference.org-clang-staticanalyzer.jar=${sputnik}/modules/org.clang.staticanalyzer/src
javadoc.reference.org-clang-tools-driver.jar=${sputnik}/modules/org.clang.tools.driver/src
javadoc.reference.org-clang-tools-services.jar=${sputnik}/modules/org.clang.tools.services/src
javadoc.reference.org-clank-java.jar=${sputnik}/modules/org.clank.java/src
javadoc.reference.org-llvm-adtsupport.jar=${sputnik}/modules/org.llvm.adtsupport/src
javadoc.reference.org-llvm-bitcode.jar=${sputnik}/modules/org.llvm.bitcode/src
javadoc.reference.org-llvm-option.jar=${sputnik}/modules/org.llvm.option/src
javadoc.reference.org-llvm-utils.jar=${sputnik}/modules/org.llvm.utils/src

source.reference.org-clang-arcmigrate.jar=${sputnik}/modules/org.clang.arcmigrate/src
source.reference.org-clang-ast.jar=${sputnik}/modules/org.clang.ast/src
source.reference.org-clang-basic.jar=${sputnik}/modules/org.clang.basic/src
source.reference.org-clang-codegen.jar=${sputnik}/modules/org.clang.codegen/src
source.reference.org-clang-driver.jar=${sputnik}/modules/org.clang.driver/src
source.reference.org-clang-frontend.jar=${sputnik}/modules/org.clang.frontend/src
source.reference.org-clang-frontendtool.jar=${sputnik}/modules/org.clang.frontendtool/src
source.reference.org-clang-lex.jar=${sputnik}/modules/org.clang.lex/src
source.reference.org-clang-parse.jar=${sputnik}/modules/org.clang.parse/src
source.reference.org-clang-rewrite.jar=${sputnik}/modules/org.clang.rewrite/src
source.reference.org-clang-sema.jar=${sputnik}/modules/org.clang.sema/src
source.reference.org-clang-serialization.jar=${sputnik}/modules/org.clang.serialization/src
source.reference.org-clang-staticanalyzer.jar=${sputnik}/modules/org.clang.staticanalyzer/src
source.reference.org-clang-tools-driver.jar=${sputnik}/modules/org.clang.tools.driver/src
source.reference.org-clang-tools-services.jar=${sputnik}/modules/org.clang.tools.services/src
source.reference.org-clank-java.jar=${sputnik}/modules/org.clank.java/src
source.reference.org-llvm-adtsupport.jar=${sputnik}/modules/org.llvm.adtsupport/src
source.reference.org-llvm-bitcode.jar=${sputnik}/modules/org.llvm.bitcode/src
source.reference.org-llvm-option.jar=${sputnik}/modules/org.llvm.option/src
source.reference.org-llvm-utils.jar=${sputnik}/modules/org.llvm.utils/src

#to have java navigation support between cnd ant clank sources
#set sputnik variable in nbproject/private/private.properties file to the value of your $SPUTNIK
#sputnik=abs-path-to-sputnik

#set sputnik property to copy clank jars from ${SPUTNIK} instead of downloading
#sputnik=/your/asb/path/to/sputnik
#copy.clank.jars=true

spec.version.base=0.2.32
